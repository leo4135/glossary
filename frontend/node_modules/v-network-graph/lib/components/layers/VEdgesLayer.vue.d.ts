import { Edge, StrokeStyle, EdgePosition, Point } from '../..';
import { DefineComponent, ComponentOptionsMixin, PublicProps, ComponentProvideOptions } from 'vue';
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: {
        'edge-overlay'?(_: {
            edgeId: string;
            edge: Edge;
            edges: {
                [x: string]: Edge;
            };
            isSummarized: false;
            stroke: StrokeStyle;
            position: EdgePosition;
            center: Point;
            hovered: boolean;
            selected: boolean;
            scale: number;
            length: number;
            pointAtLength: (distance: number) => Point;
        }): any;
    };
    refs: {};
    rootEl: any;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: DefineComponent<{}, {}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, ComponentProvideOptions, true, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
