import {
  Fragment,
  TransitionGroup,
  computed,
  createBaseVNode,
  createBlock,
  createCommentVNode,
  createElementBlock,
  createSlots,
  createTextVNode,
  createVNode,
  defineComponent,
  guardReactiveProps,
  inject,
  isReactive,
  mergeProps,
  nextTick,
  normalizeClass,
  normalizeProps,
  normalizeStyle,
  onMounted,
  onUnmounted,
  openBlock,
  provide,
  reactive,
  readonly,
  ref,
  renderList,
  renderSlot,
  resolveDynamicComponent,
  toDisplayString,
  toHandlers,
  toRef,
  unref,
  useAttrs,
  useSlots,
  watch,
  watchEffect,
  withCtx,
  withModifiers
} from "./chunk-VT7FWPCL.js";

// node_modules/lodash-es/_freeGlobal.js
var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
var freeGlobal_default = freeGlobal;

// node_modules/lodash-es/_root.js
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root = freeGlobal_default || freeSelf || Function("return this")();
var root_default = root;

// node_modules/lodash-es/_Symbol.js
var Symbol2 = root_default.Symbol;
var Symbol_default = Symbol2;

// node_modules/lodash-es/_getRawTag.js
var objectProto = Object.prototype;
var hasOwnProperty = objectProto.hasOwnProperty;
var nativeObjectToString = objectProto.toString;
var symToStringTag = Symbol_default ? Symbol_default.toStringTag : void 0;
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
  try {
    value[symToStringTag] = void 0;
    var unmasked = true;
  } catch (e) {
  }
  var result2 = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result2;
}
var getRawTag_default = getRawTag;

// node_modules/lodash-es/_objectToString.js
var objectProto2 = Object.prototype;
var nativeObjectToString2 = objectProto2.toString;
function objectToString(value) {
  return nativeObjectToString2.call(value);
}
var objectToString_default = objectToString;

// node_modules/lodash-es/_baseGetTag.js
var nullTag = "[object Null]";
var undefinedTag = "[object Undefined]";
var symToStringTag2 = Symbol_default ? Symbol_default.toStringTag : void 0;
function baseGetTag(value) {
  if (value == null) {
    return value === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag2 && symToStringTag2 in Object(value) ? getRawTag_default(value) : objectToString_default(value);
}
var baseGetTag_default = baseGetTag;

// node_modules/lodash-es/isObjectLike.js
function isObjectLike(value) {
  return value != null && typeof value == "object";
}
var isObjectLike_default = isObjectLike;

// node_modules/lodash-es/isSymbol.js
var symbolTag = "[object Symbol]";
function isSymbol(value) {
  return typeof value == "symbol" || isObjectLike_default(value) && baseGetTag_default(value) == symbolTag;
}
var isSymbol_default = isSymbol;

// node_modules/lodash-es/_baseToNumber.js
var NAN = 0 / 0;
function baseToNumber(value) {
  if (typeof value == "number") {
    return value;
  }
  if (isSymbol_default(value)) {
    return NAN;
  }
  return +value;
}
var baseToNumber_default = baseToNumber;

// node_modules/lodash-es/_arrayMap.js
function arrayMap(array, iteratee2) {
  var index = -1, length = array == null ? 0 : array.length, result2 = Array(length);
  while (++index < length) {
    result2[index] = iteratee2(array[index], index, array);
  }
  return result2;
}
var arrayMap_default = arrayMap;

// node_modules/lodash-es/isArray.js
var isArray = Array.isArray;
var isArray_default = isArray;

// node_modules/lodash-es/_baseToString.js
var INFINITY = 1 / 0;
var symbolProto = Symbol_default ? Symbol_default.prototype : void 0;
var symbolToString = symbolProto ? symbolProto.toString : void 0;
function baseToString(value) {
  if (typeof value == "string") {
    return value;
  }
  if (isArray_default(value)) {
    return arrayMap_default(value, baseToString) + "";
  }
  if (isSymbol_default(value)) {
    return symbolToString ? symbolToString.call(value) : "";
  }
  var result2 = value + "";
  return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
}
var baseToString_default = baseToString;

// node_modules/lodash-es/_createMathOperation.js
function createMathOperation(operator, defaultValue) {
  return function(value, other) {
    var result2;
    if (value === void 0 && other === void 0) {
      return defaultValue;
    }
    if (value !== void 0) {
      result2 = value;
    }
    if (other !== void 0) {
      if (result2 === void 0) {
        return other;
      }
      if (typeof value == "string" || typeof other == "string") {
        value = baseToString_default(value);
        other = baseToString_default(other);
      } else {
        value = baseToNumber_default(value);
        other = baseToNumber_default(other);
      }
      result2 = operator(value, other);
    }
    return result2;
  };
}
var createMathOperation_default = createMathOperation;

// node_modules/lodash-es/add.js
var add = createMathOperation_default(function(augend, addend) {
  return augend + addend;
}, 0);
var add_default = add;

// node_modules/lodash-es/_trimmedEndIndex.js
var reWhitespace = /\s/;
function trimmedEndIndex(string) {
  var index = string.length;
  while (index-- && reWhitespace.test(string.charAt(index))) {
  }
  return index;
}
var trimmedEndIndex_default = trimmedEndIndex;

// node_modules/lodash-es/_baseTrim.js
var reTrimStart = /^\s+/;
function baseTrim(string) {
  return string ? string.slice(0, trimmedEndIndex_default(string) + 1).replace(reTrimStart, "") : string;
}
var baseTrim_default = baseTrim;

// node_modules/lodash-es/isObject.js
function isObject(value) {
  var type = typeof value;
  return value != null && (type == "object" || type == "function");
}
var isObject_default = isObject;

// node_modules/lodash-es/toNumber.js
var NAN2 = 0 / 0;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
function toNumber(value) {
  if (typeof value == "number") {
    return value;
  }
  if (isSymbol_default(value)) {
    return NAN2;
  }
  if (isObject_default(value)) {
    var other = typeof value.valueOf == "function" ? value.valueOf() : value;
    value = isObject_default(other) ? other + "" : other;
  }
  if (typeof value != "string") {
    return value === 0 ? value : +value;
  }
  value = baseTrim_default(value);
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN2 : +value;
}
var toNumber_default = toNumber;

// node_modules/lodash-es/toFinite.js
var INFINITY2 = 1 / 0;
var MAX_INTEGER = 17976931348623157e292;
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber_default(value);
  if (value === INFINITY2 || value === -INFINITY2) {
    var sign = value < 0 ? -1 : 1;
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}
var toFinite_default = toFinite;

// node_modules/lodash-es/toInteger.js
function toInteger(value) {
  var result2 = toFinite_default(value), remainder = result2 % 1;
  return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
}
var toInteger_default = toInteger;

// node_modules/lodash-es/after.js
var FUNC_ERROR_TEXT = "Expected a function";
function after(n, func) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  n = toInteger_default(n);
  return function() {
    if (--n < 1) {
      return func.apply(this, arguments);
    }
  };
}
var after_default = after;

// node_modules/lodash-es/identity.js
function identity(value) {
  return value;
}
var identity_default = identity;

// node_modules/lodash-es/isFunction.js
var asyncTag = "[object AsyncFunction]";
var funcTag = "[object Function]";
var genTag = "[object GeneratorFunction]";
var proxyTag = "[object Proxy]";
function isFunction(value) {
  if (!isObject_default(value)) {
    return false;
  }
  var tag = baseGetTag_default(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_default = isFunction;

// node_modules/lodash-es/_coreJsData.js
var coreJsData = root_default["__core-js_shared__"];
var coreJsData_default = coreJsData;

// node_modules/lodash-es/_isMasked.js
var maskSrcKey = function() {
  var uid = /[^.]+$/.exec(coreJsData_default && coreJsData_default.keys && coreJsData_default.keys.IE_PROTO || "");
  return uid ? "Symbol(src)_1." + uid : "";
}();
function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var isMasked_default = isMasked;

// node_modules/lodash-es/_toSource.js
var funcProto = Function.prototype;
var funcToString = funcProto.toString;
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {
    }
    try {
      return func + "";
    } catch (e) {
    }
  }
  return "";
}
var toSource_default = toSource;

// node_modules/lodash-es/_baseIsNative.js
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto2 = Function.prototype;
var objectProto3 = Object.prototype;
var funcToString2 = funcProto2.toString;
var hasOwnProperty2 = objectProto3.hasOwnProperty;
var reIsNative = RegExp(
  "^" + funcToString2.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function baseIsNative(value) {
  if (!isObject_default(value) || isMasked_default(value)) {
    return false;
  }
  var pattern = isFunction_default(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource_default(value));
}
var baseIsNative_default = baseIsNative;

// node_modules/lodash-es/_getValue.js
function getValue(object, key) {
  return object == null ? void 0 : object[key];
}
var getValue_default = getValue;

// node_modules/lodash-es/_getNative.js
function getNative(object, key) {
  var value = getValue_default(object, key);
  return baseIsNative_default(value) ? value : void 0;
}
var getNative_default = getNative;

// node_modules/lodash-es/_WeakMap.js
var WeakMap = getNative_default(root_default, "WeakMap");
var WeakMap_default = WeakMap;

// node_modules/lodash-es/_metaMap.js
var metaMap = WeakMap_default && new WeakMap_default();
var metaMap_default = metaMap;

// node_modules/lodash-es/_baseSetData.js
var baseSetData = !metaMap_default ? identity_default : function(func, data) {
  metaMap_default.set(func, data);
  return func;
};
var baseSetData_default = baseSetData;

// node_modules/lodash-es/_baseCreate.js
var objectCreate = Object.create;
var baseCreate = /* @__PURE__ */ function() {
  function object() {
  }
  return function(proto) {
    if (!isObject_default(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result2 = new object();
    object.prototype = void 0;
    return result2;
  };
}();
var baseCreate_default = baseCreate;

// node_modules/lodash-es/_createCtor.js
function createCtor(Ctor) {
  return function() {
    var args = arguments;
    switch (args.length) {
      case 0:
        return new Ctor();
      case 1:
        return new Ctor(args[0]);
      case 2:
        return new Ctor(args[0], args[1]);
      case 3:
        return new Ctor(args[0], args[1], args[2]);
      case 4:
        return new Ctor(args[0], args[1], args[2], args[3]);
      case 5:
        return new Ctor(args[0], args[1], args[2], args[3], args[4]);
      case 6:
        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
      case 7:
        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
    }
    var thisBinding = baseCreate_default(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
    return isObject_default(result2) ? result2 : thisBinding;
  };
}
var createCtor_default = createCtor;

// node_modules/lodash-es/_createBind.js
var WRAP_BIND_FLAG = 1;
function createBind(func, bitmask, thisArg) {
  var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor_default(func);
  function wrapper() {
    var fn2 = this && this !== root_default && this instanceof wrapper ? Ctor : func;
    return fn2.apply(isBind ? thisArg : this, arguments);
  }
  return wrapper;
}
var createBind_default = createBind;

// node_modules/lodash-es/_apply.js
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}
var apply_default = apply;

// node_modules/lodash-es/_composeArgs.js
var nativeMax = Math.max;
function composeArgs(args, partials, holders, isCurried) {
  var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array(leftLength + rangeLength), isUncurried = !isCurried;
  while (++leftIndex < leftLength) {
    result2[leftIndex] = partials[leftIndex];
  }
  while (++argsIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result2[holders[argsIndex]] = args[argsIndex];
    }
  }
  while (rangeLength--) {
    result2[leftIndex++] = args[argsIndex++];
  }
  return result2;
}
var composeArgs_default = composeArgs;

// node_modules/lodash-es/_composeArgsRight.js
var nativeMax2 = Math.max;
function composeArgsRight(args, partials, holders, isCurried) {
  var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax2(argsLength - holdersLength, 0), result2 = Array(rangeLength + rightLength), isUncurried = !isCurried;
  while (++argsIndex < rangeLength) {
    result2[argsIndex] = args[argsIndex];
  }
  var offset = argsIndex;
  while (++rightIndex < rightLength) {
    result2[offset + rightIndex] = partials[rightIndex];
  }
  while (++holdersIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result2[offset + holders[holdersIndex]] = args[argsIndex++];
    }
  }
  return result2;
}
var composeArgsRight_default = composeArgsRight;

// node_modules/lodash-es/_countHolders.js
function countHolders(array, placeholder) {
  var length = array.length, result2 = 0;
  while (length--) {
    if (array[length] === placeholder) {
      ++result2;
    }
  }
  return result2;
}
var countHolders_default = countHolders;

// node_modules/lodash-es/_baseLodash.js
function baseLodash() {
}
var baseLodash_default = baseLodash;

// node_modules/lodash-es/_LazyWrapper.js
var MAX_ARRAY_LENGTH = 4294967295;
function LazyWrapper(value) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__dir__ = 1;
  this.__filtered__ = false;
  this.__iteratees__ = [];
  this.__takeCount__ = MAX_ARRAY_LENGTH;
  this.__views__ = [];
}
LazyWrapper.prototype = baseCreate_default(baseLodash_default.prototype);
LazyWrapper.prototype.constructor = LazyWrapper;
var LazyWrapper_default = LazyWrapper;

// node_modules/lodash-es/noop.js
function noop() {
}
var noop_default = noop;

// node_modules/lodash-es/_getData.js
var getData = !metaMap_default ? noop_default : function(func) {
  return metaMap_default.get(func);
};
var getData_default = getData;

// node_modules/lodash-es/_realNames.js
var realNames = {};
var realNames_default = realNames;

// node_modules/lodash-es/_getFuncName.js
var objectProto4 = Object.prototype;
var hasOwnProperty3 = objectProto4.hasOwnProperty;
function getFuncName(func) {
  var result2 = func.name + "", array = realNames_default[result2], length = hasOwnProperty3.call(realNames_default, result2) ? array.length : 0;
  while (length--) {
    var data = array[length], otherFunc = data.func;
    if (otherFunc == null || otherFunc == func) {
      return data.name;
    }
  }
  return result2;
}
var getFuncName_default = getFuncName;

// node_modules/lodash-es/_LodashWrapper.js
function LodashWrapper(value, chainAll) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__chain__ = !!chainAll;
  this.__index__ = 0;
  this.__values__ = void 0;
}
LodashWrapper.prototype = baseCreate_default(baseLodash_default.prototype);
LodashWrapper.prototype.constructor = LodashWrapper;
var LodashWrapper_default = LodashWrapper;

// node_modules/lodash-es/_copyArray.js
function copyArray(source, array) {
  var index = -1, length = source.length;
  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}
var copyArray_default = copyArray;

// node_modules/lodash-es/_wrapperClone.js
function wrapperClone(wrapper) {
  if (wrapper instanceof LazyWrapper_default) {
    return wrapper.clone();
  }
  var result2 = new LodashWrapper_default(wrapper.__wrapped__, wrapper.__chain__);
  result2.__actions__ = copyArray_default(wrapper.__actions__);
  result2.__index__ = wrapper.__index__;
  result2.__values__ = wrapper.__values__;
  return result2;
}
var wrapperClone_default = wrapperClone;

// node_modules/lodash-es/wrapperLodash.js
var objectProto5 = Object.prototype;
var hasOwnProperty4 = objectProto5.hasOwnProperty;
function lodash(value) {
  if (isObjectLike_default(value) && !isArray_default(value) && !(value instanceof LazyWrapper_default)) {
    if (value instanceof LodashWrapper_default) {
      return value;
    }
    if (hasOwnProperty4.call(value, "__wrapped__")) {
      return wrapperClone_default(value);
    }
  }
  return new LodashWrapper_default(value);
}
lodash.prototype = baseLodash_default.prototype;
lodash.prototype.constructor = lodash;
var wrapperLodash_default = lodash;

// node_modules/lodash-es/_isLaziable.js
function isLaziable(func) {
  var funcName = getFuncName_default(func), other = wrapperLodash_default[funcName];
  if (typeof other != "function" || !(funcName in LazyWrapper_default.prototype)) {
    return false;
  }
  if (func === other) {
    return true;
  }
  var data = getData_default(other);
  return !!data && func === data[0];
}
var isLaziable_default = isLaziable;

// node_modules/lodash-es/_shortOut.js
var HOT_COUNT = 800;
var HOT_SPAN = 16;
var nativeNow = Date.now;
function shortOut(func) {
  var count = 0, lastCalled = 0;
  return function() {
    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(void 0, arguments);
  };
}
var shortOut_default = shortOut;

// node_modules/lodash-es/_setData.js
var setData = shortOut_default(baseSetData_default);
var setData_default = setData;

// node_modules/lodash-es/_getWrapDetails.js
var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/;
var reSplitDetails = /,? & /;
function getWrapDetails(source) {
  var match = source.match(reWrapDetails);
  return match ? match[1].split(reSplitDetails) : [];
}
var getWrapDetails_default = getWrapDetails;

// node_modules/lodash-es/_insertWrapDetails.js
var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
function insertWrapDetails(source, details) {
  var length = details.length;
  if (!length) {
    return source;
  }
  var lastIndex = length - 1;
  details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
  details = details.join(length > 2 ? ", " : " ");
  return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
}
var insertWrapDetails_default = insertWrapDetails;

// node_modules/lodash-es/constant.js
function constant(value) {
  return function() {
    return value;
  };
}
var constant_default = constant;

// node_modules/lodash-es/_defineProperty.js
var defineProperty = function() {
  try {
    var func = getNative_default(Object, "defineProperty");
    func({}, "", {});
    return func;
  } catch (e) {
  }
}();
var defineProperty_default = defineProperty;

// node_modules/lodash-es/_baseSetToString.js
var baseSetToString = !defineProperty_default ? identity_default : function(func, string) {
  return defineProperty_default(func, "toString", {
    "configurable": true,
    "enumerable": false,
    "value": constant_default(string),
    "writable": true
  });
};
var baseSetToString_default = baseSetToString;

// node_modules/lodash-es/_setToString.js
var setToString = shortOut_default(baseSetToString_default);
var setToString_default = setToString;

// node_modules/lodash-es/_arrayEach.js
function arrayEach(array, iteratee2) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (iteratee2(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}
var arrayEach_default = arrayEach;

// node_modules/lodash-es/_baseFindIndex.js
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
  while (fromRight ? index-- : ++index < length) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}
var baseFindIndex_default = baseFindIndex;

// node_modules/lodash-es/_baseIsNaN.js
function baseIsNaN(value) {
  return value !== value;
}
var baseIsNaN_default = baseIsNaN;

// node_modules/lodash-es/_strictIndexOf.js
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1, length = array.length;
  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}
var strictIndexOf_default = strictIndexOf;

// node_modules/lodash-es/_baseIndexOf.js
function baseIndexOf(array, value, fromIndex) {
  return value === value ? strictIndexOf_default(array, value, fromIndex) : baseFindIndex_default(array, baseIsNaN_default, fromIndex);
}
var baseIndexOf_default = baseIndexOf;

// node_modules/lodash-es/_arrayIncludes.js
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf_default(array, value, 0) > -1;
}
var arrayIncludes_default = arrayIncludes;

// node_modules/lodash-es/_updateWrapDetails.js
var WRAP_BIND_FLAG2 = 1;
var WRAP_BIND_KEY_FLAG = 2;
var WRAP_CURRY_FLAG = 8;
var WRAP_CURRY_RIGHT_FLAG = 16;
var WRAP_PARTIAL_FLAG = 32;
var WRAP_PARTIAL_RIGHT_FLAG = 64;
var WRAP_ARY_FLAG = 128;
var WRAP_REARG_FLAG = 256;
var WRAP_FLIP_FLAG = 512;
var wrapFlags = [
  ["ary", WRAP_ARY_FLAG],
  ["bind", WRAP_BIND_FLAG2],
  ["bindKey", WRAP_BIND_KEY_FLAG],
  ["curry", WRAP_CURRY_FLAG],
  ["curryRight", WRAP_CURRY_RIGHT_FLAG],
  ["flip", WRAP_FLIP_FLAG],
  ["partial", WRAP_PARTIAL_FLAG],
  ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
  ["rearg", WRAP_REARG_FLAG]
];
function updateWrapDetails(details, bitmask) {
  arrayEach_default(wrapFlags, function(pair) {
    var value = "_." + pair[0];
    if (bitmask & pair[1] && !arrayIncludes_default(details, value)) {
      details.push(value);
    }
  });
  return details.sort();
}
var updateWrapDetails_default = updateWrapDetails;

// node_modules/lodash-es/_setWrapToString.js
function setWrapToString(wrapper, reference, bitmask) {
  var source = reference + "";
  return setToString_default(wrapper, insertWrapDetails_default(source, updateWrapDetails_default(getWrapDetails_default(source), bitmask)));
}
var setWrapToString_default = setWrapToString;

// node_modules/lodash-es/_createRecurry.js
var WRAP_BIND_FLAG3 = 1;
var WRAP_BIND_KEY_FLAG2 = 2;
var WRAP_CURRY_BOUND_FLAG = 4;
var WRAP_CURRY_FLAG2 = 8;
var WRAP_PARTIAL_FLAG2 = 32;
var WRAP_PARTIAL_RIGHT_FLAG2 = 64;
function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
  var isCurry = bitmask & WRAP_CURRY_FLAG2, newHolders = isCurry ? holders : void 0, newHoldersRight = isCurry ? void 0 : holders, newPartials = isCurry ? partials : void 0, newPartialsRight = isCurry ? void 0 : partials;
  bitmask |= isCurry ? WRAP_PARTIAL_FLAG2 : WRAP_PARTIAL_RIGHT_FLAG2;
  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG2 : WRAP_PARTIAL_FLAG2);
  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
    bitmask &= ~(WRAP_BIND_FLAG3 | WRAP_BIND_KEY_FLAG2);
  }
  var newData = [
    func,
    bitmask,
    thisArg,
    newPartials,
    newHolders,
    newPartialsRight,
    newHoldersRight,
    argPos,
    ary2,
    arity
  ];
  var result2 = wrapFunc.apply(void 0, newData);
  if (isLaziable_default(func)) {
    setData_default(result2, newData);
  }
  result2.placeholder = placeholder;
  return setWrapToString_default(result2, func, bitmask);
}
var createRecurry_default = createRecurry;

// node_modules/lodash-es/_getHolder.js
function getHolder(func) {
  var object = func;
  return object.placeholder;
}
var getHolder_default = getHolder;

// node_modules/lodash-es/_isIndex.js
var MAX_SAFE_INTEGER = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
}
var isIndex_default = isIndex;

// node_modules/lodash-es/_reorder.js
var nativeMin = Math.min;
function reorder(array, indexes) {
  var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray_default(array);
  while (length--) {
    var index = indexes[length];
    array[length] = isIndex_default(index, arrLength) ? oldArray[index] : void 0;
  }
  return array;
}
var reorder_default = reorder;

// node_modules/lodash-es/_replaceHolders.js
var PLACEHOLDER = "__lodash_placeholder__";
function replaceHolders(array, placeholder) {
  var index = -1, length = array.length, resIndex = 0, result2 = [];
  while (++index < length) {
    var value = array[index];
    if (value === placeholder || value === PLACEHOLDER) {
      array[index] = PLACEHOLDER;
      result2[resIndex++] = index;
    }
  }
  return result2;
}
var replaceHolders_default = replaceHolders;

// node_modules/lodash-es/_createHybrid.js
var WRAP_BIND_FLAG4 = 1;
var WRAP_BIND_KEY_FLAG3 = 2;
var WRAP_CURRY_FLAG3 = 8;
var WRAP_CURRY_RIGHT_FLAG2 = 16;
var WRAP_ARY_FLAG2 = 128;
var WRAP_FLIP_FLAG2 = 512;
function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
  var isAry = bitmask & WRAP_ARY_FLAG2, isBind = bitmask & WRAP_BIND_FLAG4, isBindKey = bitmask & WRAP_BIND_KEY_FLAG3, isCurried = bitmask & (WRAP_CURRY_FLAG3 | WRAP_CURRY_RIGHT_FLAG2), isFlip = bitmask & WRAP_FLIP_FLAG2, Ctor = isBindKey ? void 0 : createCtor_default(func);
  function wrapper() {
    var length = arguments.length, args = Array(length), index = length;
    while (index--) {
      args[index] = arguments[index];
    }
    if (isCurried) {
      var placeholder = getHolder_default(wrapper), holdersCount = countHolders_default(args, placeholder);
    }
    if (partials) {
      args = composeArgs_default(args, partials, holders, isCurried);
    }
    if (partialsRight) {
      args = composeArgsRight_default(args, partialsRight, holdersRight, isCurried);
    }
    length -= holdersCount;
    if (isCurried && length < arity) {
      var newHolders = replaceHolders_default(args, placeholder);
      return createRecurry_default(
        func,
        bitmask,
        createHybrid,
        wrapper.placeholder,
        thisArg,
        args,
        newHolders,
        argPos,
        ary2,
        arity - length
      );
    }
    var thisBinding = isBind ? thisArg : this, fn2 = isBindKey ? thisBinding[func] : func;
    length = args.length;
    if (argPos) {
      args = reorder_default(args, argPos);
    } else if (isFlip && length > 1) {
      args.reverse();
    }
    if (isAry && ary2 < length) {
      args.length = ary2;
    }
    if (this && this !== root_default && this instanceof wrapper) {
      fn2 = Ctor || createCtor_default(fn2);
    }
    return fn2.apply(thisBinding, args);
  }
  return wrapper;
}
var createHybrid_default = createHybrid;

// node_modules/lodash-es/_createCurry.js
function createCurry(func, bitmask, arity) {
  var Ctor = createCtor_default(func);
  function wrapper() {
    var length = arguments.length, args = Array(length), index = length, placeholder = getHolder_default(wrapper);
    while (index--) {
      args[index] = arguments[index];
    }
    var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders_default(args, placeholder);
    length -= holders.length;
    if (length < arity) {
      return createRecurry_default(
        func,
        bitmask,
        createHybrid_default,
        wrapper.placeholder,
        void 0,
        args,
        holders,
        void 0,
        void 0,
        arity - length
      );
    }
    var fn2 = this && this !== root_default && this instanceof wrapper ? Ctor : func;
    return apply_default(fn2, this, args);
  }
  return wrapper;
}
var createCurry_default = createCurry;

// node_modules/lodash-es/_createPartial.js
var WRAP_BIND_FLAG5 = 1;
function createPartial(func, bitmask, thisArg, partials) {
  var isBind = bitmask & WRAP_BIND_FLAG5, Ctor = createCtor_default(func);
  function wrapper() {
    var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array(leftLength + argsLength), fn2 = this && this !== root_default && this instanceof wrapper ? Ctor : func;
    while (++leftIndex < leftLength) {
      args[leftIndex] = partials[leftIndex];
    }
    while (argsLength--) {
      args[leftIndex++] = arguments[++argsIndex];
    }
    return apply_default(fn2, isBind ? thisArg : this, args);
  }
  return wrapper;
}
var createPartial_default = createPartial;

// node_modules/lodash-es/_mergeData.js
var PLACEHOLDER2 = "__lodash_placeholder__";
var WRAP_BIND_FLAG6 = 1;
var WRAP_BIND_KEY_FLAG4 = 2;
var WRAP_CURRY_BOUND_FLAG2 = 4;
var WRAP_CURRY_FLAG4 = 8;
var WRAP_ARY_FLAG3 = 128;
var WRAP_REARG_FLAG2 = 256;
var nativeMin2 = Math.min;
function mergeData(data, source) {
  var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG6 | WRAP_BIND_KEY_FLAG4 | WRAP_ARY_FLAG3);
  var isCombo = srcBitmask == WRAP_ARY_FLAG3 && bitmask == WRAP_CURRY_FLAG4 || srcBitmask == WRAP_ARY_FLAG3 && bitmask == WRAP_REARG_FLAG2 && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG3 | WRAP_REARG_FLAG2) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG4;
  if (!(isCommon || isCombo)) {
    return data;
  }
  if (srcBitmask & WRAP_BIND_FLAG6) {
    data[2] = source[2];
    newBitmask |= bitmask & WRAP_BIND_FLAG6 ? 0 : WRAP_CURRY_BOUND_FLAG2;
  }
  var value = source[3];
  if (value) {
    var partials = data[3];
    data[3] = partials ? composeArgs_default(partials, value, source[4]) : value;
    data[4] = partials ? replaceHolders_default(data[3], PLACEHOLDER2) : source[4];
  }
  value = source[5];
  if (value) {
    partials = data[5];
    data[5] = partials ? composeArgsRight_default(partials, value, source[6]) : value;
    data[6] = partials ? replaceHolders_default(data[5], PLACEHOLDER2) : source[6];
  }
  value = source[7];
  if (value) {
    data[7] = value;
  }
  if (srcBitmask & WRAP_ARY_FLAG3) {
    data[8] = data[8] == null ? source[8] : nativeMin2(data[8], source[8]);
  }
  if (data[9] == null) {
    data[9] = source[9];
  }
  data[0] = source[0];
  data[1] = newBitmask;
  return data;
}
var mergeData_default = mergeData;

// node_modules/lodash-es/_createWrap.js
var FUNC_ERROR_TEXT2 = "Expected a function";
var WRAP_BIND_FLAG7 = 1;
var WRAP_BIND_KEY_FLAG5 = 2;
var WRAP_CURRY_FLAG5 = 8;
var WRAP_CURRY_RIGHT_FLAG3 = 16;
var WRAP_PARTIAL_FLAG3 = 32;
var WRAP_PARTIAL_RIGHT_FLAG3 = 64;
var nativeMax3 = Math.max;
function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG5;
  if (!isBindKey && typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT2);
  }
  var length = partials ? partials.length : 0;
  if (!length) {
    bitmask &= ~(WRAP_PARTIAL_FLAG3 | WRAP_PARTIAL_RIGHT_FLAG3);
    partials = holders = void 0;
  }
  ary2 = ary2 === void 0 ? ary2 : nativeMax3(toInteger_default(ary2), 0);
  arity = arity === void 0 ? arity : toInteger_default(arity);
  length -= holders ? holders.length : 0;
  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG3) {
    var partialsRight = partials, holdersRight = holders;
    partials = holders = void 0;
  }
  var data = isBindKey ? void 0 : getData_default(func);
  var newData = [
    func,
    bitmask,
    thisArg,
    partials,
    holders,
    partialsRight,
    holdersRight,
    argPos,
    ary2,
    arity
  ];
  if (data) {
    mergeData_default(newData, data);
  }
  func = newData[0];
  bitmask = newData[1];
  thisArg = newData[2];
  partials = newData[3];
  holders = newData[4];
  arity = newData[9] = newData[9] === void 0 ? isBindKey ? 0 : func.length : nativeMax3(newData[9] - length, 0);
  if (!arity && bitmask & (WRAP_CURRY_FLAG5 | WRAP_CURRY_RIGHT_FLAG3)) {
    bitmask &= ~(WRAP_CURRY_FLAG5 | WRAP_CURRY_RIGHT_FLAG3);
  }
  if (!bitmask || bitmask == WRAP_BIND_FLAG7) {
    var result2 = createBind_default(func, bitmask, thisArg);
  } else if (bitmask == WRAP_CURRY_FLAG5 || bitmask == WRAP_CURRY_RIGHT_FLAG3) {
    result2 = createCurry_default(func, bitmask, arity);
  } else if ((bitmask == WRAP_PARTIAL_FLAG3 || bitmask == (WRAP_BIND_FLAG7 | WRAP_PARTIAL_FLAG3)) && !holders.length) {
    result2 = createPartial_default(func, bitmask, thisArg, partials);
  } else {
    result2 = createHybrid_default.apply(void 0, newData);
  }
  var setter = data ? baseSetData_default : setData_default;
  return setWrapToString_default(setter(result2, newData), func, bitmask);
}
var createWrap_default = createWrap;

// node_modules/lodash-es/ary.js
var WRAP_ARY_FLAG4 = 128;
function ary(func, n, guard) {
  n = guard ? void 0 : n;
  n = func && n == null ? func.length : n;
  return createWrap_default(func, WRAP_ARY_FLAG4, void 0, void 0, void 0, void 0, n);
}
var ary_default = ary;

// node_modules/lodash-es/_baseAssignValue.js
function baseAssignValue(object, key, value) {
  if (key == "__proto__" && defineProperty_default) {
    defineProperty_default(object, key, {
      "configurable": true,
      "enumerable": true,
      "value": value,
      "writable": true
    });
  } else {
    object[key] = value;
  }
}
var baseAssignValue_default = baseAssignValue;

// node_modules/lodash-es/eq.js
function eq(value, other) {
  return value === other || value !== value && other !== other;
}
var eq_default = eq;

// node_modules/lodash-es/_assignValue.js
var objectProto6 = Object.prototype;
var hasOwnProperty5 = objectProto6.hasOwnProperty;
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty5.call(object, key) && eq_default(objValue, value)) || value === void 0 && !(key in object)) {
    baseAssignValue_default(object, key, value);
  }
}
var assignValue_default = assignValue;

// node_modules/lodash-es/_copyObject.js
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});
  var index = -1, length = props.length;
  while (++index < length) {
    var key = props[index];
    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
    if (newValue === void 0) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue_default(object, key, newValue);
    } else {
      assignValue_default(object, key, newValue);
    }
  }
  return object;
}
var copyObject_default = copyObject;

// node_modules/lodash-es/_overRest.js
var nativeMax4 = Math.max;
function overRest(func, start, transform2) {
  start = nativeMax4(start === void 0 ? func.length - 1 : start, 0);
  return function() {
    var args = arguments, index = -1, length = nativeMax4(args.length - start, 0), array = Array(length);
    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform2(array);
    return apply_default(func, this, otherArgs);
  };
}
var overRest_default = overRest;

// node_modules/lodash-es/_baseRest.js
function baseRest(func, start) {
  return setToString_default(overRest_default(func, start, identity_default), func + "");
}
var baseRest_default = baseRest;

// node_modules/lodash-es/isLength.js
var MAX_SAFE_INTEGER2 = 9007199254740991;
function isLength(value) {
  return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER2;
}
var isLength_default = isLength;

// node_modules/lodash-es/isArrayLike.js
function isArrayLike(value) {
  return value != null && isLength_default(value.length) && !isFunction_default(value);
}
var isArrayLike_default = isArrayLike;

// node_modules/lodash-es/_isIterateeCall.js
function isIterateeCall(value, index, object) {
  if (!isObject_default(object)) {
    return false;
  }
  var type = typeof index;
  if (type == "number" ? isArrayLike_default(object) && isIndex_default(index, object.length) : type == "string" && index in object) {
    return eq_default(object[index], value);
  }
  return false;
}
var isIterateeCall_default = isIterateeCall;

// node_modules/lodash-es/_createAssigner.js
function createAssigner(assigner) {
  return baseRest_default(function(object, sources) {
    var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
    customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
    if (guard && isIterateeCall_default(sources[0], sources[1], guard)) {
      customizer = length < 3 ? void 0 : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}
var createAssigner_default = createAssigner;

// node_modules/lodash-es/_isPrototype.js
var objectProto7 = Object.prototype;
function isPrototype(value) {
  var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto7;
  return value === proto;
}
var isPrototype_default = isPrototype;

// node_modules/lodash-es/_baseTimes.js
function baseTimes(n, iteratee2) {
  var index = -1, result2 = Array(n);
  while (++index < n) {
    result2[index] = iteratee2(index);
  }
  return result2;
}
var baseTimes_default = baseTimes;

// node_modules/lodash-es/_baseIsArguments.js
var argsTag = "[object Arguments]";
function baseIsArguments(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == argsTag;
}
var baseIsArguments_default = baseIsArguments;

// node_modules/lodash-es/isArguments.js
var objectProto8 = Object.prototype;
var hasOwnProperty6 = objectProto8.hasOwnProperty;
var propertyIsEnumerable = objectProto8.propertyIsEnumerable;
var isArguments = baseIsArguments_default(/* @__PURE__ */ function() {
  return arguments;
}()) ? baseIsArguments_default : function(value) {
  return isObjectLike_default(value) && hasOwnProperty6.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
};
var isArguments_default = isArguments;

// node_modules/lodash-es/stubFalse.js
function stubFalse() {
  return false;
}
var stubFalse_default = stubFalse;

// node_modules/lodash-es/isBuffer.js
var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
var moduleExports = freeModule && freeModule.exports === freeExports;
var Buffer2 = moduleExports ? root_default.Buffer : void 0;
var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
var isBuffer = nativeIsBuffer || stubFalse_default;
var isBuffer_default = isBuffer;

// node_modules/lodash-es/_baseIsTypedArray.js
var argsTag2 = "[object Arguments]";
var arrayTag = "[object Array]";
var boolTag = "[object Boolean]";
var dateTag = "[object Date]";
var errorTag = "[object Error]";
var funcTag2 = "[object Function]";
var mapTag = "[object Map]";
var numberTag = "[object Number]";
var objectTag = "[object Object]";
var regexpTag = "[object RegExp]";
var setTag = "[object Set]";
var stringTag = "[object String]";
var weakMapTag = "[object WeakMap]";
var arrayBufferTag = "[object ArrayBuffer]";
var dataViewTag = "[object DataView]";
var float32Tag = "[object Float32Array]";
var float64Tag = "[object Float64Array]";
var int8Tag = "[object Int8Array]";
var int16Tag = "[object Int16Array]";
var int32Tag = "[object Int32Array]";
var uint8Tag = "[object Uint8Array]";
var uint8ClampedTag = "[object Uint8ClampedArray]";
var uint16Tag = "[object Uint16Array]";
var uint32Tag = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag2] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag2] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
function baseIsTypedArray(value) {
  return isObjectLike_default(value) && isLength_default(value.length) && !!typedArrayTags[baseGetTag_default(value)];
}
var baseIsTypedArray_default = baseIsTypedArray;

// node_modules/lodash-es/_baseUnary.js
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}
var baseUnary_default = baseUnary;

// node_modules/lodash-es/_nodeUtil.js
var freeExports2 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule2 = freeExports2 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
var freeProcess = moduleExports2 && freeGlobal_default.process;
var nodeUtil = function() {
  try {
    var types = freeModule2 && freeModule2.require && freeModule2.require("util").types;
    if (types) {
      return types;
    }
    return freeProcess && freeProcess.binding && freeProcess.binding("util");
  } catch (e) {
  }
}();
var nodeUtil_default = nodeUtil;

// node_modules/lodash-es/isTypedArray.js
var nodeIsTypedArray = nodeUtil_default && nodeUtil_default.isTypedArray;
var isTypedArray = nodeIsTypedArray ? baseUnary_default(nodeIsTypedArray) : baseIsTypedArray_default;
var isTypedArray_default = isTypedArray;

// node_modules/lodash-es/_arrayLikeKeys.js
var objectProto9 = Object.prototype;
var hasOwnProperty7 = objectProto9.hasOwnProperty;
function arrayLikeKeys(value, inherited) {
  var isArr = isArray_default(value), isArg = !isArr && isArguments_default(value), isBuff = !isArr && !isArg && isBuffer_default(value), isType = !isArr && !isArg && !isBuff && isTypedArray_default(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes_default(value.length, String) : [], length = result2.length;
  for (var key in value) {
    if ((inherited || hasOwnProperty7.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
    (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
    isIndex_default(key, length)))) {
      result2.push(key);
    }
  }
  return result2;
}
var arrayLikeKeys_default = arrayLikeKeys;

// node_modules/lodash-es/_overArg.js
function overArg(func, transform2) {
  return function(arg) {
    return func(transform2(arg));
  };
}
var overArg_default = overArg;

// node_modules/lodash-es/_nativeKeys.js
var nativeKeys = overArg_default(Object.keys, Object);
var nativeKeys_default = nativeKeys;

// node_modules/lodash-es/_baseKeys.js
var objectProto10 = Object.prototype;
var hasOwnProperty8 = objectProto10.hasOwnProperty;
function baseKeys(object) {
  if (!isPrototype_default(object)) {
    return nativeKeys_default(object);
  }
  var result2 = [];
  for (var key in Object(object)) {
    if (hasOwnProperty8.call(object, key) && key != "constructor") {
      result2.push(key);
    }
  }
  return result2;
}
var baseKeys_default = baseKeys;

// node_modules/lodash-es/keys.js
function keys(object) {
  return isArrayLike_default(object) ? arrayLikeKeys_default(object) : baseKeys_default(object);
}
var keys_default = keys;

// node_modules/lodash-es/assign.js
var objectProto11 = Object.prototype;
var hasOwnProperty9 = objectProto11.hasOwnProperty;
var assign = createAssigner_default(function(object, source) {
  if (isPrototype_default(source) || isArrayLike_default(source)) {
    copyObject_default(source, keys_default(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty9.call(source, key)) {
      assignValue_default(object, key, source[key]);
    }
  }
});
var assign_default = assign;

// node_modules/lodash-es/_nativeKeysIn.js
function nativeKeysIn(object) {
  var result2 = [];
  if (object != null) {
    for (var key in Object(object)) {
      result2.push(key);
    }
  }
  return result2;
}
var nativeKeysIn_default = nativeKeysIn;

// node_modules/lodash-es/_baseKeysIn.js
var objectProto12 = Object.prototype;
var hasOwnProperty10 = objectProto12.hasOwnProperty;
function baseKeysIn(object) {
  if (!isObject_default(object)) {
    return nativeKeysIn_default(object);
  }
  var isProto = isPrototype_default(object), result2 = [];
  for (var key in object) {
    if (!(key == "constructor" && (isProto || !hasOwnProperty10.call(object, key)))) {
      result2.push(key);
    }
  }
  return result2;
}
var baseKeysIn_default = baseKeysIn;

// node_modules/lodash-es/keysIn.js
function keysIn(object) {
  return isArrayLike_default(object) ? arrayLikeKeys_default(object, true) : baseKeysIn_default(object);
}
var keysIn_default = keysIn;

// node_modules/lodash-es/assignIn.js
var assignIn = createAssigner_default(function(object, source) {
  copyObject_default(source, keysIn_default(source), object);
});
var assignIn_default = assignIn;

// node_modules/lodash-es/assignInWith.js
var assignInWith = createAssigner_default(function(object, source, srcIndex, customizer) {
  copyObject_default(source, keysIn_default(source), object, customizer);
});
var assignInWith_default = assignInWith;

// node_modules/lodash-es/assignWith.js
var assignWith = createAssigner_default(function(object, source, srcIndex, customizer) {
  copyObject_default(source, keys_default(source), object, customizer);
});
var assignWith_default = assignWith;

// node_modules/lodash-es/_isKey.js
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
var reIsPlainProp = /^\w*$/;
function isKey(value, object) {
  if (isArray_default(value)) {
    return false;
  }
  var type = typeof value;
  if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol_default(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}
var isKey_default = isKey;

// node_modules/lodash-es/_nativeCreate.js
var nativeCreate = getNative_default(Object, "create");
var nativeCreate_default = nativeCreate;

// node_modules/lodash-es/_hashClear.js
function hashClear() {
  this.__data__ = nativeCreate_default ? nativeCreate_default(null) : {};
  this.size = 0;
}
var hashClear_default = hashClear;

// node_modules/lodash-es/_hashDelete.js
function hashDelete(key) {
  var result2 = this.has(key) && delete this.__data__[key];
  this.size -= result2 ? 1 : 0;
  return result2;
}
var hashDelete_default = hashDelete;

// node_modules/lodash-es/_hashGet.js
var HASH_UNDEFINED = "__lodash_hash_undefined__";
var objectProto13 = Object.prototype;
var hasOwnProperty11 = objectProto13.hasOwnProperty;
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate_default) {
    var result2 = data[key];
    return result2 === HASH_UNDEFINED ? void 0 : result2;
  }
  return hasOwnProperty11.call(data, key) ? data[key] : void 0;
}
var hashGet_default = hashGet;

// node_modules/lodash-es/_hashHas.js
var objectProto14 = Object.prototype;
var hasOwnProperty12 = objectProto14.hasOwnProperty;
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate_default ? data[key] !== void 0 : hasOwnProperty12.call(data, key);
}
var hashHas_default = hashHas;

// node_modules/lodash-es/_hashSet.js
var HASH_UNDEFINED2 = "__lodash_hash_undefined__";
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate_default && value === void 0 ? HASH_UNDEFINED2 : value;
  return this;
}
var hashSet_default = hashSet;

// node_modules/lodash-es/_Hash.js
function Hash(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
Hash.prototype.clear = hashClear_default;
Hash.prototype["delete"] = hashDelete_default;
Hash.prototype.get = hashGet_default;
Hash.prototype.has = hashHas_default;
Hash.prototype.set = hashSet_default;
var Hash_default = Hash;

// node_modules/lodash-es/_listCacheClear.js
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}
var listCacheClear_default = listCacheClear;

// node_modules/lodash-es/_assocIndexOf.js
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq_default(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}
var assocIndexOf_default = assocIndexOf;

// node_modules/lodash-es/_listCacheDelete.js
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete(key) {
  var data = this.__data__, index = assocIndexOf_default(data, key);
  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}
var listCacheDelete_default = listCacheDelete;

// node_modules/lodash-es/_listCacheGet.js
function listCacheGet(key) {
  var data = this.__data__, index = assocIndexOf_default(data, key);
  return index < 0 ? void 0 : data[index][1];
}
var listCacheGet_default = listCacheGet;

// node_modules/lodash-es/_listCacheHas.js
function listCacheHas(key) {
  return assocIndexOf_default(this.__data__, key) > -1;
}
var listCacheHas_default = listCacheHas;

// node_modules/lodash-es/_listCacheSet.js
function listCacheSet(key, value) {
  var data = this.__data__, index = assocIndexOf_default(data, key);
  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}
var listCacheSet_default = listCacheSet;

// node_modules/lodash-es/_ListCache.js
function ListCache(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
ListCache.prototype.clear = listCacheClear_default;
ListCache.prototype["delete"] = listCacheDelete_default;
ListCache.prototype.get = listCacheGet_default;
ListCache.prototype.has = listCacheHas_default;
ListCache.prototype.set = listCacheSet_default;
var ListCache_default = ListCache;

// node_modules/lodash-es/_Map.js
var Map2 = getNative_default(root_default, "Map");
var Map_default = Map2;

// node_modules/lodash-es/_mapCacheClear.js
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash_default(),
    "map": new (Map_default || ListCache_default)(),
    "string": new Hash_default()
  };
}
var mapCacheClear_default = mapCacheClear;

// node_modules/lodash-es/_isKeyable.js
function isKeyable(value) {
  var type = typeof value;
  return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
}
var isKeyable_default = isKeyable;

// node_modules/lodash-es/_getMapData.js
function getMapData(map2, key) {
  var data = map2.__data__;
  return isKeyable_default(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
}
var getMapData_default = getMapData;

// node_modules/lodash-es/_mapCacheDelete.js
function mapCacheDelete(key) {
  var result2 = getMapData_default(this, key)["delete"](key);
  this.size -= result2 ? 1 : 0;
  return result2;
}
var mapCacheDelete_default = mapCacheDelete;

// node_modules/lodash-es/_mapCacheGet.js
function mapCacheGet(key) {
  return getMapData_default(this, key).get(key);
}
var mapCacheGet_default = mapCacheGet;

// node_modules/lodash-es/_mapCacheHas.js
function mapCacheHas(key) {
  return getMapData_default(this, key).has(key);
}
var mapCacheHas_default = mapCacheHas;

// node_modules/lodash-es/_mapCacheSet.js
function mapCacheSet(key, value) {
  var data = getMapData_default(this, key), size2 = data.size;
  data.set(key, value);
  this.size += data.size == size2 ? 0 : 1;
  return this;
}
var mapCacheSet_default = mapCacheSet;

// node_modules/lodash-es/_MapCache.js
function MapCache(entries) {
  var index = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}
MapCache.prototype.clear = mapCacheClear_default;
MapCache.prototype["delete"] = mapCacheDelete_default;
MapCache.prototype.get = mapCacheGet_default;
MapCache.prototype.has = mapCacheHas_default;
MapCache.prototype.set = mapCacheSet_default;
var MapCache_default = MapCache;

// node_modules/lodash-es/memoize.js
var FUNC_ERROR_TEXT3 = "Expected a function";
function memoize(func, resolver) {
  if (typeof func != "function" || resolver != null && typeof resolver != "function") {
    throw new TypeError(FUNC_ERROR_TEXT3);
  }
  var memoized = function() {
    var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
    if (cache.has(key)) {
      return cache.get(key);
    }
    var result2 = func.apply(this, args);
    memoized.cache = cache.set(key, result2) || cache;
    return result2;
  };
  memoized.cache = new (memoize.Cache || MapCache_default)();
  return memoized;
}
memoize.Cache = MapCache_default;
var memoize_default = memoize;

// node_modules/lodash-es/_memoizeCapped.js
var MAX_MEMOIZE_SIZE = 500;
function memoizeCapped(func) {
  var result2 = memoize_default(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });
  var cache = result2.cache;
  return result2;
}
var memoizeCapped_default = memoizeCapped;

// node_modules/lodash-es/_stringToPath.js
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath = memoizeCapped_default(function(string) {
  var result2 = [];
  if (string.charCodeAt(0) === 46) {
    result2.push("");
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result2.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
  });
  return result2;
});
var stringToPath_default = stringToPath;

// node_modules/lodash-es/toString.js
function toString(value) {
  return value == null ? "" : baseToString_default(value);
}
var toString_default = toString;

// node_modules/lodash-es/_castPath.js
function castPath(value, object) {
  if (isArray_default(value)) {
    return value;
  }
  return isKey_default(value, object) ? [value] : stringToPath_default(toString_default(value));
}
var castPath_default = castPath;

// node_modules/lodash-es/_toKey.js
var INFINITY3 = 1 / 0;
function toKey(value) {
  if (typeof value == "string" || isSymbol_default(value)) {
    return value;
  }
  var result2 = value + "";
  return result2 == "0" && 1 / value == -INFINITY3 ? "-0" : result2;
}
var toKey_default = toKey;

// node_modules/lodash-es/_baseGet.js
function baseGet(object, path) {
  path = castPath_default(path, object);
  var index = 0, length = path.length;
  while (object != null && index < length) {
    object = object[toKey_default(path[index++])];
  }
  return index && index == length ? object : void 0;
}
var baseGet_default = baseGet;

// node_modules/lodash-es/get.js
function get(object, path, defaultValue) {
  var result2 = object == null ? void 0 : baseGet_default(object, path);
  return result2 === void 0 ? defaultValue : result2;
}
var get_default = get;

// node_modules/lodash-es/_baseAt.js
function baseAt(object, paths) {
  var index = -1, length = paths.length, result2 = Array(length), skip = object == null;
  while (++index < length) {
    result2[index] = skip ? void 0 : get_default(object, paths[index]);
  }
  return result2;
}
var baseAt_default = baseAt;

// node_modules/lodash-es/_arrayPush.js
function arrayPush(array, values2) {
  var index = -1, length = values2.length, offset = array.length;
  while (++index < length) {
    array[offset + index] = values2[index];
  }
  return array;
}
var arrayPush_default = arrayPush;

// node_modules/lodash-es/_isFlattenable.js
var spreadableSymbol = Symbol_default ? Symbol_default.isConcatSpreadable : void 0;
function isFlattenable(value) {
  return isArray_default(value) || isArguments_default(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}
var isFlattenable_default = isFlattenable;

// node_modules/lodash-es/_baseFlatten.js
function baseFlatten(array, depth, predicate, isStrict, result2) {
  var index = -1, length = array.length;
  predicate || (predicate = isFlattenable_default);
  result2 || (result2 = []);
  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        baseFlatten(value, depth - 1, predicate, isStrict, result2);
      } else {
        arrayPush_default(result2, value);
      }
    } else if (!isStrict) {
      result2[result2.length] = value;
    }
  }
  return result2;
}
var baseFlatten_default = baseFlatten;

// node_modules/lodash-es/flatten.js
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten_default(array, 1) : [];
}
var flatten_default = flatten;

// node_modules/lodash-es/_flatRest.js
function flatRest(func) {
  return setToString_default(overRest_default(func, void 0, flatten_default), func + "");
}
var flatRest_default = flatRest;

// node_modules/lodash-es/at.js
var at = flatRest_default(baseAt_default);
var at_default = at;

// node_modules/lodash-es/_getPrototype.js
var getPrototype = overArg_default(Object.getPrototypeOf, Object);
var getPrototype_default = getPrototype;

// node_modules/lodash-es/isPlainObject.js
var objectTag2 = "[object Object]";
var funcProto3 = Function.prototype;
var objectProto15 = Object.prototype;
var funcToString3 = funcProto3.toString;
var hasOwnProperty13 = objectProto15.hasOwnProperty;
var objectCtorString = funcToString3.call(Object);
function isPlainObject(value) {
  if (!isObjectLike_default(value) || baseGetTag_default(value) != objectTag2) {
    return false;
  }
  var proto = getPrototype_default(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty13.call(proto, "constructor") && proto.constructor;
  return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString3.call(Ctor) == objectCtorString;
}
var isPlainObject_default = isPlainObject;

// node_modules/lodash-es/isError.js
var domExcTag = "[object DOMException]";
var errorTag2 = "[object Error]";
function isError(value) {
  if (!isObjectLike_default(value)) {
    return false;
  }
  var tag = baseGetTag_default(value);
  return tag == errorTag2 || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject_default(value);
}
var isError_default = isError;

// node_modules/lodash-es/attempt.js
var attempt = baseRest_default(function(func, args) {
  try {
    return apply_default(func, void 0, args);
  } catch (e) {
    return isError_default(e) ? e : new Error(e);
  }
});
var attempt_default = attempt;

// node_modules/lodash-es/before.js
var FUNC_ERROR_TEXT4 = "Expected a function";
function before(n, func) {
  var result2;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT4);
  }
  n = toInteger_default(n);
  return function() {
    if (--n > 0) {
      result2 = func.apply(this, arguments);
    }
    if (n <= 1) {
      func = void 0;
    }
    return result2;
  };
}
var before_default = before;

// node_modules/lodash-es/bind.js
var WRAP_BIND_FLAG8 = 1;
var WRAP_PARTIAL_FLAG4 = 32;
var bind = baseRest_default(function(func, thisArg, partials) {
  var bitmask = WRAP_BIND_FLAG8;
  if (partials.length) {
    var holders = replaceHolders_default(partials, getHolder_default(bind));
    bitmask |= WRAP_PARTIAL_FLAG4;
  }
  return createWrap_default(func, bitmask, thisArg, partials, holders);
});
bind.placeholder = {};
var bind_default = bind;

// node_modules/lodash-es/bindAll.js
var bindAll = flatRest_default(function(object, methodNames) {
  arrayEach_default(methodNames, function(key) {
    key = toKey_default(key);
    baseAssignValue_default(object, key, bind_default(object[key], object));
  });
  return object;
});
var bindAll_default = bindAll;

// node_modules/lodash-es/bindKey.js
var WRAP_BIND_FLAG9 = 1;
var WRAP_BIND_KEY_FLAG6 = 2;
var WRAP_PARTIAL_FLAG5 = 32;
var bindKey = baseRest_default(function(object, key, partials) {
  var bitmask = WRAP_BIND_FLAG9 | WRAP_BIND_KEY_FLAG6;
  if (partials.length) {
    var holders = replaceHolders_default(partials, getHolder_default(bindKey));
    bitmask |= WRAP_PARTIAL_FLAG5;
  }
  return createWrap_default(key, bitmask, object, partials, holders);
});
bindKey.placeholder = {};
var bindKey_default = bindKey;

// node_modules/lodash-es/_baseSlice.js
function baseSlice(array, start, end) {
  var index = -1, length = array.length;
  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : end - start >>> 0;
  start >>>= 0;
  var result2 = Array(length);
  while (++index < length) {
    result2[index] = array[index + start];
  }
  return result2;
}
var baseSlice_default = baseSlice;

// node_modules/lodash-es/_castSlice.js
function castSlice(array, start, end) {
  var length = array.length;
  end = end === void 0 ? length : end;
  return !start && end >= length ? array : baseSlice_default(array, start, end);
}
var castSlice_default = castSlice;

// node_modules/lodash-es/_hasUnicode.js
var rsAstralRange = "\\ud800-\\udfff";
var rsComboMarksRange = "\\u0300-\\u036f";
var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange = "\\u20d0-\\u20ff";
var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
var rsVarRange = "\\ufe0e\\ufe0f";
var rsZWJ = "\\u200d";
var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
function hasUnicode(string) {
  return reHasUnicode.test(string);
}
var hasUnicode_default = hasUnicode;

// node_modules/lodash-es/_asciiToArray.js
function asciiToArray(string) {
  return string.split("");
}
var asciiToArray_default = asciiToArray;

// node_modules/lodash-es/_unicodeToArray.js
var rsAstralRange2 = "\\ud800-\\udfff";
var rsComboMarksRange2 = "\\u0300-\\u036f";
var reComboHalfMarksRange2 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange2 = "\\u20d0-\\u20ff";
var rsComboRange2 = rsComboMarksRange2 + reComboHalfMarksRange2 + rsComboSymbolsRange2;
var rsVarRange2 = "\\ufe0e\\ufe0f";
var rsAstral = "[" + rsAstralRange2 + "]";
var rsCombo = "[" + rsComboRange2 + "]";
var rsFitz = "\\ud83c[\\udffb-\\udfff]";
var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
var rsNonAstral = "[^" + rsAstralRange2 + "]";
var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsZWJ2 = "\\u200d";
var reOptMod = rsModifier + "?";
var rsOptVar = "[" + rsVarRange2 + "]?";
var rsOptJoin = "(?:" + rsZWJ2 + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
var rsSeq = rsOptVar + reOptMod + rsOptJoin;
var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}
var unicodeToArray_default = unicodeToArray;

// node_modules/lodash-es/_stringToArray.js
function stringToArray(string) {
  return hasUnicode_default(string) ? unicodeToArray_default(string) : asciiToArray_default(string);
}
var stringToArray_default = stringToArray;

// node_modules/lodash-es/_createCaseFirst.js
function createCaseFirst(methodName) {
  return function(string) {
    string = toString_default(string);
    var strSymbols = hasUnicode_default(string) ? stringToArray_default(string) : void 0;
    var chr = strSymbols ? strSymbols[0] : string.charAt(0);
    var trailing = strSymbols ? castSlice_default(strSymbols, 1).join("") : string.slice(1);
    return chr[methodName]() + trailing;
  };
}
var createCaseFirst_default = createCaseFirst;

// node_modules/lodash-es/upperFirst.js
var upperFirst = createCaseFirst_default("toUpperCase");
var upperFirst_default = upperFirst;

// node_modules/lodash-es/capitalize.js
function capitalize(string) {
  return upperFirst_default(toString_default(string).toLowerCase());
}
var capitalize_default = capitalize;

// node_modules/lodash-es/_arrayReduce.js
function arrayReduce(array, iteratee2, accumulator, initAccum) {
  var index = -1, length = array == null ? 0 : array.length;
  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee2(accumulator, array[index], index, array);
  }
  return accumulator;
}
var arrayReduce_default = arrayReduce;

// node_modules/lodash-es/_basePropertyOf.js
function basePropertyOf(object) {
  return function(key) {
    return object == null ? void 0 : object[key];
  };
}
var basePropertyOf_default = basePropertyOf;

// node_modules/lodash-es/_deburrLetter.js
var deburredLetters = {
  // Latin-1 Supplement block.
  "À": "A",
  "Á": "A",
  "Â": "A",
  "Ã": "A",
  "Ä": "A",
  "Å": "A",
  "à": "a",
  "á": "a",
  "â": "a",
  "ã": "a",
  "ä": "a",
  "å": "a",
  "Ç": "C",
  "ç": "c",
  "Ð": "D",
  "ð": "d",
  "È": "E",
  "É": "E",
  "Ê": "E",
  "Ë": "E",
  "è": "e",
  "é": "e",
  "ê": "e",
  "ë": "e",
  "Ì": "I",
  "Í": "I",
  "Î": "I",
  "Ï": "I",
  "ì": "i",
  "í": "i",
  "î": "i",
  "ï": "i",
  "Ñ": "N",
  "ñ": "n",
  "Ò": "O",
  "Ó": "O",
  "Ô": "O",
  "Õ": "O",
  "Ö": "O",
  "Ø": "O",
  "ò": "o",
  "ó": "o",
  "ô": "o",
  "õ": "o",
  "ö": "o",
  "ø": "o",
  "Ù": "U",
  "Ú": "U",
  "Û": "U",
  "Ü": "U",
  "ù": "u",
  "ú": "u",
  "û": "u",
  "ü": "u",
  "Ý": "Y",
  "ý": "y",
  "ÿ": "y",
  "Æ": "Ae",
  "æ": "ae",
  "Þ": "Th",
  "þ": "th",
  "ß": "ss",
  // Latin Extended-A block.
  "Ā": "A",
  "Ă": "A",
  "Ą": "A",
  "ā": "a",
  "ă": "a",
  "ą": "a",
  "Ć": "C",
  "Ĉ": "C",
  "Ċ": "C",
  "Č": "C",
  "ć": "c",
  "ĉ": "c",
  "ċ": "c",
  "č": "c",
  "Ď": "D",
  "Đ": "D",
  "ď": "d",
  "đ": "d",
  "Ē": "E",
  "Ĕ": "E",
  "Ė": "E",
  "Ę": "E",
  "Ě": "E",
  "ē": "e",
  "ĕ": "e",
  "ė": "e",
  "ę": "e",
  "ě": "e",
  "Ĝ": "G",
  "Ğ": "G",
  "Ġ": "G",
  "Ģ": "G",
  "ĝ": "g",
  "ğ": "g",
  "ġ": "g",
  "ģ": "g",
  "Ĥ": "H",
  "Ħ": "H",
  "ĥ": "h",
  "ħ": "h",
  "Ĩ": "I",
  "Ī": "I",
  "Ĭ": "I",
  "Į": "I",
  "İ": "I",
  "ĩ": "i",
  "ī": "i",
  "ĭ": "i",
  "į": "i",
  "ı": "i",
  "Ĵ": "J",
  "ĵ": "j",
  "Ķ": "K",
  "ķ": "k",
  "ĸ": "k",
  "Ĺ": "L",
  "Ļ": "L",
  "Ľ": "L",
  "Ŀ": "L",
  "Ł": "L",
  "ĺ": "l",
  "ļ": "l",
  "ľ": "l",
  "ŀ": "l",
  "ł": "l",
  "Ń": "N",
  "Ņ": "N",
  "Ň": "N",
  "Ŋ": "N",
  "ń": "n",
  "ņ": "n",
  "ň": "n",
  "ŋ": "n",
  "Ō": "O",
  "Ŏ": "O",
  "Ő": "O",
  "ō": "o",
  "ŏ": "o",
  "ő": "o",
  "Ŕ": "R",
  "Ŗ": "R",
  "Ř": "R",
  "ŕ": "r",
  "ŗ": "r",
  "ř": "r",
  "Ś": "S",
  "Ŝ": "S",
  "Ş": "S",
  "Š": "S",
  "ś": "s",
  "ŝ": "s",
  "ş": "s",
  "š": "s",
  "Ţ": "T",
  "Ť": "T",
  "Ŧ": "T",
  "ţ": "t",
  "ť": "t",
  "ŧ": "t",
  "Ũ": "U",
  "Ū": "U",
  "Ŭ": "U",
  "Ů": "U",
  "Ű": "U",
  "Ų": "U",
  "ũ": "u",
  "ū": "u",
  "ŭ": "u",
  "ů": "u",
  "ű": "u",
  "ų": "u",
  "Ŵ": "W",
  "ŵ": "w",
  "Ŷ": "Y",
  "ŷ": "y",
  "Ÿ": "Y",
  "Ź": "Z",
  "Ż": "Z",
  "Ž": "Z",
  "ź": "z",
  "ż": "z",
  "ž": "z",
  "Ĳ": "IJ",
  "ĳ": "ij",
  "Œ": "Oe",
  "œ": "oe",
  "ŉ": "'n",
  "ſ": "s"
};
var deburrLetter = basePropertyOf_default(deburredLetters);
var deburrLetter_default = deburrLetter;

// node_modules/lodash-es/deburr.js
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
var rsComboMarksRange3 = "\\u0300-\\u036f";
var reComboHalfMarksRange3 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange3 = "\\u20d0-\\u20ff";
var rsComboRange3 = rsComboMarksRange3 + reComboHalfMarksRange3 + rsComboSymbolsRange3;
var rsCombo2 = "[" + rsComboRange3 + "]";
var reComboMark = RegExp(rsCombo2, "g");
function deburr(string) {
  string = toString_default(string);
  return string && string.replace(reLatin, deburrLetter_default).replace(reComboMark, "");
}
var deburr_default = deburr;

// node_modules/lodash-es/_asciiWords.js
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
function asciiWords(string) {
  return string.match(reAsciiWord) || [];
}
var asciiWords_default = asciiWords;

// node_modules/lodash-es/_hasUnicodeWord.js
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
function hasUnicodeWord(string) {
  return reHasUnicodeWord.test(string);
}
var hasUnicodeWord_default = hasUnicodeWord;

// node_modules/lodash-es/_unicodeWords.js
var rsAstralRange3 = "\\ud800-\\udfff";
var rsComboMarksRange4 = "\\u0300-\\u036f";
var reComboHalfMarksRange4 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange4 = "\\u20d0-\\u20ff";
var rsComboRange4 = rsComboMarksRange4 + reComboHalfMarksRange4 + rsComboSymbolsRange4;
var rsDingbatRange = "\\u2700-\\u27bf";
var rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff";
var rsMathOpRange = "\\xac\\xb1\\xd7\\xf7";
var rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf";
var rsPunctuationRange = "\\u2000-\\u206f";
var rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
var rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde";
var rsVarRange3 = "\\ufe0e\\ufe0f";
var rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
var rsApos = "['’]";
var rsBreak = "[" + rsBreakRange + "]";
var rsCombo3 = "[" + rsComboRange4 + "]";
var rsDigits = "\\d+";
var rsDingbat = "[" + rsDingbatRange + "]";
var rsLower = "[" + rsLowerRange + "]";
var rsMisc = "[^" + rsAstralRange3 + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]";
var rsFitz2 = "\\ud83c[\\udffb-\\udfff]";
var rsModifier2 = "(?:" + rsCombo3 + "|" + rsFitz2 + ")";
var rsNonAstral2 = "[^" + rsAstralRange3 + "]";
var rsRegional2 = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair2 = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsUpper = "[" + rsUpperRange + "]";
var rsZWJ3 = "\\u200d";
var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")";
var rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")";
var rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?";
var rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?";
var reOptMod2 = rsModifier2 + "?";
var rsOptVar2 = "[" + rsVarRange3 + "]?";
var rsOptJoin2 = "(?:" + rsZWJ3 + "(?:" + [rsNonAstral2, rsRegional2, rsSurrPair2].join("|") + ")" + rsOptVar2 + reOptMod2 + ")*";
var rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])";
var rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])";
var rsSeq2 = rsOptVar2 + reOptMod2 + rsOptJoin2;
var rsEmoji = "(?:" + [rsDingbat, rsRegional2, rsSurrPair2].join("|") + ")" + rsSeq2;
var reUnicodeWord = RegExp([
  rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
  rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
  rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
  rsUpper + "+" + rsOptContrUpper,
  rsOrdUpper,
  rsOrdLower,
  rsDigits,
  rsEmoji
].join("|"), "g");
function unicodeWords(string) {
  return string.match(reUnicodeWord) || [];
}
var unicodeWords_default = unicodeWords;

// node_modules/lodash-es/words.js
function words(string, pattern, guard) {
  string = toString_default(string);
  pattern = guard ? void 0 : pattern;
  if (pattern === void 0) {
    return hasUnicodeWord_default(string) ? unicodeWords_default(string) : asciiWords_default(string);
  }
  return string.match(pattern) || [];
}
var words_default = words;

// node_modules/lodash-es/_createCompounder.js
var rsApos2 = "['’]";
var reApos = RegExp(rsApos2, "g");
function createCompounder(callback) {
  return function(string) {
    return arrayReduce_default(words_default(deburr_default(string).replace(reApos, "")), callback, "");
  };
}
var createCompounder_default = createCompounder;

// node_modules/lodash-es/camelCase.js
var camelCase = createCompounder_default(function(result2, word, index) {
  word = word.toLowerCase();
  return result2 + (index ? capitalize_default(word) : word);
});
var camelCase_default = camelCase;

// node_modules/lodash-es/castArray.js
function castArray() {
  if (!arguments.length) {
    return [];
  }
  var value = arguments[0];
  return isArray_default(value) ? value : [value];
}
var castArray_default = castArray;

// node_modules/lodash-es/_createRound.js
var nativeIsFinite = root_default.isFinite;
var nativeMin3 = Math.min;
function createRound(methodName) {
  var func = Math[methodName];
  return function(number, precision) {
    number = toNumber_default(number);
    precision = precision == null ? 0 : nativeMin3(toInteger_default(precision), 292);
    if (precision && nativeIsFinite(number)) {
      var pair = (toString_default(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
      pair = (toString_default(value) + "e").split("e");
      return +(pair[0] + "e" + (+pair[1] - precision));
    }
    return func(number);
  };
}
var createRound_default = createRound;

// node_modules/lodash-es/ceil.js
var ceil = createRound_default("ceil");
var ceil_default = ceil;

// node_modules/lodash-es/chain.js
function chain(value) {
  var result2 = wrapperLodash_default(value);
  result2.__chain__ = true;
  return result2;
}
var chain_default = chain;

// node_modules/lodash-es/chunk.js
var nativeCeil = Math.ceil;
var nativeMax5 = Math.max;
function chunk(array, size2, guard) {
  if (guard ? isIterateeCall_default(array, size2, guard) : size2 === void 0) {
    size2 = 1;
  } else {
    size2 = nativeMax5(toInteger_default(size2), 0);
  }
  var length = array == null ? 0 : array.length;
  if (!length || size2 < 1) {
    return [];
  }
  var index = 0, resIndex = 0, result2 = Array(nativeCeil(length / size2));
  while (index < length) {
    result2[resIndex++] = baseSlice_default(array, index, index += size2);
  }
  return result2;
}
var chunk_default = chunk;

// node_modules/lodash-es/_baseClamp.js
function baseClamp(number, lower, upper) {
  if (number === number) {
    if (upper !== void 0) {
      number = number <= upper ? number : upper;
    }
    if (lower !== void 0) {
      number = number >= lower ? number : lower;
    }
  }
  return number;
}
var baseClamp_default = baseClamp;

// node_modules/lodash-es/clamp.js
function clamp(number, lower, upper) {
  if (upper === void 0) {
    upper = lower;
    lower = void 0;
  }
  if (upper !== void 0) {
    upper = toNumber_default(upper);
    upper = upper === upper ? upper : 0;
  }
  if (lower !== void 0) {
    lower = toNumber_default(lower);
    lower = lower === lower ? lower : 0;
  }
  return baseClamp_default(toNumber_default(number), lower, upper);
}
var clamp_default = clamp;

// node_modules/lodash-es/_stackClear.js
function stackClear() {
  this.__data__ = new ListCache_default();
  this.size = 0;
}
var stackClear_default = stackClear;

// node_modules/lodash-es/_stackDelete.js
function stackDelete(key) {
  var data = this.__data__, result2 = data["delete"](key);
  this.size = data.size;
  return result2;
}
var stackDelete_default = stackDelete;

// node_modules/lodash-es/_stackGet.js
function stackGet(key) {
  return this.__data__.get(key);
}
var stackGet_default = stackGet;

// node_modules/lodash-es/_stackHas.js
function stackHas(key) {
  return this.__data__.has(key);
}
var stackHas_default = stackHas;

// node_modules/lodash-es/_stackSet.js
var LARGE_ARRAY_SIZE = 200;
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache_default) {
    var pairs = data.__data__;
    if (!Map_default || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache_default(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}
var stackSet_default = stackSet;

// node_modules/lodash-es/_Stack.js
function Stack(entries) {
  var data = this.__data__ = new ListCache_default(entries);
  this.size = data.size;
}
Stack.prototype.clear = stackClear_default;
Stack.prototype["delete"] = stackDelete_default;
Stack.prototype.get = stackGet_default;
Stack.prototype.has = stackHas_default;
Stack.prototype.set = stackSet_default;
var Stack_default = Stack;

// node_modules/lodash-es/_baseAssign.js
function baseAssign(object, source) {
  return object && copyObject_default(source, keys_default(source), object);
}
var baseAssign_default = baseAssign;

// node_modules/lodash-es/_baseAssignIn.js
function baseAssignIn(object, source) {
  return object && copyObject_default(source, keysIn_default(source), object);
}
var baseAssignIn_default = baseAssignIn;

// node_modules/lodash-es/_cloneBuffer.js
var freeExports3 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule3 = freeExports3 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports3 = freeModule3 && freeModule3.exports === freeExports3;
var Buffer3 = moduleExports3 ? root_default.Buffer : void 0;
var allocUnsafe = Buffer3 ? Buffer3.allocUnsafe : void 0;
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
  buffer.copy(result2);
  return result2;
}
var cloneBuffer_default = cloneBuffer;

// node_modules/lodash-es/_arrayFilter.js
function arrayFilter(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result2[resIndex++] = value;
    }
  }
  return result2;
}
var arrayFilter_default = arrayFilter;

// node_modules/lodash-es/stubArray.js
function stubArray() {
  return [];
}
var stubArray_default = stubArray;

// node_modules/lodash-es/_getSymbols.js
var objectProto16 = Object.prototype;
var propertyIsEnumerable2 = objectProto16.propertyIsEnumerable;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbols = !nativeGetSymbols ? stubArray_default : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter_default(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable2.call(object, symbol);
  });
};
var getSymbols_default = getSymbols;

// node_modules/lodash-es/_copySymbols.js
function copySymbols(source, object) {
  return copyObject_default(source, getSymbols_default(source), object);
}
var copySymbols_default = copySymbols;

// node_modules/lodash-es/_getSymbolsIn.js
var nativeGetSymbols2 = Object.getOwnPropertySymbols;
var getSymbolsIn = !nativeGetSymbols2 ? stubArray_default : function(object) {
  var result2 = [];
  while (object) {
    arrayPush_default(result2, getSymbols_default(object));
    object = getPrototype_default(object);
  }
  return result2;
};
var getSymbolsIn_default = getSymbolsIn;

// node_modules/lodash-es/_copySymbolsIn.js
function copySymbolsIn(source, object) {
  return copyObject_default(source, getSymbolsIn_default(source), object);
}
var copySymbolsIn_default = copySymbolsIn;

// node_modules/lodash-es/_baseGetAllKeys.js
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result2 = keysFunc(object);
  return isArray_default(object) ? result2 : arrayPush_default(result2, symbolsFunc(object));
}
var baseGetAllKeys_default = baseGetAllKeys;

// node_modules/lodash-es/_getAllKeys.js
function getAllKeys(object) {
  return baseGetAllKeys_default(object, keys_default, getSymbols_default);
}
var getAllKeys_default = getAllKeys;

// node_modules/lodash-es/_getAllKeysIn.js
function getAllKeysIn(object) {
  return baseGetAllKeys_default(object, keysIn_default, getSymbolsIn_default);
}
var getAllKeysIn_default = getAllKeysIn;

// node_modules/lodash-es/_DataView.js
var DataView = getNative_default(root_default, "DataView");
var DataView_default = DataView;

// node_modules/lodash-es/_Promise.js
var Promise2 = getNative_default(root_default, "Promise");
var Promise_default = Promise2;

// node_modules/lodash-es/_Set.js
var Set2 = getNative_default(root_default, "Set");
var Set_default = Set2;

// node_modules/lodash-es/_getTag.js
var mapTag2 = "[object Map]";
var objectTag3 = "[object Object]";
var promiseTag = "[object Promise]";
var setTag2 = "[object Set]";
var weakMapTag2 = "[object WeakMap]";
var dataViewTag2 = "[object DataView]";
var dataViewCtorString = toSource_default(DataView_default);
var mapCtorString = toSource_default(Map_default);
var promiseCtorString = toSource_default(Promise_default);
var setCtorString = toSource_default(Set_default);
var weakMapCtorString = toSource_default(WeakMap_default);
var getTag = baseGetTag_default;
if (DataView_default && getTag(new DataView_default(new ArrayBuffer(1))) != dataViewTag2 || Map_default && getTag(new Map_default()) != mapTag2 || Promise_default && getTag(Promise_default.resolve()) != promiseTag || Set_default && getTag(new Set_default()) != setTag2 || WeakMap_default && getTag(new WeakMap_default()) != weakMapTag2) {
  getTag = function(value) {
    var result2 = baseGetTag_default(value), Ctor = result2 == objectTag3 ? value.constructor : void 0, ctorString = Ctor ? toSource_default(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag2;
        case mapCtorString:
          return mapTag2;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag2;
        case weakMapCtorString:
          return weakMapTag2;
      }
    }
    return result2;
  };
}
var getTag_default = getTag;

// node_modules/lodash-es/_initCloneArray.js
var objectProto17 = Object.prototype;
var hasOwnProperty14 = objectProto17.hasOwnProperty;
function initCloneArray(array) {
  var length = array.length, result2 = new array.constructor(length);
  if (length && typeof array[0] == "string" && hasOwnProperty14.call(array, "index")) {
    result2.index = array.index;
    result2.input = array.input;
  }
  return result2;
}
var initCloneArray_default = initCloneArray;

// node_modules/lodash-es/_Uint8Array.js
var Uint8Array = root_default.Uint8Array;
var Uint8Array_default = Uint8Array;

// node_modules/lodash-es/_cloneArrayBuffer.js
function cloneArrayBuffer(arrayBuffer) {
  var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array_default(result2).set(new Uint8Array_default(arrayBuffer));
  return result2;
}
var cloneArrayBuffer_default = cloneArrayBuffer;

// node_modules/lodash-es/_cloneDataView.js
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer_default(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}
var cloneDataView_default = cloneDataView;

// node_modules/lodash-es/_cloneRegExp.js
var reFlags = /\w*$/;
function cloneRegExp(regexp) {
  var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result2.lastIndex = regexp.lastIndex;
  return result2;
}
var cloneRegExp_default = cloneRegExp;

// node_modules/lodash-es/_cloneSymbol.js
var symbolProto2 = Symbol_default ? Symbol_default.prototype : void 0;
var symbolValueOf = symbolProto2 ? symbolProto2.valueOf : void 0;
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}
var cloneSymbol_default = cloneSymbol;

// node_modules/lodash-es/_cloneTypedArray.js
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer_default(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}
var cloneTypedArray_default = cloneTypedArray;

// node_modules/lodash-es/_initCloneByTag.js
var boolTag2 = "[object Boolean]";
var dateTag2 = "[object Date]";
var mapTag3 = "[object Map]";
var numberTag2 = "[object Number]";
var regexpTag2 = "[object RegExp]";
var setTag3 = "[object Set]";
var stringTag2 = "[object String]";
var symbolTag2 = "[object Symbol]";
var arrayBufferTag2 = "[object ArrayBuffer]";
var dataViewTag3 = "[object DataView]";
var float32Tag2 = "[object Float32Array]";
var float64Tag2 = "[object Float64Array]";
var int8Tag2 = "[object Int8Array]";
var int16Tag2 = "[object Int16Array]";
var int32Tag2 = "[object Int32Array]";
var uint8Tag2 = "[object Uint8Array]";
var uint8ClampedTag2 = "[object Uint8ClampedArray]";
var uint16Tag2 = "[object Uint16Array]";
var uint32Tag2 = "[object Uint32Array]";
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag2:
      return cloneArrayBuffer_default(object);
    case boolTag2:
    case dateTag2:
      return new Ctor(+object);
    case dataViewTag3:
      return cloneDataView_default(object, isDeep);
    case float32Tag2:
    case float64Tag2:
    case int8Tag2:
    case int16Tag2:
    case int32Tag2:
    case uint8Tag2:
    case uint8ClampedTag2:
    case uint16Tag2:
    case uint32Tag2:
      return cloneTypedArray_default(object, isDeep);
    case mapTag3:
      return new Ctor();
    case numberTag2:
    case stringTag2:
      return new Ctor(object);
    case regexpTag2:
      return cloneRegExp_default(object);
    case setTag3:
      return new Ctor();
    case symbolTag2:
      return cloneSymbol_default(object);
  }
}
var initCloneByTag_default = initCloneByTag;

// node_modules/lodash-es/_initCloneObject.js
function initCloneObject(object) {
  return typeof object.constructor == "function" && !isPrototype_default(object) ? baseCreate_default(getPrototype_default(object)) : {};
}
var initCloneObject_default = initCloneObject;

// node_modules/lodash-es/_baseIsMap.js
var mapTag4 = "[object Map]";
function baseIsMap(value) {
  return isObjectLike_default(value) && getTag_default(value) == mapTag4;
}
var baseIsMap_default = baseIsMap;

// node_modules/lodash-es/isMap.js
var nodeIsMap = nodeUtil_default && nodeUtil_default.isMap;
var isMap = nodeIsMap ? baseUnary_default(nodeIsMap) : baseIsMap_default;
var isMap_default = isMap;

// node_modules/lodash-es/_baseIsSet.js
var setTag4 = "[object Set]";
function baseIsSet(value) {
  return isObjectLike_default(value) && getTag_default(value) == setTag4;
}
var baseIsSet_default = baseIsSet;

// node_modules/lodash-es/isSet.js
var nodeIsSet = nodeUtil_default && nodeUtil_default.isSet;
var isSet = nodeIsSet ? baseUnary_default(nodeIsSet) : baseIsSet_default;
var isSet_default = isSet;

// node_modules/lodash-es/_baseClone.js
var CLONE_DEEP_FLAG = 1;
var CLONE_FLAT_FLAG = 2;
var CLONE_SYMBOLS_FLAG = 4;
var argsTag3 = "[object Arguments]";
var arrayTag2 = "[object Array]";
var boolTag3 = "[object Boolean]";
var dateTag3 = "[object Date]";
var errorTag3 = "[object Error]";
var funcTag3 = "[object Function]";
var genTag2 = "[object GeneratorFunction]";
var mapTag5 = "[object Map]";
var numberTag3 = "[object Number]";
var objectTag4 = "[object Object]";
var regexpTag3 = "[object RegExp]";
var setTag5 = "[object Set]";
var stringTag3 = "[object String]";
var symbolTag3 = "[object Symbol]";
var weakMapTag3 = "[object WeakMap]";
var arrayBufferTag3 = "[object ArrayBuffer]";
var dataViewTag4 = "[object DataView]";
var float32Tag3 = "[object Float32Array]";
var float64Tag3 = "[object Float64Array]";
var int8Tag3 = "[object Int8Array]";
var int16Tag3 = "[object Int16Array]";
var int32Tag3 = "[object Int32Array]";
var uint8Tag3 = "[object Uint8Array]";
var uint8ClampedTag3 = "[object Uint8ClampedArray]";
var uint16Tag3 = "[object Uint16Array]";
var uint32Tag3 = "[object Uint32Array]";
var cloneableTags = {};
cloneableTags[argsTag3] = cloneableTags[arrayTag2] = cloneableTags[arrayBufferTag3] = cloneableTags[dataViewTag4] = cloneableTags[boolTag3] = cloneableTags[dateTag3] = cloneableTags[float32Tag3] = cloneableTags[float64Tag3] = cloneableTags[int8Tag3] = cloneableTags[int16Tag3] = cloneableTags[int32Tag3] = cloneableTags[mapTag5] = cloneableTags[numberTag3] = cloneableTags[objectTag4] = cloneableTags[regexpTag3] = cloneableTags[setTag5] = cloneableTags[stringTag3] = cloneableTags[symbolTag3] = cloneableTags[uint8Tag3] = cloneableTags[uint8ClampedTag3] = cloneableTags[uint16Tag3] = cloneableTags[uint32Tag3] = true;
cloneableTags[errorTag3] = cloneableTags[funcTag3] = cloneableTags[weakMapTag3] = false;
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
  if (customizer) {
    result2 = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result2 !== void 0) {
    return result2;
  }
  if (!isObject_default(value)) {
    return value;
  }
  var isArr = isArray_default(value);
  if (isArr) {
    result2 = initCloneArray_default(value);
    if (!isDeep) {
      return copyArray_default(value, result2);
    }
  } else {
    var tag = getTag_default(value), isFunc = tag == funcTag3 || tag == genTag2;
    if (isBuffer_default(value)) {
      return cloneBuffer_default(value, isDeep);
    }
    if (tag == objectTag4 || tag == argsTag3 || isFunc && !object) {
      result2 = isFlat || isFunc ? {} : initCloneObject_default(value);
      if (!isDeep) {
        return isFlat ? copySymbolsIn_default(value, baseAssignIn_default(result2, value)) : copySymbols_default(value, baseAssign_default(result2, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result2 = initCloneByTag_default(value, tag, isDeep);
    }
  }
  stack || (stack = new Stack_default());
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result2);
  if (isSet_default(value)) {
    value.forEach(function(subValue) {
      result2.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (isMap_default(value)) {
    value.forEach(function(subValue, key2) {
      result2.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
    });
  }
  var keysFunc = isFull ? isFlat ? getAllKeysIn_default : getAllKeys_default : isFlat ? keysIn_default : keys_default;
  var props = isArr ? void 0 : keysFunc(value);
  arrayEach_default(props || value, function(subValue, key2) {
    if (props) {
      key2 = subValue;
      subValue = value[key2];
    }
    assignValue_default(result2, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
  });
  return result2;
}
var baseClone_default = baseClone;

// node_modules/lodash-es/clone.js
var CLONE_SYMBOLS_FLAG2 = 4;
function clone(value) {
  return baseClone_default(value, CLONE_SYMBOLS_FLAG2);
}
var clone_default = clone;

// node_modules/lodash-es/cloneDeep.js
var CLONE_DEEP_FLAG2 = 1;
var CLONE_SYMBOLS_FLAG3 = 4;
function cloneDeep(value) {
  return baseClone_default(value, CLONE_DEEP_FLAG2 | CLONE_SYMBOLS_FLAG3);
}
var cloneDeep_default = cloneDeep;

// node_modules/lodash-es/cloneDeepWith.js
var CLONE_DEEP_FLAG3 = 1;
var CLONE_SYMBOLS_FLAG4 = 4;
function cloneDeepWith(value, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseClone_default(value, CLONE_DEEP_FLAG3 | CLONE_SYMBOLS_FLAG4, customizer);
}
var cloneDeepWith_default = cloneDeepWith;

// node_modules/lodash-es/cloneWith.js
var CLONE_SYMBOLS_FLAG5 = 4;
function cloneWith(value, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseClone_default(value, CLONE_SYMBOLS_FLAG5, customizer);
}
var cloneWith_default = cloneWith;

// node_modules/lodash-es/commit.js
function wrapperCommit() {
  return new LodashWrapper_default(this.value(), this.__chain__);
}
var commit_default = wrapperCommit;

// node_modules/lodash-es/compact.js
function compact(array) {
  var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
  while (++index < length) {
    var value = array[index];
    if (value) {
      result2[resIndex++] = value;
    }
  }
  return result2;
}
var compact_default = compact;

// node_modules/lodash-es/concat.js
function concat() {
  var length = arguments.length;
  if (!length) {
    return [];
  }
  var args = Array(length - 1), array = arguments[0], index = length;
  while (index--) {
    args[index - 1] = arguments[index];
  }
  return arrayPush_default(isArray_default(array) ? copyArray_default(array) : [array], baseFlatten_default(args, 1));
}
var concat_default = concat;

// node_modules/lodash-es/_setCacheAdd.js
var HASH_UNDEFINED3 = "__lodash_hash_undefined__";
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED3);
  return this;
}
var setCacheAdd_default = setCacheAdd;

// node_modules/lodash-es/_setCacheHas.js
function setCacheHas(value) {
  return this.__data__.has(value);
}
var setCacheHas_default = setCacheHas;

// node_modules/lodash-es/_SetCache.js
function SetCache(values2) {
  var index = -1, length = values2 == null ? 0 : values2.length;
  this.__data__ = new MapCache_default();
  while (++index < length) {
    this.add(values2[index]);
  }
}
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd_default;
SetCache.prototype.has = setCacheHas_default;
var SetCache_default = SetCache;

// node_modules/lodash-es/_arraySome.js
function arraySome(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}
var arraySome_default = arraySome;

// node_modules/lodash-es/_cacheHas.js
function cacheHas(cache, key) {
  return cache.has(key);
}
var cacheHas_default = cacheHas;

// node_modules/lodash-es/_equalArrays.js
var COMPARE_PARTIAL_FLAG = 1;
var COMPARE_UNORDERED_FLAG = 2;
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache_default() : void 0;
  stack.set(array, other);
  stack.set(other, array);
  while (++index < arrLength) {
    var arrValue = array[index], othValue = other[index];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result2 = false;
      break;
    }
    if (seen) {
      if (!arraySome_default(other, function(othValue2, othIndex) {
        if (!cacheHas_default(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result2 = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result2 = false;
      break;
    }
  }
  stack["delete"](array);
  stack["delete"](other);
  return result2;
}
var equalArrays_default = equalArrays;

// node_modules/lodash-es/_mapToArray.js
function mapToArray(map2) {
  var index = -1, result2 = Array(map2.size);
  map2.forEach(function(value, key) {
    result2[++index] = [key, value];
  });
  return result2;
}
var mapToArray_default = mapToArray;

// node_modules/lodash-es/_setToArray.js
function setToArray(set2) {
  var index = -1, result2 = Array(set2.size);
  set2.forEach(function(value) {
    result2[++index] = value;
  });
  return result2;
}
var setToArray_default = setToArray;

// node_modules/lodash-es/_equalByTag.js
var COMPARE_PARTIAL_FLAG2 = 1;
var COMPARE_UNORDERED_FLAG2 = 2;
var boolTag4 = "[object Boolean]";
var dateTag4 = "[object Date]";
var errorTag4 = "[object Error]";
var mapTag6 = "[object Map]";
var numberTag4 = "[object Number]";
var regexpTag4 = "[object RegExp]";
var setTag6 = "[object Set]";
var stringTag4 = "[object String]";
var symbolTag4 = "[object Symbol]";
var arrayBufferTag4 = "[object ArrayBuffer]";
var dataViewTag5 = "[object DataView]";
var symbolProto3 = Symbol_default ? Symbol_default.prototype : void 0;
var symbolValueOf2 = symbolProto3 ? symbolProto3.valueOf : void 0;
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag5:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;
    case arrayBufferTag4:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array_default(object), new Uint8Array_default(other))) {
        return false;
      }
      return true;
    case boolTag4:
    case dateTag4:
    case numberTag4:
      return eq_default(+object, +other);
    case errorTag4:
      return object.name == other.name && object.message == other.message;
    case regexpTag4:
    case stringTag4:
      return object == other + "";
    case mapTag6:
      var convert = mapToArray_default;
    case setTag6:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG2;
      convert || (convert = setToArray_default);
      if (object.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG2;
      stack.set(object, other);
      var result2 = equalArrays_default(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack["delete"](object);
      return result2;
    case symbolTag4:
      if (symbolValueOf2) {
        return symbolValueOf2.call(object) == symbolValueOf2.call(other);
      }
  }
  return false;
}
var equalByTag_default = equalByTag;

// node_modules/lodash-es/_equalObjects.js
var COMPARE_PARTIAL_FLAG3 = 1;
var objectProto18 = Object.prototype;
var hasOwnProperty15 = objectProto18.hasOwnProperty;
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG3, objProps = getAllKeys_default(object), objLength = objProps.length, othProps = getAllKeys_default(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty15.call(other, key))) {
      return false;
    }
  }
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result2 = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key], othValue = other[key];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result2 = false;
      break;
    }
    skipCtor || (skipCtor = key == "constructor");
  }
  if (result2 && !skipCtor) {
    var objCtor = object.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result2 = false;
    }
  }
  stack["delete"](object);
  stack["delete"](other);
  return result2;
}
var equalObjects_default = equalObjects;

// node_modules/lodash-es/_baseIsEqualDeep.js
var COMPARE_PARTIAL_FLAG4 = 1;
var argsTag4 = "[object Arguments]";
var arrayTag3 = "[object Array]";
var objectTag5 = "[object Object]";
var objectProto19 = Object.prototype;
var hasOwnProperty16 = objectProto19.hasOwnProperty;
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray_default(object), othIsArr = isArray_default(other), objTag = objIsArr ? arrayTag3 : getTag_default(object), othTag = othIsArr ? arrayTag3 : getTag_default(other);
  objTag = objTag == argsTag4 ? objectTag5 : objTag;
  othTag = othTag == argsTag4 ? objectTag5 : othTag;
  var objIsObj = objTag == objectTag5, othIsObj = othTag == objectTag5, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer_default(object)) {
    if (!isBuffer_default(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack_default());
    return objIsArr || isTypedArray_default(object) ? equalArrays_default(object, other, bitmask, customizer, equalFunc, stack) : equalByTag_default(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG4)) {
    var objIsWrapped = objIsObj && hasOwnProperty16.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty16.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack_default());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack_default());
  return equalObjects_default(object, other, bitmask, customizer, equalFunc, stack);
}
var baseIsEqualDeep_default = baseIsEqualDeep;

// node_modules/lodash-es/_baseIsEqual.js
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike_default(value) && !isObjectLike_default(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep_default(value, other, bitmask, customizer, baseIsEqual, stack);
}
var baseIsEqual_default = baseIsEqual;

// node_modules/lodash-es/_baseIsMatch.js
var COMPARE_PARTIAL_FLAG5 = 1;
var COMPARE_UNORDERED_FLAG3 = 2;
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length, length = index, noCustomizer = !customizer;
  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0], objValue = object[key], srcValue = data[1];
    if (noCustomizer && data[2]) {
      if (objValue === void 0 && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack_default();
      if (customizer) {
        var result2 = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result2 === void 0 ? baseIsEqual_default(srcValue, objValue, COMPARE_PARTIAL_FLAG5 | COMPARE_UNORDERED_FLAG3, customizer, stack) : result2)) {
        return false;
      }
    }
  }
  return true;
}
var baseIsMatch_default = baseIsMatch;

// node_modules/lodash-es/_isStrictComparable.js
function isStrictComparable(value) {
  return value === value && !isObject_default(value);
}
var isStrictComparable_default = isStrictComparable;

// node_modules/lodash-es/_getMatchData.js
function getMatchData(object) {
  var result2 = keys_default(object), length = result2.length;
  while (length--) {
    var key = result2[length], value = object[key];
    result2[length] = [key, value, isStrictComparable_default(value)];
  }
  return result2;
}
var getMatchData_default = getMatchData;

// node_modules/lodash-es/_matchesStrictComparable.js
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
  };
}
var matchesStrictComparable_default = matchesStrictComparable;

// node_modules/lodash-es/_baseMatches.js
function baseMatches(source) {
  var matchData = getMatchData_default(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable_default(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch_default(object, source, matchData);
  };
}
var baseMatches_default = baseMatches;

// node_modules/lodash-es/_baseHasIn.js
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}
var baseHasIn_default = baseHasIn;

// node_modules/lodash-es/_hasPath.js
function hasPath(object, path, hasFunc) {
  path = castPath_default(path, object);
  var index = -1, length = path.length, result2 = false;
  while (++index < length) {
    var key = toKey_default(path[index]);
    if (!(result2 = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result2 || ++index != length) {
    return result2;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength_default(length) && isIndex_default(key, length) && (isArray_default(object) || isArguments_default(object));
}
var hasPath_default = hasPath;

// node_modules/lodash-es/hasIn.js
function hasIn(object, path) {
  return object != null && hasPath_default(object, path, baseHasIn_default);
}
var hasIn_default = hasIn;

// node_modules/lodash-es/_baseMatchesProperty.js
var COMPARE_PARTIAL_FLAG6 = 1;
var COMPARE_UNORDERED_FLAG4 = 2;
function baseMatchesProperty(path, srcValue) {
  if (isKey_default(path) && isStrictComparable_default(srcValue)) {
    return matchesStrictComparable_default(toKey_default(path), srcValue);
  }
  return function(object) {
    var objValue = get_default(object, path);
    return objValue === void 0 && objValue === srcValue ? hasIn_default(object, path) : baseIsEqual_default(srcValue, objValue, COMPARE_PARTIAL_FLAG6 | COMPARE_UNORDERED_FLAG4);
  };
}
var baseMatchesProperty_default = baseMatchesProperty;

// node_modules/lodash-es/_baseProperty.js
function baseProperty(key) {
  return function(object) {
    return object == null ? void 0 : object[key];
  };
}
var baseProperty_default = baseProperty;

// node_modules/lodash-es/_basePropertyDeep.js
function basePropertyDeep(path) {
  return function(object) {
    return baseGet_default(object, path);
  };
}
var basePropertyDeep_default = basePropertyDeep;

// node_modules/lodash-es/property.js
function property(path) {
  return isKey_default(path) ? baseProperty_default(toKey_default(path)) : basePropertyDeep_default(path);
}
var property_default = property;

// node_modules/lodash-es/_baseIteratee.js
function baseIteratee(value) {
  if (typeof value == "function") {
    return value;
  }
  if (value == null) {
    return identity_default;
  }
  if (typeof value == "object") {
    return isArray_default(value) ? baseMatchesProperty_default(value[0], value[1]) : baseMatches_default(value);
  }
  return property_default(value);
}
var baseIteratee_default = baseIteratee;

// node_modules/lodash-es/cond.js
var FUNC_ERROR_TEXT5 = "Expected a function";
function cond(pairs) {
  var length = pairs == null ? 0 : pairs.length, toIteratee = baseIteratee_default;
  pairs = !length ? [] : arrayMap_default(pairs, function(pair) {
    if (typeof pair[1] != "function") {
      throw new TypeError(FUNC_ERROR_TEXT5);
    }
    return [toIteratee(pair[0]), pair[1]];
  });
  return baseRest_default(function(args) {
    var index = -1;
    while (++index < length) {
      var pair = pairs[index];
      if (apply_default(pair[0], this, args)) {
        return apply_default(pair[1], this, args);
      }
    }
  });
}
var cond_default = cond;

// node_modules/lodash-es/_baseConformsTo.js
function baseConformsTo(object, source, props) {
  var length = props.length;
  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (length--) {
    var key = props[length], predicate = source[key], value = object[key];
    if (value === void 0 && !(key in object) || !predicate(value)) {
      return false;
    }
  }
  return true;
}
var baseConformsTo_default = baseConformsTo;

// node_modules/lodash-es/_baseConforms.js
function baseConforms(source) {
  var props = keys_default(source);
  return function(object) {
    return baseConformsTo_default(object, source, props);
  };
}
var baseConforms_default = baseConforms;

// node_modules/lodash-es/conforms.js
var CLONE_DEEP_FLAG4 = 1;
function conforms(source) {
  return baseConforms_default(baseClone_default(source, CLONE_DEEP_FLAG4));
}
var conforms_default = conforms;

// node_modules/lodash-es/conformsTo.js
function conformsTo(object, source) {
  return source == null || baseConformsTo_default(object, source, keys_default(source));
}
var conformsTo_default = conformsTo;

// node_modules/lodash-es/_arrayAggregator.js
function arrayAggregator(array, setter, iteratee2, accumulator) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    var value = array[index];
    setter(accumulator, value, iteratee2(value), array);
  }
  return accumulator;
}
var arrayAggregator_default = arrayAggregator;

// node_modules/lodash-es/_createBaseFor.js
function createBaseFor(fromRight) {
  return function(object, iteratee2, keysFunc) {
    var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee2(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}
var createBaseFor_default = createBaseFor;

// node_modules/lodash-es/_baseFor.js
var baseFor = createBaseFor_default();
var baseFor_default = baseFor;

// node_modules/lodash-es/_baseForOwn.js
function baseForOwn(object, iteratee2) {
  return object && baseFor_default(object, iteratee2, keys_default);
}
var baseForOwn_default = baseForOwn;

// node_modules/lodash-es/_createBaseEach.js
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee2) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike_default(collection)) {
      return eachFunc(collection, iteratee2);
    }
    var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
    while (fromRight ? index-- : ++index < length) {
      if (iteratee2(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}
var createBaseEach_default = createBaseEach;

// node_modules/lodash-es/_baseEach.js
var baseEach = createBaseEach_default(baseForOwn_default);
var baseEach_default = baseEach;

// node_modules/lodash-es/_baseAggregator.js
function baseAggregator(collection, setter, iteratee2, accumulator) {
  baseEach_default(collection, function(value, key, collection2) {
    setter(accumulator, value, iteratee2(value), collection2);
  });
  return accumulator;
}
var baseAggregator_default = baseAggregator;

// node_modules/lodash-es/_createAggregator.js
function createAggregator(setter, initializer) {
  return function(collection, iteratee2) {
    var func = isArray_default(collection) ? arrayAggregator_default : baseAggregator_default, accumulator = initializer ? initializer() : {};
    return func(collection, setter, baseIteratee_default(iteratee2, 2), accumulator);
  };
}
var createAggregator_default = createAggregator;

// node_modules/lodash-es/countBy.js
var objectProto20 = Object.prototype;
var hasOwnProperty17 = objectProto20.hasOwnProperty;
var countBy = createAggregator_default(function(result2, value, key) {
  if (hasOwnProperty17.call(result2, key)) {
    ++result2[key];
  } else {
    baseAssignValue_default(result2, key, 1);
  }
});
var countBy_default = countBy;

// node_modules/lodash-es/create.js
function create(prototype, properties) {
  var result2 = baseCreate_default(prototype);
  return properties == null ? result2 : baseAssign_default(result2, properties);
}
var create_default = create;

// node_modules/lodash-es/curry.js
var WRAP_CURRY_FLAG6 = 8;
function curry(func, arity, guard) {
  arity = guard ? void 0 : arity;
  var result2 = createWrap_default(func, WRAP_CURRY_FLAG6, void 0, void 0, void 0, void 0, void 0, arity);
  result2.placeholder = curry.placeholder;
  return result2;
}
curry.placeholder = {};
var curry_default = curry;

// node_modules/lodash-es/curryRight.js
var WRAP_CURRY_RIGHT_FLAG4 = 16;
function curryRight(func, arity, guard) {
  arity = guard ? void 0 : arity;
  var result2 = createWrap_default(func, WRAP_CURRY_RIGHT_FLAG4, void 0, void 0, void 0, void 0, void 0, arity);
  result2.placeholder = curryRight.placeholder;
  return result2;
}
curryRight.placeholder = {};
var curryRight_default = curryRight;

// node_modules/lodash-es/now.js
var now = function() {
  return root_default.Date.now();
};
var now_default = now;

// node_modules/lodash-es/debounce.js
var FUNC_ERROR_TEXT6 = "Expected a function";
var nativeMax6 = Math.max;
var nativeMin4 = Math.min;
function debounce(func, wait, options) {
  var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT6);
  }
  wait = toNumber_default(wait) || 0;
  if (isObject_default(options)) {
    leading = !!options.leading;
    maxing = "maxWait" in options;
    maxWait = maxing ? nativeMax6(toNumber_default(options.maxWait) || 0, wait) : maxWait;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  function invokeFunc(time) {
    var args = lastArgs, thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time;
    result2 = func.apply(thisArg, args);
    return result2;
  }
  function leadingEdge(time) {
    lastInvokeTime = time;
    timerId = setTimeout(timerExpired, wait);
    return leading ? invokeFunc(time) : result2;
  }
  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin4(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time = now_default();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    timerId = setTimeout(timerExpired, remainingWait(time));
  }
  function trailingEdge(time) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = void 0;
    return result2;
  }
  function cancel() {
    if (timerId !== void 0) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result2 : trailingEdge(now_default());
  }
  function debounced() {
    var time = now_default(), isInvoking = shouldInvoke(time);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result2;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}
var debounce_default = debounce;

// node_modules/lodash-es/defaultTo.js
function defaultTo(value, defaultValue) {
  return value == null || value !== value ? defaultValue : value;
}
var defaultTo_default = defaultTo;

// node_modules/lodash-es/defaults.js
var objectProto21 = Object.prototype;
var hasOwnProperty18 = objectProto21.hasOwnProperty;
var defaults = baseRest_default(function(object, sources) {
  object = Object(object);
  var index = -1;
  var length = sources.length;
  var guard = length > 2 ? sources[2] : void 0;
  if (guard && isIterateeCall_default(sources[0], sources[1], guard)) {
    length = 1;
  }
  while (++index < length) {
    var source = sources[index];
    var props = keysIn_default(source);
    var propsIndex = -1;
    var propsLength = props.length;
    while (++propsIndex < propsLength) {
      var key = props[propsIndex];
      var value = object[key];
      if (value === void 0 || eq_default(value, objectProto21[key]) && !hasOwnProperty18.call(object, key)) {
        object[key] = source[key];
      }
    }
  }
  return object;
});
var defaults_default = defaults;

// node_modules/lodash-es/_assignMergeValue.js
function assignMergeValue(object, key, value) {
  if (value !== void 0 && !eq_default(object[key], value) || value === void 0 && !(key in object)) {
    baseAssignValue_default(object, key, value);
  }
}
var assignMergeValue_default = assignMergeValue;

// node_modules/lodash-es/isArrayLikeObject.js
function isArrayLikeObject(value) {
  return isObjectLike_default(value) && isArrayLike_default(value);
}
var isArrayLikeObject_default = isArrayLikeObject;

// node_modules/lodash-es/_safeGet.js
function safeGet(object, key) {
  if (key === "constructor" && typeof object[key] === "function") {
    return;
  }
  if (key == "__proto__") {
    return;
  }
  return object[key];
}
var safeGet_default = safeGet;

// node_modules/lodash-es/toPlainObject.js
function toPlainObject(value) {
  return copyObject_default(value, keysIn_default(value));
}
var toPlainObject_default = toPlainObject;

// node_modules/lodash-es/_baseMergeDeep.js
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet_default(object, key), srcValue = safeGet_default(source, key), stacked = stack.get(srcValue);
  if (stacked) {
    assignMergeValue_default(object, key, stacked);
    return;
  }
  var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : void 0;
  var isCommon = newValue === void 0;
  if (isCommon) {
    var isArr = isArray_default(srcValue), isBuff = !isArr && isBuffer_default(srcValue), isTyped = !isArr && !isBuff && isTypedArray_default(srcValue);
    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray_default(objValue)) {
        newValue = objValue;
      } else if (isArrayLikeObject_default(objValue)) {
        newValue = copyArray_default(objValue);
      } else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer_default(srcValue, true);
      } else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray_default(srcValue, true);
      } else {
        newValue = [];
      }
    } else if (isPlainObject_default(srcValue) || isArguments_default(srcValue)) {
      newValue = objValue;
      if (isArguments_default(objValue)) {
        newValue = toPlainObject_default(objValue);
      } else if (!isObject_default(objValue) || isFunction_default(objValue)) {
        newValue = initCloneObject_default(srcValue);
      }
    } else {
      isCommon = false;
    }
  }
  if (isCommon) {
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack["delete"](srcValue);
  }
  assignMergeValue_default(object, key, newValue);
}
var baseMergeDeep_default = baseMergeDeep;

// node_modules/lodash-es/_baseMerge.js
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor_default(source, function(srcValue, key) {
    stack || (stack = new Stack_default());
    if (isObject_default(srcValue)) {
      baseMergeDeep_default(object, source, key, srcIndex, baseMerge, customizer, stack);
    } else {
      var newValue = customizer ? customizer(safeGet_default(object, key), srcValue, key + "", object, source, stack) : void 0;
      if (newValue === void 0) {
        newValue = srcValue;
      }
      assignMergeValue_default(object, key, newValue);
    }
  }, keysIn_default);
}
var baseMerge_default = baseMerge;

// node_modules/lodash-es/_customDefaultsMerge.js
function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
  if (isObject_default(objValue) && isObject_default(srcValue)) {
    stack.set(srcValue, objValue);
    baseMerge_default(objValue, srcValue, void 0, customDefaultsMerge, stack);
    stack["delete"](srcValue);
  }
  return objValue;
}
var customDefaultsMerge_default = customDefaultsMerge;

// node_modules/lodash-es/mergeWith.js
var mergeWith = createAssigner_default(function(object, source, srcIndex, customizer) {
  baseMerge_default(object, source, srcIndex, customizer);
});
var mergeWith_default = mergeWith;

// node_modules/lodash-es/defaultsDeep.js
var defaultsDeep = baseRest_default(function(args) {
  args.push(void 0, customDefaultsMerge_default);
  return apply_default(mergeWith_default, void 0, args);
});
var defaultsDeep_default = defaultsDeep;

// node_modules/lodash-es/_baseDelay.js
var FUNC_ERROR_TEXT7 = "Expected a function";
function baseDelay(func, wait, args) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT7);
  }
  return setTimeout(function() {
    func.apply(void 0, args);
  }, wait);
}
var baseDelay_default = baseDelay;

// node_modules/lodash-es/defer.js
var defer = baseRest_default(function(func, args) {
  return baseDelay_default(func, 1, args);
});
var defer_default = defer;

// node_modules/lodash-es/delay.js
var delay = baseRest_default(function(func, wait, args) {
  return baseDelay_default(func, toNumber_default(wait) || 0, args);
});
var delay_default = delay;

// node_modules/lodash-es/_arrayIncludesWith.js
function arrayIncludesWith(array, value, comparator) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}
var arrayIncludesWith_default = arrayIncludesWith;

// node_modules/lodash-es/_baseDifference.js
var LARGE_ARRAY_SIZE2 = 200;
function baseDifference(array, values2, iteratee2, comparator) {
  var index = -1, includes2 = arrayIncludes_default, isCommon = true, length = array.length, result2 = [], valuesLength = values2.length;
  if (!length) {
    return result2;
  }
  if (iteratee2) {
    values2 = arrayMap_default(values2, baseUnary_default(iteratee2));
  }
  if (comparator) {
    includes2 = arrayIncludesWith_default;
    isCommon = false;
  } else if (values2.length >= LARGE_ARRAY_SIZE2) {
    includes2 = cacheHas_default;
    isCommon = false;
    values2 = new SetCache_default(values2);
  }
  outer:
    while (++index < length) {
      var value = array[index], computed2 = iteratee2 == null ? value : iteratee2(value);
      value = comparator || value !== 0 ? value : 0;
      if (isCommon && computed2 === computed2) {
        var valuesIndex = valuesLength;
        while (valuesIndex--) {
          if (values2[valuesIndex] === computed2) {
            continue outer;
          }
        }
        result2.push(value);
      } else if (!includes2(values2, computed2, comparator)) {
        result2.push(value);
      }
    }
  return result2;
}
var baseDifference_default = baseDifference;

// node_modules/lodash-es/difference.js
var difference = baseRest_default(function(array, values2) {
  return isArrayLikeObject_default(array) ? baseDifference_default(array, baseFlatten_default(values2, 1, isArrayLikeObject_default, true)) : [];
});
var difference_default = difference;

// node_modules/lodash-es/last.js
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : void 0;
}
var last_default = last;

// node_modules/lodash-es/differenceBy.js
var differenceBy = baseRest_default(function(array, values2) {
  var iteratee2 = last_default(values2);
  if (isArrayLikeObject_default(iteratee2)) {
    iteratee2 = void 0;
  }
  return isArrayLikeObject_default(array) ? baseDifference_default(array, baseFlatten_default(values2, 1, isArrayLikeObject_default, true), baseIteratee_default(iteratee2, 2)) : [];
});
var differenceBy_default = differenceBy;

// node_modules/lodash-es/differenceWith.js
var differenceWith = baseRest_default(function(array, values2) {
  var comparator = last_default(values2);
  if (isArrayLikeObject_default(comparator)) {
    comparator = void 0;
  }
  return isArrayLikeObject_default(array) ? baseDifference_default(array, baseFlatten_default(values2, 1, isArrayLikeObject_default, true), void 0, comparator) : [];
});
var differenceWith_default = differenceWith;

// node_modules/lodash-es/divide.js
var divide = createMathOperation_default(function(dividend, divisor) {
  return dividend / divisor;
}, 1);
var divide_default = divide;

// node_modules/lodash-es/drop.js
function drop(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  return baseSlice_default(array, n < 0 ? 0 : n, length);
}
var drop_default = drop;

// node_modules/lodash-es/dropRight.js
function dropRight(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  n = length - n;
  return baseSlice_default(array, 0, n < 0 ? 0 : n);
}
var dropRight_default = dropRight;

// node_modules/lodash-es/_baseWhile.js
function baseWhile(array, predicate, isDrop, fromRight) {
  var length = array.length, index = fromRight ? length : -1;
  while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {
  }
  return isDrop ? baseSlice_default(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice_default(array, fromRight ? index + 1 : 0, fromRight ? length : index);
}
var baseWhile_default = baseWhile;

// node_modules/lodash-es/dropRightWhile.js
function dropRightWhile(array, predicate) {
  return array && array.length ? baseWhile_default(array, baseIteratee_default(predicate, 3), true, true) : [];
}
var dropRightWhile_default = dropRightWhile;

// node_modules/lodash-es/dropWhile.js
function dropWhile(array, predicate) {
  return array && array.length ? baseWhile_default(array, baseIteratee_default(predicate, 3), true) : [];
}
var dropWhile_default = dropWhile;

// node_modules/lodash-es/_castFunction.js
function castFunction(value) {
  return typeof value == "function" ? value : identity_default;
}
var castFunction_default = castFunction;

// node_modules/lodash-es/forEach.js
function forEach(collection, iteratee2) {
  var func = isArray_default(collection) ? arrayEach_default : baseEach_default;
  return func(collection, castFunction_default(iteratee2));
}
var forEach_default = forEach;

// node_modules/lodash-es/_arrayEachRight.js
function arrayEachRight(array, iteratee2) {
  var length = array == null ? 0 : array.length;
  while (length--) {
    if (iteratee2(array[length], length, array) === false) {
      break;
    }
  }
  return array;
}
var arrayEachRight_default = arrayEachRight;

// node_modules/lodash-es/_baseForRight.js
var baseForRight = createBaseFor_default(true);
var baseForRight_default = baseForRight;

// node_modules/lodash-es/_baseForOwnRight.js
function baseForOwnRight(object, iteratee2) {
  return object && baseForRight_default(object, iteratee2, keys_default);
}
var baseForOwnRight_default = baseForOwnRight;

// node_modules/lodash-es/_baseEachRight.js
var baseEachRight = createBaseEach_default(baseForOwnRight_default, true);
var baseEachRight_default = baseEachRight;

// node_modules/lodash-es/forEachRight.js
function forEachRight(collection, iteratee2) {
  var func = isArray_default(collection) ? arrayEachRight_default : baseEachRight_default;
  return func(collection, castFunction_default(iteratee2));
}
var forEachRight_default = forEachRight;

// node_modules/lodash-es/endsWith.js
function endsWith(string, target, position) {
  string = toString_default(string);
  target = baseToString_default(target);
  var length = string.length;
  position = position === void 0 ? length : baseClamp_default(toInteger_default(position), 0, length);
  var end = position;
  position -= target.length;
  return position >= 0 && string.slice(position, end) == target;
}
var endsWith_default = endsWith;

// node_modules/lodash-es/_baseToPairs.js
function baseToPairs(object, props) {
  return arrayMap_default(props, function(key) {
    return [key, object[key]];
  });
}
var baseToPairs_default = baseToPairs;

// node_modules/lodash-es/_setToPairs.js
function setToPairs(set2) {
  var index = -1, result2 = Array(set2.size);
  set2.forEach(function(value) {
    result2[++index] = [value, value];
  });
  return result2;
}
var setToPairs_default = setToPairs;

// node_modules/lodash-es/_createToPairs.js
var mapTag7 = "[object Map]";
var setTag7 = "[object Set]";
function createToPairs(keysFunc) {
  return function(object) {
    var tag = getTag_default(object);
    if (tag == mapTag7) {
      return mapToArray_default(object);
    }
    if (tag == setTag7) {
      return setToPairs_default(object);
    }
    return baseToPairs_default(object, keysFunc(object));
  };
}
var createToPairs_default = createToPairs;

// node_modules/lodash-es/toPairs.js
var toPairs = createToPairs_default(keys_default);
var toPairs_default = toPairs;

// node_modules/lodash-es/toPairsIn.js
var toPairsIn = createToPairs_default(keysIn_default);
var toPairsIn_default = toPairsIn;

// node_modules/lodash-es/_escapeHtmlChar.js
var htmlEscapes = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
var escapeHtmlChar = basePropertyOf_default(htmlEscapes);
var escapeHtmlChar_default = escapeHtmlChar;

// node_modules/lodash-es/escape.js
var reUnescapedHtml = /[&<>"']/g;
var reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
function escape(string) {
  string = toString_default(string);
  return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar_default) : string;
}
var escape_default = escape;

// node_modules/lodash-es/escapeRegExp.js
var reRegExpChar2 = /[\\^$.*+?()[\]{}|]/g;
var reHasRegExpChar = RegExp(reRegExpChar2.source);
function escapeRegExp(string) {
  string = toString_default(string);
  return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar2, "\\$&") : string;
}
var escapeRegExp_default = escapeRegExp;

// node_modules/lodash-es/_arrayEvery.js
function arrayEvery(array, predicate) {
  var index = -1, length = array == null ? 0 : array.length;
  while (++index < length) {
    if (!predicate(array[index], index, array)) {
      return false;
    }
  }
  return true;
}
var arrayEvery_default = arrayEvery;

// node_modules/lodash-es/_baseEvery.js
function baseEvery(collection, predicate) {
  var result2 = true;
  baseEach_default(collection, function(value, index, collection2) {
    result2 = !!predicate(value, index, collection2);
    return result2;
  });
  return result2;
}
var baseEvery_default = baseEvery;

// node_modules/lodash-es/every.js
function every(collection, predicate, guard) {
  var func = isArray_default(collection) ? arrayEvery_default : baseEvery_default;
  if (guard && isIterateeCall_default(collection, predicate, guard)) {
    predicate = void 0;
  }
  return func(collection, baseIteratee_default(predicate, 3));
}
var every_default = every;

// node_modules/lodash-es/toLength.js
var MAX_ARRAY_LENGTH2 = 4294967295;
function toLength(value) {
  return value ? baseClamp_default(toInteger_default(value), 0, MAX_ARRAY_LENGTH2) : 0;
}
var toLength_default = toLength;

// node_modules/lodash-es/_baseFill.js
function baseFill(array, value, start, end) {
  var length = array.length;
  start = toInteger_default(start);
  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }
  end = end === void 0 || end > length ? length : toInteger_default(end);
  if (end < 0) {
    end += length;
  }
  end = start > end ? 0 : toLength_default(end);
  while (start < end) {
    array[start++] = value;
  }
  return array;
}
var baseFill_default = baseFill;

// node_modules/lodash-es/fill.js
function fill(array, value, start, end) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  if (start && typeof start != "number" && isIterateeCall_default(array, value, start)) {
    start = 0;
    end = length;
  }
  return baseFill_default(array, value, start, end);
}
var fill_default = fill;

// node_modules/lodash-es/_baseFilter.js
function baseFilter(collection, predicate) {
  var result2 = [];
  baseEach_default(collection, function(value, index, collection2) {
    if (predicate(value, index, collection2)) {
      result2.push(value);
    }
  });
  return result2;
}
var baseFilter_default = baseFilter;

// node_modules/lodash-es/filter.js
function filter(collection, predicate) {
  var func = isArray_default(collection) ? arrayFilter_default : baseFilter_default;
  return func(collection, baseIteratee_default(predicate, 3));
}
var filter_default = filter;

// node_modules/lodash-es/_createFind.js
function createFind(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike_default(collection)) {
      var iteratee2 = baseIteratee_default(predicate, 3);
      collection = keys_default(collection);
      predicate = function(key) {
        return iteratee2(iterable[key], key, iterable);
      };
    }
    var index = findIndexFunc(collection, predicate, fromIndex);
    return index > -1 ? iterable[iteratee2 ? collection[index] : index] : void 0;
  };
}
var createFind_default = createFind;

// node_modules/lodash-es/findIndex.js
var nativeMax7 = Math.max;
function findIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : toInteger_default(fromIndex);
  if (index < 0) {
    index = nativeMax7(length + index, 0);
  }
  return baseFindIndex_default(array, baseIteratee_default(predicate, 3), index);
}
var findIndex_default = findIndex;

// node_modules/lodash-es/find.js
var find = createFind_default(findIndex_default);
var find_default = find;

// node_modules/lodash-es/_baseFindKey.js
function baseFindKey(collection, predicate, eachFunc) {
  var result2;
  eachFunc(collection, function(value, key, collection2) {
    if (predicate(value, key, collection2)) {
      result2 = key;
      return false;
    }
  });
  return result2;
}
var baseFindKey_default = baseFindKey;

// node_modules/lodash-es/findKey.js
function findKey(object, predicate) {
  return baseFindKey_default(object, baseIteratee_default(predicate, 3), baseForOwn_default);
}
var findKey_default = findKey;

// node_modules/lodash-es/findLastIndex.js
var nativeMax8 = Math.max;
var nativeMin5 = Math.min;
function findLastIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = length - 1;
  if (fromIndex !== void 0) {
    index = toInteger_default(fromIndex);
    index = fromIndex < 0 ? nativeMax8(length + index, 0) : nativeMin5(index, length - 1);
  }
  return baseFindIndex_default(array, baseIteratee_default(predicate, 3), index, true);
}
var findLastIndex_default = findLastIndex;

// node_modules/lodash-es/findLast.js
var findLast = createFind_default(findLastIndex_default);
var findLast_default = findLast;

// node_modules/lodash-es/findLastKey.js
function findLastKey(object, predicate) {
  return baseFindKey_default(object, baseIteratee_default(predicate, 3), baseForOwnRight_default);
}
var findLastKey_default = findLastKey;

// node_modules/lodash-es/head.js
function head(array) {
  return array && array.length ? array[0] : void 0;
}
var head_default = head;

// node_modules/lodash-es/_baseMap.js
function baseMap(collection, iteratee2) {
  var index = -1, result2 = isArrayLike_default(collection) ? Array(collection.length) : [];
  baseEach_default(collection, function(value, key, collection2) {
    result2[++index] = iteratee2(value, key, collection2);
  });
  return result2;
}
var baseMap_default = baseMap;

// node_modules/lodash-es/map.js
function map(collection, iteratee2) {
  var func = isArray_default(collection) ? arrayMap_default : baseMap_default;
  return func(collection, baseIteratee_default(iteratee2, 3));
}
var map_default = map;

// node_modules/lodash-es/flatMap.js
function flatMap(collection, iteratee2) {
  return baseFlatten_default(map_default(collection, iteratee2), 1);
}
var flatMap_default = flatMap;

// node_modules/lodash-es/flatMapDeep.js
var INFINITY4 = 1 / 0;
function flatMapDeep(collection, iteratee2) {
  return baseFlatten_default(map_default(collection, iteratee2), INFINITY4);
}
var flatMapDeep_default = flatMapDeep;

// node_modules/lodash-es/flatMapDepth.js
function flatMapDepth(collection, iteratee2, depth) {
  depth = depth === void 0 ? 1 : toInteger_default(depth);
  return baseFlatten_default(map_default(collection, iteratee2), depth);
}
var flatMapDepth_default = flatMapDepth;

// node_modules/lodash-es/flattenDeep.js
var INFINITY5 = 1 / 0;
function flattenDeep(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten_default(array, INFINITY5) : [];
}
var flattenDeep_default = flattenDeep;

// node_modules/lodash-es/flattenDepth.js
function flattenDepth(array, depth) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  depth = depth === void 0 ? 1 : toInteger_default(depth);
  return baseFlatten_default(array, depth);
}
var flattenDepth_default = flattenDepth;

// node_modules/lodash-es/flip.js
var WRAP_FLIP_FLAG3 = 512;
function flip(func) {
  return createWrap_default(func, WRAP_FLIP_FLAG3);
}
var flip_default = flip;

// node_modules/lodash-es/floor.js
var floor = createRound_default("floor");
var floor_default = floor;

// node_modules/lodash-es/_createFlow.js
var FUNC_ERROR_TEXT8 = "Expected a function";
var WRAP_CURRY_FLAG7 = 8;
var WRAP_PARTIAL_FLAG6 = 32;
var WRAP_ARY_FLAG5 = 128;
var WRAP_REARG_FLAG3 = 256;
function createFlow(fromRight) {
  return flatRest_default(function(funcs) {
    var length = funcs.length, index = length, prereq = LodashWrapper_default.prototype.thru;
    if (fromRight) {
      funcs.reverse();
    }
    while (index--) {
      var func = funcs[index];
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT8);
      }
      if (prereq && !wrapper && getFuncName_default(func) == "wrapper") {
        var wrapper = new LodashWrapper_default([], true);
      }
    }
    index = wrapper ? index : length;
    while (++index < length) {
      func = funcs[index];
      var funcName = getFuncName_default(func), data = funcName == "wrapper" ? getData_default(func) : void 0;
      if (data && isLaziable_default(data[0]) && data[1] == (WRAP_ARY_FLAG5 | WRAP_CURRY_FLAG7 | WRAP_PARTIAL_FLAG6 | WRAP_REARG_FLAG3) && !data[4].length && data[9] == 1) {
        wrapper = wrapper[getFuncName_default(data[0])].apply(wrapper, data[3]);
      } else {
        wrapper = func.length == 1 && isLaziable_default(func) ? wrapper[funcName]() : wrapper.thru(func);
      }
    }
    return function() {
      var args = arguments, value = args[0];
      if (wrapper && args.length == 1 && isArray_default(value)) {
        return wrapper.plant(value).value();
      }
      var index2 = 0, result2 = length ? funcs[index2].apply(this, args) : value;
      while (++index2 < length) {
        result2 = funcs[index2].call(this, result2);
      }
      return result2;
    };
  });
}
var createFlow_default = createFlow;

// node_modules/lodash-es/flow.js
var flow = createFlow_default();
var flow_default = flow;

// node_modules/lodash-es/flowRight.js
var flowRight = createFlow_default(true);
var flowRight_default = flowRight;

// node_modules/lodash-es/forIn.js
function forIn(object, iteratee2) {
  return object == null ? object : baseFor_default(object, castFunction_default(iteratee2), keysIn_default);
}
var forIn_default = forIn;

// node_modules/lodash-es/forInRight.js
function forInRight(object, iteratee2) {
  return object == null ? object : baseForRight_default(object, castFunction_default(iteratee2), keysIn_default);
}
var forInRight_default = forInRight;

// node_modules/lodash-es/forOwn.js
function forOwn(object, iteratee2) {
  return object && baseForOwn_default(object, castFunction_default(iteratee2));
}
var forOwn_default = forOwn;

// node_modules/lodash-es/forOwnRight.js
function forOwnRight(object, iteratee2) {
  return object && baseForOwnRight_default(object, castFunction_default(iteratee2));
}
var forOwnRight_default = forOwnRight;

// node_modules/lodash-es/fromPairs.js
function fromPairs(pairs) {
  var index = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
  while (++index < length) {
    var pair = pairs[index];
    result2[pair[0]] = pair[1];
  }
  return result2;
}
var fromPairs_default = fromPairs;

// node_modules/lodash-es/_baseFunctions.js
function baseFunctions(object, props) {
  return arrayFilter_default(props, function(key) {
    return isFunction_default(object[key]);
  });
}
var baseFunctions_default = baseFunctions;

// node_modules/lodash-es/functions.js
function functions(object) {
  return object == null ? [] : baseFunctions_default(object, keys_default(object));
}
var functions_default = functions;

// node_modules/lodash-es/functionsIn.js
function functionsIn(object) {
  return object == null ? [] : baseFunctions_default(object, keysIn_default(object));
}
var functionsIn_default = functionsIn;

// node_modules/lodash-es/groupBy.js
var objectProto22 = Object.prototype;
var hasOwnProperty19 = objectProto22.hasOwnProperty;
var groupBy = createAggregator_default(function(result2, value, key) {
  if (hasOwnProperty19.call(result2, key)) {
    result2[key].push(value);
  } else {
    baseAssignValue_default(result2, key, [value]);
  }
});
var groupBy_default = groupBy;

// node_modules/lodash-es/_baseGt.js
function baseGt(value, other) {
  return value > other;
}
var baseGt_default = baseGt;

// node_modules/lodash-es/_createRelationalOperation.js
function createRelationalOperation(operator) {
  return function(value, other) {
    if (!(typeof value == "string" && typeof other == "string")) {
      value = toNumber_default(value);
      other = toNumber_default(other);
    }
    return operator(value, other);
  };
}
var createRelationalOperation_default = createRelationalOperation;

// node_modules/lodash-es/gt.js
var gt = createRelationalOperation_default(baseGt_default);
var gt_default = gt;

// node_modules/lodash-es/gte.js
var gte = createRelationalOperation_default(function(value, other) {
  return value >= other;
});
var gte_default = gte;

// node_modules/lodash-es/_baseHas.js
var objectProto23 = Object.prototype;
var hasOwnProperty20 = objectProto23.hasOwnProperty;
function baseHas(object, key) {
  return object != null && hasOwnProperty20.call(object, key);
}
var baseHas_default = baseHas;

// node_modules/lodash-es/has.js
function has(object, path) {
  return object != null && hasPath_default(object, path, baseHas_default);
}
var has_default = has;

// node_modules/lodash-es/_baseInRange.js
var nativeMax9 = Math.max;
var nativeMin6 = Math.min;
function baseInRange(number, start, end) {
  return number >= nativeMin6(start, end) && number < nativeMax9(start, end);
}
var baseInRange_default = baseInRange;

// node_modules/lodash-es/inRange.js
function inRange(number, start, end) {
  start = toFinite_default(start);
  if (end === void 0) {
    end = start;
    start = 0;
  } else {
    end = toFinite_default(end);
  }
  number = toNumber_default(number);
  return baseInRange_default(number, start, end);
}
var inRange_default = inRange;

// node_modules/lodash-es/isString.js
var stringTag5 = "[object String]";
function isString(value) {
  return typeof value == "string" || !isArray_default(value) && isObjectLike_default(value) && baseGetTag_default(value) == stringTag5;
}
var isString_default = isString;

// node_modules/lodash-es/_baseValues.js
function baseValues(object, props) {
  return arrayMap_default(props, function(key) {
    return object[key];
  });
}
var baseValues_default = baseValues;

// node_modules/lodash-es/values.js
function values(object) {
  return object == null ? [] : baseValues_default(object, keys_default(object));
}
var values_default = values;

// node_modules/lodash-es/includes.js
var nativeMax10 = Math.max;
function includes(collection, value, fromIndex, guard) {
  collection = isArrayLike_default(collection) ? collection : values_default(collection);
  fromIndex = fromIndex && !guard ? toInteger_default(fromIndex) : 0;
  var length = collection.length;
  if (fromIndex < 0) {
    fromIndex = nativeMax10(length + fromIndex, 0);
  }
  return isString_default(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf_default(collection, value, fromIndex) > -1;
}
var includes_default = includes;

// node_modules/lodash-es/indexOf.js
var nativeMax11 = Math.max;
function indexOf(array, value, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : toInteger_default(fromIndex);
  if (index < 0) {
    index = nativeMax11(length + index, 0);
  }
  return baseIndexOf_default(array, value, index);
}
var indexOf_default = indexOf;

// node_modules/lodash-es/initial.js
function initial(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseSlice_default(array, 0, -1) : [];
}
var initial_default = initial;

// node_modules/lodash-es/_baseIntersection.js
var nativeMin7 = Math.min;
function baseIntersection(arrays, iteratee2, comparator) {
  var includes2 = comparator ? arrayIncludesWith_default : arrayIncludes_default, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array(othLength), maxLength = Infinity, result2 = [];
  while (othIndex--) {
    var array = arrays[othIndex];
    if (othIndex && iteratee2) {
      array = arrayMap_default(array, baseUnary_default(iteratee2));
    }
    maxLength = nativeMin7(array.length, maxLength);
    caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache_default(othIndex && array) : void 0;
  }
  array = arrays[0];
  var index = -1, seen = caches[0];
  outer:
    while (++index < length && result2.length < maxLength) {
      var value = array[index], computed2 = iteratee2 ? iteratee2(value) : value;
      value = comparator || value !== 0 ? value : 0;
      if (!(seen ? cacheHas_default(seen, computed2) : includes2(result2, computed2, comparator))) {
        othIndex = othLength;
        while (--othIndex) {
          var cache = caches[othIndex];
          if (!(cache ? cacheHas_default(cache, computed2) : includes2(arrays[othIndex], computed2, comparator))) {
            continue outer;
          }
        }
        if (seen) {
          seen.push(computed2);
        }
        result2.push(value);
      }
    }
  return result2;
}
var baseIntersection_default = baseIntersection;

// node_modules/lodash-es/_castArrayLikeObject.js
function castArrayLikeObject(value) {
  return isArrayLikeObject_default(value) ? value : [];
}
var castArrayLikeObject_default = castArrayLikeObject;

// node_modules/lodash-es/intersection.js
var intersection = baseRest_default(function(arrays) {
  var mapped = arrayMap_default(arrays, castArrayLikeObject_default);
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection_default(mapped) : [];
});
var intersection_default = intersection;

// node_modules/lodash-es/intersectionBy.js
var intersectionBy = baseRest_default(function(arrays) {
  var iteratee2 = last_default(arrays), mapped = arrayMap_default(arrays, castArrayLikeObject_default);
  if (iteratee2 === last_default(mapped)) {
    iteratee2 = void 0;
  } else {
    mapped.pop();
  }
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection_default(mapped, baseIteratee_default(iteratee2, 2)) : [];
});
var intersectionBy_default = intersectionBy;

// node_modules/lodash-es/intersectionWith.js
var intersectionWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays), mapped = arrayMap_default(arrays, castArrayLikeObject_default);
  comparator = typeof comparator == "function" ? comparator : void 0;
  if (comparator) {
    mapped.pop();
  }
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection_default(mapped, void 0, comparator) : [];
});
var intersectionWith_default = intersectionWith;

// node_modules/lodash-es/_baseInverter.js
function baseInverter(object, setter, iteratee2, accumulator) {
  baseForOwn_default(object, function(value, key, object2) {
    setter(accumulator, iteratee2(value), key, object2);
  });
  return accumulator;
}
var baseInverter_default = baseInverter;

// node_modules/lodash-es/_createInverter.js
function createInverter(setter, toIteratee) {
  return function(object, iteratee2) {
    return baseInverter_default(object, setter, toIteratee(iteratee2), {});
  };
}
var createInverter_default = createInverter;

// node_modules/lodash-es/invert.js
var objectProto24 = Object.prototype;
var nativeObjectToString3 = objectProto24.toString;
var invert = createInverter_default(function(result2, value, key) {
  if (value != null && typeof value.toString != "function") {
    value = nativeObjectToString3.call(value);
  }
  result2[value] = key;
}, constant_default(identity_default));
var invert_default = invert;

// node_modules/lodash-es/invertBy.js
var objectProto25 = Object.prototype;
var hasOwnProperty21 = objectProto25.hasOwnProperty;
var nativeObjectToString4 = objectProto25.toString;
var invertBy = createInverter_default(function(result2, value, key) {
  if (value != null && typeof value.toString != "function") {
    value = nativeObjectToString4.call(value);
  }
  if (hasOwnProperty21.call(result2, value)) {
    result2[value].push(key);
  } else {
    result2[value] = [key];
  }
}, baseIteratee_default);
var invertBy_default = invertBy;

// node_modules/lodash-es/_parent.js
function parent(object, path) {
  return path.length < 2 ? object : baseGet_default(object, baseSlice_default(path, 0, -1));
}
var parent_default = parent;

// node_modules/lodash-es/_baseInvoke.js
function baseInvoke(object, path, args) {
  path = castPath_default(path, object);
  object = parent_default(object, path);
  var func = object == null ? object : object[toKey_default(last_default(path))];
  return func == null ? void 0 : apply_default(func, object, args);
}
var baseInvoke_default = baseInvoke;

// node_modules/lodash-es/invoke.js
var invoke = baseRest_default(baseInvoke_default);
var invoke_default = invoke;

// node_modules/lodash-es/invokeMap.js
var invokeMap = baseRest_default(function(collection, path, args) {
  var index = -1, isFunc = typeof path == "function", result2 = isArrayLike_default(collection) ? Array(collection.length) : [];
  baseEach_default(collection, function(value) {
    result2[++index] = isFunc ? apply_default(path, value, args) : baseInvoke_default(value, path, args);
  });
  return result2;
});
var invokeMap_default = invokeMap;

// node_modules/lodash-es/_baseIsArrayBuffer.js
var arrayBufferTag5 = "[object ArrayBuffer]";
function baseIsArrayBuffer(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == arrayBufferTag5;
}
var baseIsArrayBuffer_default = baseIsArrayBuffer;

// node_modules/lodash-es/isArrayBuffer.js
var nodeIsArrayBuffer = nodeUtil_default && nodeUtil_default.isArrayBuffer;
var isArrayBuffer = nodeIsArrayBuffer ? baseUnary_default(nodeIsArrayBuffer) : baseIsArrayBuffer_default;
var isArrayBuffer_default = isArrayBuffer;

// node_modules/lodash-es/isBoolean.js
var boolTag5 = "[object Boolean]";
function isBoolean(value) {
  return value === true || value === false || isObjectLike_default(value) && baseGetTag_default(value) == boolTag5;
}
var isBoolean_default = isBoolean;

// node_modules/lodash-es/_baseIsDate.js
var dateTag5 = "[object Date]";
function baseIsDate(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == dateTag5;
}
var baseIsDate_default = baseIsDate;

// node_modules/lodash-es/isDate.js
var nodeIsDate = nodeUtil_default && nodeUtil_default.isDate;
var isDate = nodeIsDate ? baseUnary_default(nodeIsDate) : baseIsDate_default;
var isDate_default = isDate;

// node_modules/lodash-es/isElement.js
function isElement(value) {
  return isObjectLike_default(value) && value.nodeType === 1 && !isPlainObject_default(value);
}
var isElement_default = isElement;

// node_modules/lodash-es/isEmpty.js
var mapTag8 = "[object Map]";
var setTag8 = "[object Set]";
var objectProto26 = Object.prototype;
var hasOwnProperty22 = objectProto26.hasOwnProperty;
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (isArrayLike_default(value) && (isArray_default(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer_default(value) || isTypedArray_default(value) || isArguments_default(value))) {
    return !value.length;
  }
  var tag = getTag_default(value);
  if (tag == mapTag8 || tag == setTag8) {
    return !value.size;
  }
  if (isPrototype_default(value)) {
    return !baseKeys_default(value).length;
  }
  for (var key in value) {
    if (hasOwnProperty22.call(value, key)) {
      return false;
    }
  }
  return true;
}
var isEmpty_default = isEmpty;

// node_modules/lodash-es/isEqual.js
function isEqual(value, other) {
  return baseIsEqual_default(value, other);
}
var isEqual_default = isEqual;

// node_modules/lodash-es/isEqualWith.js
function isEqualWith(value, other, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  var result2 = customizer ? customizer(value, other) : void 0;
  return result2 === void 0 ? baseIsEqual_default(value, other, void 0, customizer) : !!result2;
}
var isEqualWith_default = isEqualWith;

// node_modules/lodash-es/isFinite.js
var nativeIsFinite2 = root_default.isFinite;
function isFinite2(value) {
  return typeof value == "number" && nativeIsFinite2(value);
}
var isFinite_default = isFinite2;

// node_modules/lodash-es/isInteger.js
function isInteger(value) {
  return typeof value == "number" && value == toInteger_default(value);
}
var isInteger_default = isInteger;

// node_modules/lodash-es/isMatch.js
function isMatch(object, source) {
  return object === source || baseIsMatch_default(object, source, getMatchData_default(source));
}
var isMatch_default = isMatch;

// node_modules/lodash-es/isMatchWith.js
function isMatchWith(object, source, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseIsMatch_default(object, source, getMatchData_default(source), customizer);
}
var isMatchWith_default = isMatchWith;

// node_modules/lodash-es/isNumber.js
var numberTag5 = "[object Number]";
function isNumber(value) {
  return typeof value == "number" || isObjectLike_default(value) && baseGetTag_default(value) == numberTag5;
}
var isNumber_default = isNumber;

// node_modules/lodash-es/isNaN.js
function isNaN2(value) {
  return isNumber_default(value) && value != +value;
}
var isNaN_default = isNaN2;

// node_modules/lodash-es/_isMaskable.js
var isMaskable = coreJsData_default ? isFunction_default : stubFalse_default;
var isMaskable_default = isMaskable;

// node_modules/lodash-es/isNative.js
var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.";
function isNative(value) {
  if (isMaskable_default(value)) {
    throw new Error(CORE_ERROR_TEXT);
  }
  return baseIsNative_default(value);
}
var isNative_default = isNative;

// node_modules/lodash-es/isNil.js
function isNil(value) {
  return value == null;
}
var isNil_default = isNil;

// node_modules/lodash-es/isNull.js
function isNull(value) {
  return value === null;
}
var isNull_default = isNull;

// node_modules/lodash-es/_baseIsRegExp.js
var regexpTag5 = "[object RegExp]";
function baseIsRegExp(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == regexpTag5;
}
var baseIsRegExp_default = baseIsRegExp;

// node_modules/lodash-es/isRegExp.js
var nodeIsRegExp = nodeUtil_default && nodeUtil_default.isRegExp;
var isRegExp = nodeIsRegExp ? baseUnary_default(nodeIsRegExp) : baseIsRegExp_default;
var isRegExp_default = isRegExp;

// node_modules/lodash-es/isSafeInteger.js
var MAX_SAFE_INTEGER3 = 9007199254740991;
function isSafeInteger(value) {
  return isInteger_default(value) && value >= -MAX_SAFE_INTEGER3 && value <= MAX_SAFE_INTEGER3;
}
var isSafeInteger_default = isSafeInteger;

// node_modules/lodash-es/isUndefined.js
function isUndefined(value) {
  return value === void 0;
}
var isUndefined_default = isUndefined;

// node_modules/lodash-es/isWeakMap.js
var weakMapTag4 = "[object WeakMap]";
function isWeakMap(value) {
  return isObjectLike_default(value) && getTag_default(value) == weakMapTag4;
}
var isWeakMap_default = isWeakMap;

// node_modules/lodash-es/isWeakSet.js
var weakSetTag = "[object WeakSet]";
function isWeakSet(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == weakSetTag;
}
var isWeakSet_default = isWeakSet;

// node_modules/lodash-es/iteratee.js
var CLONE_DEEP_FLAG5 = 1;
function iteratee(func) {
  return baseIteratee_default(typeof func == "function" ? func : baseClone_default(func, CLONE_DEEP_FLAG5));
}
var iteratee_default = iteratee;

// node_modules/lodash-es/join.js
var arrayProto2 = Array.prototype;
var nativeJoin = arrayProto2.join;
function join(array, separator) {
  return array == null ? "" : nativeJoin.call(array, separator);
}
var join_default = join;

// node_modules/lodash-es/kebabCase.js
var kebabCase = createCompounder_default(function(result2, word, index) {
  return result2 + (index ? "-" : "") + word.toLowerCase();
});
var kebabCase_default = kebabCase;

// node_modules/lodash-es/keyBy.js
var keyBy = createAggregator_default(function(result2, value, key) {
  baseAssignValue_default(result2, key, value);
});
var keyBy_default = keyBy;

// node_modules/lodash-es/_strictLastIndexOf.js
function strictLastIndexOf(array, value, fromIndex) {
  var index = fromIndex + 1;
  while (index--) {
    if (array[index] === value) {
      return index;
    }
  }
  return index;
}
var strictLastIndexOf_default = strictLastIndexOf;

// node_modules/lodash-es/lastIndexOf.js
var nativeMax12 = Math.max;
var nativeMin8 = Math.min;
function lastIndexOf(array, value, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = length;
  if (fromIndex !== void 0) {
    index = toInteger_default(fromIndex);
    index = index < 0 ? nativeMax12(length + index, 0) : nativeMin8(index, length - 1);
  }
  return value === value ? strictLastIndexOf_default(array, value, index) : baseFindIndex_default(array, baseIsNaN_default, index, true);
}
var lastIndexOf_default = lastIndexOf;

// node_modules/lodash-es/lowerCase.js
var lowerCase = createCompounder_default(function(result2, word, index) {
  return result2 + (index ? " " : "") + word.toLowerCase();
});
var lowerCase_default = lowerCase;

// node_modules/lodash-es/lowerFirst.js
var lowerFirst = createCaseFirst_default("toLowerCase");
var lowerFirst_default = lowerFirst;

// node_modules/lodash-es/_baseLt.js
function baseLt(value, other) {
  return value < other;
}
var baseLt_default = baseLt;

// node_modules/lodash-es/lt.js
var lt = createRelationalOperation_default(baseLt_default);
var lt_default = lt;

// node_modules/lodash-es/lte.js
var lte = createRelationalOperation_default(function(value, other) {
  return value <= other;
});
var lte_default = lte;

// node_modules/lodash-es/mapKeys.js
function mapKeys(object, iteratee2) {
  var result2 = {};
  iteratee2 = baseIteratee_default(iteratee2, 3);
  baseForOwn_default(object, function(value, key, object2) {
    baseAssignValue_default(result2, iteratee2(value, key, object2), value);
  });
  return result2;
}
var mapKeys_default = mapKeys;

// node_modules/lodash-es/mapValues.js
function mapValues(object, iteratee2) {
  var result2 = {};
  iteratee2 = baseIteratee_default(iteratee2, 3);
  baseForOwn_default(object, function(value, key, object2) {
    baseAssignValue_default(result2, key, iteratee2(value, key, object2));
  });
  return result2;
}
var mapValues_default = mapValues;

// node_modules/lodash-es/matches.js
var CLONE_DEEP_FLAG6 = 1;
function matches(source) {
  return baseMatches_default(baseClone_default(source, CLONE_DEEP_FLAG6));
}
var matches_default = matches;

// node_modules/lodash-es/matchesProperty.js
var CLONE_DEEP_FLAG7 = 1;
function matchesProperty(path, srcValue) {
  return baseMatchesProperty_default(path, baseClone_default(srcValue, CLONE_DEEP_FLAG7));
}
var matchesProperty_default = matchesProperty;

// node_modules/lodash-es/_baseExtremum.js
function baseExtremum(array, iteratee2, comparator) {
  var index = -1, length = array.length;
  while (++index < length) {
    var value = array[index], current = iteratee2(value);
    if (current != null && (computed2 === void 0 ? current === current && !isSymbol_default(current) : comparator(current, computed2))) {
      var computed2 = current, result2 = value;
    }
  }
  return result2;
}
var baseExtremum_default = baseExtremum;

// node_modules/lodash-es/max.js
function max(array) {
  return array && array.length ? baseExtremum_default(array, identity_default, baseGt_default) : void 0;
}
var max_default = max;

// node_modules/lodash-es/maxBy.js
function maxBy(array, iteratee2) {
  return array && array.length ? baseExtremum_default(array, baseIteratee_default(iteratee2, 2), baseGt_default) : void 0;
}
var maxBy_default = maxBy;

// node_modules/lodash-es/_baseSum.js
function baseSum(array, iteratee2) {
  var result2, index = -1, length = array.length;
  while (++index < length) {
    var current = iteratee2(array[index]);
    if (current !== void 0) {
      result2 = result2 === void 0 ? current : result2 + current;
    }
  }
  return result2;
}
var baseSum_default = baseSum;

// node_modules/lodash-es/_baseMean.js
var NAN3 = 0 / 0;
function baseMean(array, iteratee2) {
  var length = array == null ? 0 : array.length;
  return length ? baseSum_default(array, iteratee2) / length : NAN3;
}
var baseMean_default = baseMean;

// node_modules/lodash-es/mean.js
function mean(array) {
  return baseMean_default(array, identity_default);
}
var mean_default = mean;

// node_modules/lodash-es/meanBy.js
function meanBy(array, iteratee2) {
  return baseMean_default(array, baseIteratee_default(iteratee2, 2));
}
var meanBy_default = meanBy;

// node_modules/lodash-es/merge.js
var merge = createAssigner_default(function(object, source, srcIndex) {
  baseMerge_default(object, source, srcIndex);
});
var merge_default = merge;

// node_modules/lodash-es/method.js
var method = baseRest_default(function(path, args) {
  return function(object) {
    return baseInvoke_default(object, path, args);
  };
});
var method_default = method;

// node_modules/lodash-es/methodOf.js
var methodOf = baseRest_default(function(object, args) {
  return function(path) {
    return baseInvoke_default(object, path, args);
  };
});
var methodOf_default = methodOf;

// node_modules/lodash-es/min.js
function min(array) {
  return array && array.length ? baseExtremum_default(array, identity_default, baseLt_default) : void 0;
}
var min_default = min;

// node_modules/lodash-es/minBy.js
function minBy(array, iteratee2) {
  return array && array.length ? baseExtremum_default(array, baseIteratee_default(iteratee2, 2), baseLt_default) : void 0;
}
var minBy_default = minBy;

// node_modules/lodash-es/mixin.js
function mixin(object, source, options) {
  var props = keys_default(source), methodNames = baseFunctions_default(source, props);
  var chain2 = !(isObject_default(options) && "chain" in options) || !!options.chain, isFunc = isFunction_default(object);
  arrayEach_default(methodNames, function(methodName) {
    var func = source[methodName];
    object[methodName] = func;
    if (isFunc) {
      object.prototype[methodName] = function() {
        var chainAll = this.__chain__;
        if (chain2 || chainAll) {
          var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray_default(this.__actions__);
          actions.push({ "func": func, "args": arguments, "thisArg": object });
          result2.__chain__ = chainAll;
          return result2;
        }
        return func.apply(object, arrayPush_default([this.value()], arguments));
      };
    }
  });
  return object;
}
var mixin_default = mixin;

// node_modules/lodash-es/multiply.js
var multiply = createMathOperation_default(function(multiplier, multiplicand) {
  return multiplier * multiplicand;
}, 1);
var multiply_default = multiply;

// node_modules/lodash-es/negate.js
var FUNC_ERROR_TEXT9 = "Expected a function";
function negate(predicate) {
  if (typeof predicate != "function") {
    throw new TypeError(FUNC_ERROR_TEXT9);
  }
  return function() {
    var args = arguments;
    switch (args.length) {
      case 0:
        return !predicate.call(this);
      case 1:
        return !predicate.call(this, args[0]);
      case 2:
        return !predicate.call(this, args[0], args[1]);
      case 3:
        return !predicate.call(this, args[0], args[1], args[2]);
    }
    return !predicate.apply(this, args);
  };
}
var negate_default = negate;

// node_modules/lodash-es/_iteratorToArray.js
function iteratorToArray(iterator) {
  var data, result2 = [];
  while (!(data = iterator.next()).done) {
    result2.push(data.value);
  }
  return result2;
}
var iteratorToArray_default = iteratorToArray;

// node_modules/lodash-es/toArray.js
var mapTag9 = "[object Map]";
var setTag9 = "[object Set]";
var symIterator = Symbol_default ? Symbol_default.iterator : void 0;
function toArray(value) {
  if (!value) {
    return [];
  }
  if (isArrayLike_default(value)) {
    return isString_default(value) ? stringToArray_default(value) : copyArray_default(value);
  }
  if (symIterator && value[symIterator]) {
    return iteratorToArray_default(value[symIterator]());
  }
  var tag = getTag_default(value), func = tag == mapTag9 ? mapToArray_default : tag == setTag9 ? setToArray_default : values_default;
  return func(value);
}
var toArray_default = toArray;

// node_modules/lodash-es/next.js
function wrapperNext() {
  if (this.__values__ === void 0) {
    this.__values__ = toArray_default(this.value());
  }
  var done = this.__index__ >= this.__values__.length, value = done ? void 0 : this.__values__[this.__index__++];
  return { "done": done, "value": value };
}
var next_default = wrapperNext;

// node_modules/lodash-es/_baseNth.js
function baseNth(array, n) {
  var length = array.length;
  if (!length) {
    return;
  }
  n += n < 0 ? length : 0;
  return isIndex_default(n, length) ? array[n] : void 0;
}
var baseNth_default = baseNth;

// node_modules/lodash-es/nth.js
function nth(array, n) {
  return array && array.length ? baseNth_default(array, toInteger_default(n)) : void 0;
}
var nth_default = nth;

// node_modules/lodash-es/nthArg.js
function nthArg(n) {
  n = toInteger_default(n);
  return baseRest_default(function(args) {
    return baseNth_default(args, n);
  });
}
var nthArg_default = nthArg;

// node_modules/lodash-es/_baseUnset.js
function baseUnset(object, path) {
  path = castPath_default(path, object);
  object = parent_default(object, path);
  return object == null || delete object[toKey_default(last_default(path))];
}
var baseUnset_default = baseUnset;

// node_modules/lodash-es/_customOmitClone.js
function customOmitClone(value) {
  return isPlainObject_default(value) ? void 0 : value;
}
var customOmitClone_default = customOmitClone;

// node_modules/lodash-es/omit.js
var CLONE_DEEP_FLAG8 = 1;
var CLONE_FLAT_FLAG2 = 2;
var CLONE_SYMBOLS_FLAG6 = 4;
var omit = flatRest_default(function(object, paths) {
  var result2 = {};
  if (object == null) {
    return result2;
  }
  var isDeep = false;
  paths = arrayMap_default(paths, function(path) {
    path = castPath_default(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject_default(object, getAllKeysIn_default(object), result2);
  if (isDeep) {
    result2 = baseClone_default(result2, CLONE_DEEP_FLAG8 | CLONE_FLAT_FLAG2 | CLONE_SYMBOLS_FLAG6, customOmitClone_default);
  }
  var length = paths.length;
  while (length--) {
    baseUnset_default(result2, paths[length]);
  }
  return result2;
});
var omit_default = omit;

// node_modules/lodash-es/_baseSet.js
function baseSet(object, path, value, customizer) {
  if (!isObject_default(object)) {
    return object;
  }
  path = castPath_default(path, object);
  var index = -1, length = path.length, lastIndex = length - 1, nested = object;
  while (nested != null && ++index < length) {
    var key = toKey_default(path[index]), newValue = value;
    if (key === "__proto__" || key === "constructor" || key === "prototype") {
      return object;
    }
    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : void 0;
      if (newValue === void 0) {
        newValue = isObject_default(objValue) ? objValue : isIndex_default(path[index + 1]) ? [] : {};
      }
    }
    assignValue_default(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}
var baseSet_default = baseSet;

// node_modules/lodash-es/_basePickBy.js
function basePickBy(object, paths, predicate) {
  var index = -1, length = paths.length, result2 = {};
  while (++index < length) {
    var path = paths[index], value = baseGet_default(object, path);
    if (predicate(value, path)) {
      baseSet_default(result2, castPath_default(path, object), value);
    }
  }
  return result2;
}
var basePickBy_default = basePickBy;

// node_modules/lodash-es/pickBy.js
function pickBy(object, predicate) {
  if (object == null) {
    return {};
  }
  var props = arrayMap_default(getAllKeysIn_default(object), function(prop) {
    return [prop];
  });
  predicate = baseIteratee_default(predicate);
  return basePickBy_default(object, props, function(value, path) {
    return predicate(value, path[0]);
  });
}
var pickBy_default = pickBy;

// node_modules/lodash-es/omitBy.js
function omitBy(object, predicate) {
  return pickBy_default(object, negate_default(baseIteratee_default(predicate)));
}
var omitBy_default = omitBy;

// node_modules/lodash-es/once.js
function once(func) {
  return before_default(2, func);
}
var once_default = once;

// node_modules/lodash-es/_baseSortBy.js
function baseSortBy(array, comparer) {
  var length = array.length;
  array.sort(comparer);
  while (length--) {
    array[length] = array[length].value;
  }
  return array;
}
var baseSortBy_default = baseSortBy;

// node_modules/lodash-es/_compareAscending.js
function compareAscending(value, other) {
  if (value !== other) {
    var valIsDefined = value !== void 0, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol_default(value);
    var othIsDefined = other !== void 0, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol_default(other);
    if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
      return 1;
    }
    if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}
var compareAscending_default = compareAscending;

// node_modules/lodash-es/_compareMultiple.js
function compareMultiple(object, other, orders) {
  var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
  while (++index < length) {
    var result2 = compareAscending_default(objCriteria[index], othCriteria[index]);
    if (result2) {
      if (index >= ordersLength) {
        return result2;
      }
      var order = orders[index];
      return result2 * (order == "desc" ? -1 : 1);
    }
  }
  return object.index - other.index;
}
var compareMultiple_default = compareMultiple;

// node_modules/lodash-es/_baseOrderBy.js
function baseOrderBy(collection, iteratees, orders) {
  if (iteratees.length) {
    iteratees = arrayMap_default(iteratees, function(iteratee2) {
      if (isArray_default(iteratee2)) {
        return function(value) {
          return baseGet_default(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
        };
      }
      return iteratee2;
    });
  } else {
    iteratees = [identity_default];
  }
  var index = -1;
  iteratees = arrayMap_default(iteratees, baseUnary_default(baseIteratee_default));
  var result2 = baseMap_default(collection, function(value, key, collection2) {
    var criteria = arrayMap_default(iteratees, function(iteratee2) {
      return iteratee2(value);
    });
    return { "criteria": criteria, "index": ++index, "value": value };
  });
  return baseSortBy_default(result2, function(object, other) {
    return compareMultiple_default(object, other, orders);
  });
}
var baseOrderBy_default = baseOrderBy;

// node_modules/lodash-es/orderBy.js
function orderBy(collection, iteratees, orders, guard) {
  if (collection == null) {
    return [];
  }
  if (!isArray_default(iteratees)) {
    iteratees = iteratees == null ? [] : [iteratees];
  }
  orders = guard ? void 0 : orders;
  if (!isArray_default(orders)) {
    orders = orders == null ? [] : [orders];
  }
  return baseOrderBy_default(collection, iteratees, orders);
}
var orderBy_default = orderBy;

// node_modules/lodash-es/_createOver.js
function createOver(arrayFunc) {
  return flatRest_default(function(iteratees) {
    iteratees = arrayMap_default(iteratees, baseUnary_default(baseIteratee_default));
    return baseRest_default(function(args) {
      var thisArg = this;
      return arrayFunc(iteratees, function(iteratee2) {
        return apply_default(iteratee2, thisArg, args);
      });
    });
  });
}
var createOver_default = createOver;

// node_modules/lodash-es/over.js
var over = createOver_default(arrayMap_default);
var over_default = over;

// node_modules/lodash-es/_castRest.js
var castRest = baseRest_default;
var castRest_default = castRest;

// node_modules/lodash-es/overArgs.js
var nativeMin9 = Math.min;
var overArgs = castRest_default(function(func, transforms) {
  transforms = transforms.length == 1 && isArray_default(transforms[0]) ? arrayMap_default(transforms[0], baseUnary_default(baseIteratee_default)) : arrayMap_default(baseFlatten_default(transforms, 1), baseUnary_default(baseIteratee_default));
  var funcsLength = transforms.length;
  return baseRest_default(function(args) {
    var index = -1, length = nativeMin9(args.length, funcsLength);
    while (++index < length) {
      args[index] = transforms[index].call(this, args[index]);
    }
    return apply_default(func, this, args);
  });
});
var overArgs_default = overArgs;

// node_modules/lodash-es/overEvery.js
var overEvery = createOver_default(arrayEvery_default);
var overEvery_default = overEvery;

// node_modules/lodash-es/overSome.js
var overSome = createOver_default(arraySome_default);
var overSome_default = overSome;

// node_modules/lodash-es/_baseRepeat.js
var MAX_SAFE_INTEGER4 = 9007199254740991;
var nativeFloor = Math.floor;
function baseRepeat(string, n) {
  var result2 = "";
  if (!string || n < 1 || n > MAX_SAFE_INTEGER4) {
    return result2;
  }
  do {
    if (n % 2) {
      result2 += string;
    }
    n = nativeFloor(n / 2);
    if (n) {
      string += string;
    }
  } while (n);
  return result2;
}
var baseRepeat_default = baseRepeat;

// node_modules/lodash-es/_asciiSize.js
var asciiSize = baseProperty_default("length");
var asciiSize_default = asciiSize;

// node_modules/lodash-es/_unicodeSize.js
var rsAstralRange4 = "\\ud800-\\udfff";
var rsComboMarksRange5 = "\\u0300-\\u036f";
var reComboHalfMarksRange5 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange5 = "\\u20d0-\\u20ff";
var rsComboRange5 = rsComboMarksRange5 + reComboHalfMarksRange5 + rsComboSymbolsRange5;
var rsVarRange4 = "\\ufe0e\\ufe0f";
var rsAstral2 = "[" + rsAstralRange4 + "]";
var rsCombo4 = "[" + rsComboRange5 + "]";
var rsFitz3 = "\\ud83c[\\udffb-\\udfff]";
var rsModifier3 = "(?:" + rsCombo4 + "|" + rsFitz3 + ")";
var rsNonAstral3 = "[^" + rsAstralRange4 + "]";
var rsRegional3 = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair3 = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsZWJ4 = "\\u200d";
var reOptMod3 = rsModifier3 + "?";
var rsOptVar3 = "[" + rsVarRange4 + "]?";
var rsOptJoin3 = "(?:" + rsZWJ4 + "(?:" + [rsNonAstral3, rsRegional3, rsSurrPair3].join("|") + ")" + rsOptVar3 + reOptMod3 + ")*";
var rsSeq3 = rsOptVar3 + reOptMod3 + rsOptJoin3;
var rsSymbol2 = "(?:" + [rsNonAstral3 + rsCombo4 + "?", rsCombo4, rsRegional3, rsSurrPair3, rsAstral2].join("|") + ")";
var reUnicode2 = RegExp(rsFitz3 + "(?=" + rsFitz3 + ")|" + rsSymbol2 + rsSeq3, "g");
function unicodeSize(string) {
  var result2 = reUnicode2.lastIndex = 0;
  while (reUnicode2.test(string)) {
    ++result2;
  }
  return result2;
}
var unicodeSize_default = unicodeSize;

// node_modules/lodash-es/_stringSize.js
function stringSize(string) {
  return hasUnicode_default(string) ? unicodeSize_default(string) : asciiSize_default(string);
}
var stringSize_default = stringSize;

// node_modules/lodash-es/_createPadding.js
var nativeCeil2 = Math.ceil;
function createPadding(length, chars) {
  chars = chars === void 0 ? " " : baseToString_default(chars);
  var charsLength = chars.length;
  if (charsLength < 2) {
    return charsLength ? baseRepeat_default(chars, length) : chars;
  }
  var result2 = baseRepeat_default(chars, nativeCeil2(length / stringSize_default(chars)));
  return hasUnicode_default(chars) ? castSlice_default(stringToArray_default(result2), 0, length).join("") : result2.slice(0, length);
}
var createPadding_default = createPadding;

// node_modules/lodash-es/pad.js
var nativeCeil3 = Math.ceil;
var nativeFloor2 = Math.floor;
function pad(string, length, chars) {
  string = toString_default(string);
  length = toInteger_default(length);
  var strLength = length ? stringSize_default(string) : 0;
  if (!length || strLength >= length) {
    return string;
  }
  var mid = (length - strLength) / 2;
  return createPadding_default(nativeFloor2(mid), chars) + string + createPadding_default(nativeCeil3(mid), chars);
}
var pad_default = pad;

// node_modules/lodash-es/padEnd.js
function padEnd(string, length, chars) {
  string = toString_default(string);
  length = toInteger_default(length);
  var strLength = length ? stringSize_default(string) : 0;
  return length && strLength < length ? string + createPadding_default(length - strLength, chars) : string;
}
var padEnd_default = padEnd;

// node_modules/lodash-es/padStart.js
function padStart(string, length, chars) {
  string = toString_default(string);
  length = toInteger_default(length);
  var strLength = length ? stringSize_default(string) : 0;
  return length && strLength < length ? createPadding_default(length - strLength, chars) + string : string;
}
var padStart_default = padStart;

// node_modules/lodash-es/parseInt.js
var reTrimStart2 = /^\s+/;
var nativeParseInt = root_default.parseInt;
function parseInt2(string, radix, guard) {
  if (guard || radix == null) {
    radix = 0;
  } else if (radix) {
    radix = +radix;
  }
  return nativeParseInt(toString_default(string).replace(reTrimStart2, ""), radix || 0);
}
var parseInt_default = parseInt2;

// node_modules/lodash-es/partial.js
var WRAP_PARTIAL_FLAG7 = 32;
var partial = baseRest_default(function(func, partials) {
  var holders = replaceHolders_default(partials, getHolder_default(partial));
  return createWrap_default(func, WRAP_PARTIAL_FLAG7, void 0, partials, holders);
});
partial.placeholder = {};
var partial_default = partial;

// node_modules/lodash-es/partialRight.js
var WRAP_PARTIAL_RIGHT_FLAG4 = 64;
var partialRight = baseRest_default(function(func, partials) {
  var holders = replaceHolders_default(partials, getHolder_default(partialRight));
  return createWrap_default(func, WRAP_PARTIAL_RIGHT_FLAG4, void 0, partials, holders);
});
partialRight.placeholder = {};
var partialRight_default = partialRight;

// node_modules/lodash-es/partition.js
var partition = createAggregator_default(function(result2, value, key) {
  result2[key ? 0 : 1].push(value);
}, function() {
  return [[], []];
});
var partition_default = partition;

// node_modules/lodash-es/_basePick.js
function basePick(object, paths) {
  return basePickBy_default(object, paths, function(value, path) {
    return hasIn_default(object, path);
  });
}
var basePick_default = basePick;

// node_modules/lodash-es/pick.js
var pick = flatRest_default(function(object, paths) {
  return object == null ? {} : basePick_default(object, paths);
});
var pick_default = pick;

// node_modules/lodash-es/plant.js
function wrapperPlant(value) {
  var result2, parent2 = this;
  while (parent2 instanceof baseLodash_default) {
    var clone2 = wrapperClone_default(parent2);
    clone2.__index__ = 0;
    clone2.__values__ = void 0;
    if (result2) {
      previous.__wrapped__ = clone2;
    } else {
      result2 = clone2;
    }
    var previous = clone2;
    parent2 = parent2.__wrapped__;
  }
  previous.__wrapped__ = value;
  return result2;
}
var plant_default = wrapperPlant;

// node_modules/lodash-es/propertyOf.js
function propertyOf(object) {
  return function(path) {
    return object == null ? void 0 : baseGet_default(object, path);
  };
}
var propertyOf_default = propertyOf;

// node_modules/lodash-es/_baseIndexOfWith.js
function baseIndexOfWith(array, value, fromIndex, comparator) {
  var index = fromIndex - 1, length = array.length;
  while (++index < length) {
    if (comparator(array[index], value)) {
      return index;
    }
  }
  return -1;
}
var baseIndexOfWith_default = baseIndexOfWith;

// node_modules/lodash-es/_basePullAll.js
var arrayProto3 = Array.prototype;
var splice2 = arrayProto3.splice;
function basePullAll(array, values2, iteratee2, comparator) {
  var indexOf2 = comparator ? baseIndexOfWith_default : baseIndexOf_default, index = -1, length = values2.length, seen = array;
  if (array === values2) {
    values2 = copyArray_default(values2);
  }
  if (iteratee2) {
    seen = arrayMap_default(array, baseUnary_default(iteratee2));
  }
  while (++index < length) {
    var fromIndex = 0, value = values2[index], computed2 = iteratee2 ? iteratee2(value) : value;
    while ((fromIndex = indexOf2(seen, computed2, fromIndex, comparator)) > -1) {
      if (seen !== array) {
        splice2.call(seen, fromIndex, 1);
      }
      splice2.call(array, fromIndex, 1);
    }
  }
  return array;
}
var basePullAll_default = basePullAll;

// node_modules/lodash-es/pullAll.js
function pullAll(array, values2) {
  return array && array.length && values2 && values2.length ? basePullAll_default(array, values2) : array;
}
var pullAll_default = pullAll;

// node_modules/lodash-es/pull.js
var pull = baseRest_default(pullAll_default);
var pull_default = pull;

// node_modules/lodash-es/pullAllBy.js
function pullAllBy(array, values2, iteratee2) {
  return array && array.length && values2 && values2.length ? basePullAll_default(array, values2, baseIteratee_default(iteratee2, 2)) : array;
}
var pullAllBy_default = pullAllBy;

// node_modules/lodash-es/pullAllWith.js
function pullAllWith(array, values2, comparator) {
  return array && array.length && values2 && values2.length ? basePullAll_default(array, values2, void 0, comparator) : array;
}
var pullAllWith_default = pullAllWith;

// node_modules/lodash-es/_basePullAt.js
var arrayProto4 = Array.prototype;
var splice3 = arrayProto4.splice;
function basePullAt(array, indexes) {
  var length = array ? indexes.length : 0, lastIndex = length - 1;
  while (length--) {
    var index = indexes[length];
    if (length == lastIndex || index !== previous) {
      var previous = index;
      if (isIndex_default(index)) {
        splice3.call(array, index, 1);
      } else {
        baseUnset_default(array, index);
      }
    }
  }
  return array;
}
var basePullAt_default = basePullAt;

// node_modules/lodash-es/pullAt.js
var pullAt = flatRest_default(function(array, indexes) {
  var length = array == null ? 0 : array.length, result2 = baseAt_default(array, indexes);
  basePullAt_default(array, arrayMap_default(indexes, function(index) {
    return isIndex_default(index, length) ? +index : index;
  }).sort(compareAscending_default));
  return result2;
});
var pullAt_default = pullAt;

// node_modules/lodash-es/_baseRandom.js
var nativeFloor3 = Math.floor;
var nativeRandom = Math.random;
function baseRandom(lower, upper) {
  return lower + nativeFloor3(nativeRandom() * (upper - lower + 1));
}
var baseRandom_default = baseRandom;

// node_modules/lodash-es/random.js
var freeParseFloat = parseFloat;
var nativeMin10 = Math.min;
var nativeRandom2 = Math.random;
function random(lower, upper, floating) {
  if (floating && typeof floating != "boolean" && isIterateeCall_default(lower, upper, floating)) {
    upper = floating = void 0;
  }
  if (floating === void 0) {
    if (typeof upper == "boolean") {
      floating = upper;
      upper = void 0;
    } else if (typeof lower == "boolean") {
      floating = lower;
      lower = void 0;
    }
  }
  if (lower === void 0 && upper === void 0) {
    lower = 0;
    upper = 1;
  } else {
    lower = toFinite_default(lower);
    if (upper === void 0) {
      upper = lower;
      lower = 0;
    } else {
      upper = toFinite_default(upper);
    }
  }
  if (lower > upper) {
    var temp = lower;
    lower = upper;
    upper = temp;
  }
  if (floating || lower % 1 || upper % 1) {
    var rand = nativeRandom2();
    return nativeMin10(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
  }
  return baseRandom_default(lower, upper);
}
var random_default = random;

// node_modules/lodash-es/_baseRange.js
var nativeCeil4 = Math.ceil;
var nativeMax13 = Math.max;
function baseRange(start, end, step, fromRight) {
  var index = -1, length = nativeMax13(nativeCeil4((end - start) / (step || 1)), 0), result2 = Array(length);
  while (length--) {
    result2[fromRight ? length : ++index] = start;
    start += step;
  }
  return result2;
}
var baseRange_default = baseRange;

// node_modules/lodash-es/_createRange.js
function createRange(fromRight) {
  return function(start, end, step) {
    if (step && typeof step != "number" && isIterateeCall_default(start, end, step)) {
      end = step = void 0;
    }
    start = toFinite_default(start);
    if (end === void 0) {
      end = start;
      start = 0;
    } else {
      end = toFinite_default(end);
    }
    step = step === void 0 ? start < end ? 1 : -1 : toFinite_default(step);
    return baseRange_default(start, end, step, fromRight);
  };
}
var createRange_default = createRange;

// node_modules/lodash-es/range.js
var range = createRange_default();
var range_default = range;

// node_modules/lodash-es/rangeRight.js
var rangeRight = createRange_default(true);
var rangeRight_default = rangeRight;

// node_modules/lodash-es/rearg.js
var WRAP_REARG_FLAG4 = 256;
var rearg = flatRest_default(function(func, indexes) {
  return createWrap_default(func, WRAP_REARG_FLAG4, void 0, void 0, void 0, indexes);
});
var rearg_default = rearg;

// node_modules/lodash-es/_baseReduce.js
function baseReduce(collection, iteratee2, accumulator, initAccum, eachFunc) {
  eachFunc(collection, function(value, index, collection2) {
    accumulator = initAccum ? (initAccum = false, value) : iteratee2(accumulator, value, index, collection2);
  });
  return accumulator;
}
var baseReduce_default = baseReduce;

// node_modules/lodash-es/reduce.js
function reduce(collection, iteratee2, accumulator) {
  var func = isArray_default(collection) ? arrayReduce_default : baseReduce_default, initAccum = arguments.length < 3;
  return func(collection, baseIteratee_default(iteratee2, 4), accumulator, initAccum, baseEach_default);
}
var reduce_default = reduce;

// node_modules/lodash-es/_arrayReduceRight.js
function arrayReduceRight(array, iteratee2, accumulator, initAccum) {
  var length = array == null ? 0 : array.length;
  if (initAccum && length) {
    accumulator = array[--length];
  }
  while (length--) {
    accumulator = iteratee2(accumulator, array[length], length, array);
  }
  return accumulator;
}
var arrayReduceRight_default = arrayReduceRight;

// node_modules/lodash-es/reduceRight.js
function reduceRight(collection, iteratee2, accumulator) {
  var func = isArray_default(collection) ? arrayReduceRight_default : baseReduce_default, initAccum = arguments.length < 3;
  return func(collection, baseIteratee_default(iteratee2, 4), accumulator, initAccum, baseEachRight_default);
}
var reduceRight_default = reduceRight;

// node_modules/lodash-es/reject.js
function reject(collection, predicate) {
  var func = isArray_default(collection) ? arrayFilter_default : baseFilter_default;
  return func(collection, negate_default(baseIteratee_default(predicate, 3)));
}
var reject_default = reject;

// node_modules/lodash-es/remove.js
function remove(array, predicate) {
  var result2 = [];
  if (!(array && array.length)) {
    return result2;
  }
  var index = -1, indexes = [], length = array.length;
  predicate = baseIteratee_default(predicate, 3);
  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result2.push(value);
      indexes.push(index);
    }
  }
  basePullAt_default(array, indexes);
  return result2;
}
var remove_default = remove;

// node_modules/lodash-es/repeat.js
function repeat(string, n, guard) {
  if (guard ? isIterateeCall_default(string, n, guard) : n === void 0) {
    n = 1;
  } else {
    n = toInteger_default(n);
  }
  return baseRepeat_default(toString_default(string), n);
}
var repeat_default = repeat;

// node_modules/lodash-es/replace.js
function replace() {
  var args = arguments, string = toString_default(args[0]);
  return args.length < 3 ? string : string.replace(args[1], args[2]);
}
var replace_default = replace;

// node_modules/lodash-es/rest.js
var FUNC_ERROR_TEXT10 = "Expected a function";
function rest(func, start) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT10);
  }
  start = start === void 0 ? start : toInteger_default(start);
  return baseRest_default(func, start);
}
var rest_default = rest;

// node_modules/lodash-es/result.js
function result(object, path, defaultValue) {
  path = castPath_default(path, object);
  var index = -1, length = path.length;
  if (!length) {
    length = 1;
    object = void 0;
  }
  while (++index < length) {
    var value = object == null ? void 0 : object[toKey_default(path[index])];
    if (value === void 0) {
      index = length;
      value = defaultValue;
    }
    object = isFunction_default(value) ? value.call(object) : value;
  }
  return object;
}
var result_default = result;

// node_modules/lodash-es/reverse.js
var arrayProto5 = Array.prototype;
var nativeReverse = arrayProto5.reverse;
function reverse(array) {
  return array == null ? array : nativeReverse.call(array);
}
var reverse_default = reverse;

// node_modules/lodash-es/round.js
var round = createRound_default("round");
var round_default = round;

// node_modules/lodash-es/_arraySample.js
function arraySample(array) {
  var length = array.length;
  return length ? array[baseRandom_default(0, length - 1)] : void 0;
}
var arraySample_default = arraySample;

// node_modules/lodash-es/_baseSample.js
function baseSample(collection) {
  return arraySample_default(values_default(collection));
}
var baseSample_default = baseSample;

// node_modules/lodash-es/sample.js
function sample(collection) {
  var func = isArray_default(collection) ? arraySample_default : baseSample_default;
  return func(collection);
}
var sample_default = sample;

// node_modules/lodash-es/_shuffleSelf.js
function shuffleSelf(array, size2) {
  var index = -1, length = array.length, lastIndex = length - 1;
  size2 = size2 === void 0 ? length : size2;
  while (++index < size2) {
    var rand = baseRandom_default(index, lastIndex), value = array[rand];
    array[rand] = array[index];
    array[index] = value;
  }
  array.length = size2;
  return array;
}
var shuffleSelf_default = shuffleSelf;

// node_modules/lodash-es/_arraySampleSize.js
function arraySampleSize(array, n) {
  return shuffleSelf_default(copyArray_default(array), baseClamp_default(n, 0, array.length));
}
var arraySampleSize_default = arraySampleSize;

// node_modules/lodash-es/_baseSampleSize.js
function baseSampleSize(collection, n) {
  var array = values_default(collection);
  return shuffleSelf_default(array, baseClamp_default(n, 0, array.length));
}
var baseSampleSize_default = baseSampleSize;

// node_modules/lodash-es/sampleSize.js
function sampleSize(collection, n, guard) {
  if (guard ? isIterateeCall_default(collection, n, guard) : n === void 0) {
    n = 1;
  } else {
    n = toInteger_default(n);
  }
  var func = isArray_default(collection) ? arraySampleSize_default : baseSampleSize_default;
  return func(collection, n);
}
var sampleSize_default = sampleSize;

// node_modules/lodash-es/set.js
function set(object, path, value) {
  return object == null ? object : baseSet_default(object, path, value);
}
var set_default = set;

// node_modules/lodash-es/setWith.js
function setWith(object, path, value, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return object == null ? object : baseSet_default(object, path, value, customizer);
}
var setWith_default = setWith;

// node_modules/lodash-es/_arrayShuffle.js
function arrayShuffle(array) {
  return shuffleSelf_default(copyArray_default(array));
}
var arrayShuffle_default = arrayShuffle;

// node_modules/lodash-es/_baseShuffle.js
function baseShuffle(collection) {
  return shuffleSelf_default(values_default(collection));
}
var baseShuffle_default = baseShuffle;

// node_modules/lodash-es/shuffle.js
function shuffle(collection) {
  var func = isArray_default(collection) ? arrayShuffle_default : baseShuffle_default;
  return func(collection);
}
var shuffle_default = shuffle;

// node_modules/lodash-es/size.js
var mapTag10 = "[object Map]";
var setTag10 = "[object Set]";
function size(collection) {
  if (collection == null) {
    return 0;
  }
  if (isArrayLike_default(collection)) {
    return isString_default(collection) ? stringSize_default(collection) : collection.length;
  }
  var tag = getTag_default(collection);
  if (tag == mapTag10 || tag == setTag10) {
    return collection.size;
  }
  return baseKeys_default(collection).length;
}
var size_default = size;

// node_modules/lodash-es/slice.js
function slice(array, start, end) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  if (end && typeof end != "number" && isIterateeCall_default(array, start, end)) {
    start = 0;
    end = length;
  } else {
    start = start == null ? 0 : toInteger_default(start);
    end = end === void 0 ? length : toInteger_default(end);
  }
  return baseSlice_default(array, start, end);
}
var slice_default = slice;

// node_modules/lodash-es/snakeCase.js
var snakeCase = createCompounder_default(function(result2, word, index) {
  return result2 + (index ? "_" : "") + word.toLowerCase();
});
var snakeCase_default = snakeCase;

// node_modules/lodash-es/_baseSome.js
function baseSome(collection, predicate) {
  var result2;
  baseEach_default(collection, function(value, index, collection2) {
    result2 = predicate(value, index, collection2);
    return !result2;
  });
  return !!result2;
}
var baseSome_default = baseSome;

// node_modules/lodash-es/some.js
function some(collection, predicate, guard) {
  var func = isArray_default(collection) ? arraySome_default : baseSome_default;
  if (guard && isIterateeCall_default(collection, predicate, guard)) {
    predicate = void 0;
  }
  return func(collection, baseIteratee_default(predicate, 3));
}
var some_default = some;

// node_modules/lodash-es/sortBy.js
var sortBy = baseRest_default(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length = iteratees.length;
  if (length > 1 && isIterateeCall_default(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && isIterateeCall_default(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return baseOrderBy_default(collection, baseFlatten_default(iteratees, 1), []);
});
var sortBy_default = sortBy;

// node_modules/lodash-es/_baseSortedIndexBy.js
var MAX_ARRAY_LENGTH3 = 4294967295;
var MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH3 - 1;
var nativeFloor4 = Math.floor;
var nativeMin11 = Math.min;
function baseSortedIndexBy(array, value, iteratee2, retHighest) {
  var low = 0, high = array == null ? 0 : array.length;
  if (high === 0) {
    return 0;
  }
  value = iteratee2(value);
  var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol_default(value), valIsUndefined = value === void 0;
  while (low < high) {
    var mid = nativeFloor4((low + high) / 2), computed2 = iteratee2(array[mid]), othIsDefined = computed2 !== void 0, othIsNull = computed2 === null, othIsReflexive = computed2 === computed2, othIsSymbol = isSymbol_default(computed2);
    if (valIsNaN) {
      var setLow = retHighest || othIsReflexive;
    } else if (valIsUndefined) {
      setLow = othIsReflexive && (retHighest || othIsDefined);
    } else if (valIsNull) {
      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
    } else if (valIsSymbol) {
      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
    } else if (othIsNull || othIsSymbol) {
      setLow = false;
    } else {
      setLow = retHighest ? computed2 <= value : computed2 < value;
    }
    if (setLow) {
      low = mid + 1;
    } else {
      high = mid;
    }
  }
  return nativeMin11(high, MAX_ARRAY_INDEX);
}
var baseSortedIndexBy_default = baseSortedIndexBy;

// node_modules/lodash-es/_baseSortedIndex.js
var MAX_ARRAY_LENGTH4 = 4294967295;
var HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH4 >>> 1;
function baseSortedIndex(array, value, retHighest) {
  var low = 0, high = array == null ? low : array.length;
  if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
    while (low < high) {
      var mid = low + high >>> 1, computed2 = array[mid];
      if (computed2 !== null && !isSymbol_default(computed2) && (retHighest ? computed2 <= value : computed2 < value)) {
        low = mid + 1;
      } else {
        high = mid;
      }
    }
    return high;
  }
  return baseSortedIndexBy_default(array, value, identity_default, retHighest);
}
var baseSortedIndex_default = baseSortedIndex;

// node_modules/lodash-es/sortedIndex.js
function sortedIndex(array, value) {
  return baseSortedIndex_default(array, value);
}
var sortedIndex_default = sortedIndex;

// node_modules/lodash-es/sortedIndexBy.js
function sortedIndexBy(array, value, iteratee2) {
  return baseSortedIndexBy_default(array, value, baseIteratee_default(iteratee2, 2));
}
var sortedIndexBy_default = sortedIndexBy;

// node_modules/lodash-es/sortedIndexOf.js
function sortedIndexOf(array, value) {
  var length = array == null ? 0 : array.length;
  if (length) {
    var index = baseSortedIndex_default(array, value);
    if (index < length && eq_default(array[index], value)) {
      return index;
    }
  }
  return -1;
}
var sortedIndexOf_default = sortedIndexOf;

// node_modules/lodash-es/sortedLastIndex.js
function sortedLastIndex(array, value) {
  return baseSortedIndex_default(array, value, true);
}
var sortedLastIndex_default = sortedLastIndex;

// node_modules/lodash-es/sortedLastIndexBy.js
function sortedLastIndexBy(array, value, iteratee2) {
  return baseSortedIndexBy_default(array, value, baseIteratee_default(iteratee2, 2), true);
}
var sortedLastIndexBy_default = sortedLastIndexBy;

// node_modules/lodash-es/sortedLastIndexOf.js
function sortedLastIndexOf(array, value) {
  var length = array == null ? 0 : array.length;
  if (length) {
    var index = baseSortedIndex_default(array, value, true) - 1;
    if (eq_default(array[index], value)) {
      return index;
    }
  }
  return -1;
}
var sortedLastIndexOf_default = sortedLastIndexOf;

// node_modules/lodash-es/_baseSortedUniq.js
function baseSortedUniq(array, iteratee2) {
  var index = -1, length = array.length, resIndex = 0, result2 = [];
  while (++index < length) {
    var value = array[index], computed2 = iteratee2 ? iteratee2(value) : value;
    if (!index || !eq_default(computed2, seen)) {
      var seen = computed2;
      result2[resIndex++] = value === 0 ? 0 : value;
    }
  }
  return result2;
}
var baseSortedUniq_default = baseSortedUniq;

// node_modules/lodash-es/sortedUniq.js
function sortedUniq(array) {
  return array && array.length ? baseSortedUniq_default(array) : [];
}
var sortedUniq_default = sortedUniq;

// node_modules/lodash-es/sortedUniqBy.js
function sortedUniqBy(array, iteratee2) {
  return array && array.length ? baseSortedUniq_default(array, baseIteratee_default(iteratee2, 2)) : [];
}
var sortedUniqBy_default = sortedUniqBy;

// node_modules/lodash-es/split.js
var MAX_ARRAY_LENGTH5 = 4294967295;
function split(string, separator, limit) {
  if (limit && typeof limit != "number" && isIterateeCall_default(string, separator, limit)) {
    separator = limit = void 0;
  }
  limit = limit === void 0 ? MAX_ARRAY_LENGTH5 : limit >>> 0;
  if (!limit) {
    return [];
  }
  string = toString_default(string);
  if (string && (typeof separator == "string" || separator != null && !isRegExp_default(separator))) {
    separator = baseToString_default(separator);
    if (!separator && hasUnicode_default(string)) {
      return castSlice_default(stringToArray_default(string), 0, limit);
    }
  }
  return string.split(separator, limit);
}
var split_default = split;

// node_modules/lodash-es/spread.js
var FUNC_ERROR_TEXT11 = "Expected a function";
var nativeMax14 = Math.max;
function spread(func, start) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT11);
  }
  start = start == null ? 0 : nativeMax14(toInteger_default(start), 0);
  return baseRest_default(function(args) {
    var array = args[start], otherArgs = castSlice_default(args, 0, start);
    if (array) {
      arrayPush_default(otherArgs, array);
    }
    return apply_default(func, this, otherArgs);
  });
}
var spread_default = spread;

// node_modules/lodash-es/startCase.js
var startCase = createCompounder_default(function(result2, word, index) {
  return result2 + (index ? " " : "") + upperFirst_default(word);
});
var startCase_default = startCase;

// node_modules/lodash-es/startsWith.js
function startsWith(string, target, position) {
  string = toString_default(string);
  position = position == null ? 0 : baseClamp_default(toInteger_default(position), 0, string.length);
  target = baseToString_default(target);
  return string.slice(position, position + target.length) == target;
}
var startsWith_default = startsWith;

// node_modules/lodash-es/stubObject.js
function stubObject() {
  return {};
}
var stubObject_default = stubObject;

// node_modules/lodash-es/stubString.js
function stubString() {
  return "";
}
var stubString_default = stubString;

// node_modules/lodash-es/stubTrue.js
function stubTrue() {
  return true;
}
var stubTrue_default = stubTrue;

// node_modules/lodash-es/subtract.js
var subtract = createMathOperation_default(function(minuend, subtrahend) {
  return minuend - subtrahend;
}, 0);
var subtract_default = subtract;

// node_modules/lodash-es/sum.js
function sum(array) {
  return array && array.length ? baseSum_default(array, identity_default) : 0;
}
var sum_default = sum;

// node_modules/lodash-es/sumBy.js
function sumBy(array, iteratee2) {
  return array && array.length ? baseSum_default(array, baseIteratee_default(iteratee2, 2)) : 0;
}
var sumBy_default = sumBy;

// node_modules/lodash-es/tail.js
function tail(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseSlice_default(array, 1, length) : [];
}
var tail_default = tail;

// node_modules/lodash-es/take.js
function take(array, n, guard) {
  if (!(array && array.length)) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  return baseSlice_default(array, 0, n < 0 ? 0 : n);
}
var take_default = take;

// node_modules/lodash-es/takeRight.js
function takeRight(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  n = length - n;
  return baseSlice_default(array, n < 0 ? 0 : n, length);
}
var takeRight_default = takeRight;

// node_modules/lodash-es/takeRightWhile.js
function takeRightWhile(array, predicate) {
  return array && array.length ? baseWhile_default(array, baseIteratee_default(predicate, 3), false, true) : [];
}
var takeRightWhile_default = takeRightWhile;

// node_modules/lodash-es/takeWhile.js
function takeWhile(array, predicate) {
  return array && array.length ? baseWhile_default(array, baseIteratee_default(predicate, 3)) : [];
}
var takeWhile_default = takeWhile;

// node_modules/lodash-es/tap.js
function tap(value, interceptor) {
  interceptor(value);
  return value;
}
var tap_default = tap;

// node_modules/lodash-es/_customDefaultsAssignIn.js
var objectProto27 = Object.prototype;
var hasOwnProperty23 = objectProto27.hasOwnProperty;
function customDefaultsAssignIn(objValue, srcValue, key, object) {
  if (objValue === void 0 || eq_default(objValue, objectProto27[key]) && !hasOwnProperty23.call(object, key)) {
    return srcValue;
  }
  return objValue;
}
var customDefaultsAssignIn_default = customDefaultsAssignIn;

// node_modules/lodash-es/_escapeStringChar.js
var stringEscapes = {
  "\\": "\\",
  "'": "'",
  "\n": "n",
  "\r": "r",
  "\u2028": "u2028",
  "\u2029": "u2029"
};
function escapeStringChar(chr) {
  return "\\" + stringEscapes[chr];
}
var escapeStringChar_default = escapeStringChar;

// node_modules/lodash-es/_reInterpolate.js
var reInterpolate = /<%=([\s\S]+?)%>/g;
var reInterpolate_default = reInterpolate;

// node_modules/lodash-es/_reEscape.js
var reEscape = /<%-([\s\S]+?)%>/g;
var reEscape_default = reEscape;

// node_modules/lodash-es/_reEvaluate.js
var reEvaluate = /<%([\s\S]+?)%>/g;
var reEvaluate_default = reEvaluate;

// node_modules/lodash-es/templateSettings.js
var templateSettings = {
  /**
   * Used to detect `data` property values to be HTML-escaped.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  "escape": reEscape_default,
  /**
   * Used to detect code to be evaluated.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  "evaluate": reEvaluate_default,
  /**
   * Used to detect `data` property values to inject.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  "interpolate": reInterpolate_default,
  /**
   * Used to reference the data object in the template text.
   *
   * @memberOf _.templateSettings
   * @type {string}
   */
  "variable": "",
  /**
   * Used to import variables into the compiled template.
   *
   * @memberOf _.templateSettings
   * @type {Object}
   */
  "imports": {
    /**
     * A reference to the `lodash` function.
     *
     * @memberOf _.templateSettings.imports
     * @type {Function}
     */
    "_": { "escape": escape_default }
  }
};
var templateSettings_default = templateSettings;

// node_modules/lodash-es/template.js
var INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
var reEmptyStringLeading = /\b__p \+= '';/g;
var reEmptyStringMiddle = /\b(__p \+=) '' \+/g;
var reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
var reNoMatch = /($^)/;
var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
var objectProto28 = Object.prototype;
var hasOwnProperty24 = objectProto28.hasOwnProperty;
function template(string, options, guard) {
  var settings = templateSettings_default.imports._.templateSettings || templateSettings_default;
  if (guard && isIterateeCall_default(string, options, guard)) {
    options = void 0;
  }
  string = toString_default(string);
  options = assignInWith_default({}, options, settings, customDefaultsAssignIn_default);
  var imports = assignInWith_default({}, options.imports, settings.imports, customDefaultsAssignIn_default), importsKeys = keys_default(imports), importsValues = baseValues_default(imports, importsKeys);
  var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
  var reDelimiters = RegExp(
    (options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate_default ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$",
    "g"
  );
  var sourceURL = hasOwnProperty24.call(options, "sourceURL") ? "//# sourceURL=" + (options.sourceURL + "").replace(/\s/g, " ") + "\n" : "";
  string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
    interpolateValue || (interpolateValue = esTemplateValue);
    source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar_default);
    if (escapeValue) {
      isEscaping = true;
      source += "' +\n__e(" + escapeValue + ") +\n'";
    }
    if (evaluateValue) {
      isEvaluating = true;
      source += "';\n" + evaluateValue + ";\n__p += '";
    }
    if (interpolateValue) {
      source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
    }
    index = offset + match.length;
    return match;
  });
  source += "';\n";
  var variable = hasOwnProperty24.call(options, "variable") && options.variable;
  if (!variable) {
    source = "with (obj) {\n" + source + "\n}\n";
  } else if (reForbiddenIdentifierChars.test(variable)) {
    throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
  }
  source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
  source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
  var result2 = attempt_default(function() {
    return Function(importsKeys, sourceURL + "return " + source).apply(void 0, importsValues);
  });
  result2.source = source;
  if (isError_default(result2)) {
    throw result2;
  }
  return result2;
}
var template_default = template;

// node_modules/lodash-es/throttle.js
var FUNC_ERROR_TEXT12 = "Expected a function";
function throttle(func, wait, options) {
  var leading = true, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT12);
  }
  if (isObject_default(options)) {
    leading = "leading" in options ? !!options.leading : leading;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  return debounce_default(func, wait, {
    "leading": leading,
    "maxWait": wait,
    "trailing": trailing
  });
}
var throttle_default = throttle;

// node_modules/lodash-es/thru.js
function thru(value, interceptor) {
  return interceptor(value);
}
var thru_default = thru;

// node_modules/lodash-es/times.js
var MAX_SAFE_INTEGER5 = 9007199254740991;
var MAX_ARRAY_LENGTH6 = 4294967295;
var nativeMin12 = Math.min;
function times(n, iteratee2) {
  n = toInteger_default(n);
  if (n < 1 || n > MAX_SAFE_INTEGER5) {
    return [];
  }
  var index = MAX_ARRAY_LENGTH6, length = nativeMin12(n, MAX_ARRAY_LENGTH6);
  iteratee2 = castFunction_default(iteratee2);
  n -= MAX_ARRAY_LENGTH6;
  var result2 = baseTimes_default(length, iteratee2);
  while (++index < n) {
    iteratee2(index);
  }
  return result2;
}
var times_default = times;

// node_modules/lodash-es/toIterator.js
function wrapperToIterator() {
  return this;
}
var toIterator_default = wrapperToIterator;

// node_modules/lodash-es/_baseWrapperValue.js
function baseWrapperValue(value, actions) {
  var result2 = value;
  if (result2 instanceof LazyWrapper_default) {
    result2 = result2.value();
  }
  return arrayReduce_default(actions, function(result3, action) {
    return action.func.apply(action.thisArg, arrayPush_default([result3], action.args));
  }, result2);
}
var baseWrapperValue_default = baseWrapperValue;

// node_modules/lodash-es/wrapperValue.js
function wrapperValue() {
  return baseWrapperValue_default(this.__wrapped__, this.__actions__);
}
var wrapperValue_default = wrapperValue;

// node_modules/lodash-es/toLower.js
function toLower(value) {
  return toString_default(value).toLowerCase();
}
var toLower_default = toLower;

// node_modules/lodash-es/toPath.js
function toPath(value) {
  if (isArray_default(value)) {
    return arrayMap_default(value, toKey_default);
  }
  return isSymbol_default(value) ? [value] : copyArray_default(stringToPath_default(toString_default(value)));
}
var toPath_default = toPath;

// node_modules/lodash-es/toSafeInteger.js
var MAX_SAFE_INTEGER6 = 9007199254740991;
function toSafeInteger(value) {
  return value ? baseClamp_default(toInteger_default(value), -MAX_SAFE_INTEGER6, MAX_SAFE_INTEGER6) : value === 0 ? value : 0;
}
var toSafeInteger_default = toSafeInteger;

// node_modules/lodash-es/toUpper.js
function toUpper(value) {
  return toString_default(value).toUpperCase();
}
var toUpper_default = toUpper;

// node_modules/lodash-es/transform.js
function transform(object, iteratee2, accumulator) {
  var isArr = isArray_default(object), isArrLike = isArr || isBuffer_default(object) || isTypedArray_default(object);
  iteratee2 = baseIteratee_default(iteratee2, 4);
  if (accumulator == null) {
    var Ctor = object && object.constructor;
    if (isArrLike) {
      accumulator = isArr ? new Ctor() : [];
    } else if (isObject_default(object)) {
      accumulator = isFunction_default(Ctor) ? baseCreate_default(getPrototype_default(object)) : {};
    } else {
      accumulator = {};
    }
  }
  (isArrLike ? arrayEach_default : baseForOwn_default)(object, function(value, index, object2) {
    return iteratee2(accumulator, value, index, object2);
  });
  return accumulator;
}
var transform_default = transform;

// node_modules/lodash-es/_charsEndIndex.js
function charsEndIndex(strSymbols, chrSymbols) {
  var index = strSymbols.length;
  while (index-- && baseIndexOf_default(chrSymbols, strSymbols[index], 0) > -1) {
  }
  return index;
}
var charsEndIndex_default = charsEndIndex;

// node_modules/lodash-es/_charsStartIndex.js
function charsStartIndex(strSymbols, chrSymbols) {
  var index = -1, length = strSymbols.length;
  while (++index < length && baseIndexOf_default(chrSymbols, strSymbols[index], 0) > -1) {
  }
  return index;
}
var charsStartIndex_default = charsStartIndex;

// node_modules/lodash-es/trim.js
function trim(string, chars, guard) {
  string = toString_default(string);
  if (string && (guard || chars === void 0)) {
    return baseTrim_default(string);
  }
  if (!string || !(chars = baseToString_default(chars))) {
    return string;
  }
  var strSymbols = stringToArray_default(string), chrSymbols = stringToArray_default(chars), start = charsStartIndex_default(strSymbols, chrSymbols), end = charsEndIndex_default(strSymbols, chrSymbols) + 1;
  return castSlice_default(strSymbols, start, end).join("");
}
var trim_default = trim;

// node_modules/lodash-es/trimEnd.js
function trimEnd(string, chars, guard) {
  string = toString_default(string);
  if (string && (guard || chars === void 0)) {
    return string.slice(0, trimmedEndIndex_default(string) + 1);
  }
  if (!string || !(chars = baseToString_default(chars))) {
    return string;
  }
  var strSymbols = stringToArray_default(string), end = charsEndIndex_default(strSymbols, stringToArray_default(chars)) + 1;
  return castSlice_default(strSymbols, 0, end).join("");
}
var trimEnd_default = trimEnd;

// node_modules/lodash-es/trimStart.js
var reTrimStart3 = /^\s+/;
function trimStart(string, chars, guard) {
  string = toString_default(string);
  if (string && (guard || chars === void 0)) {
    return string.replace(reTrimStart3, "");
  }
  if (!string || !(chars = baseToString_default(chars))) {
    return string;
  }
  var strSymbols = stringToArray_default(string), start = charsStartIndex_default(strSymbols, stringToArray_default(chars));
  return castSlice_default(strSymbols, start).join("");
}
var trimStart_default = trimStart;

// node_modules/lodash-es/truncate.js
var DEFAULT_TRUNC_LENGTH = 30;
var DEFAULT_TRUNC_OMISSION = "...";
var reFlags2 = /\w*$/;
function truncate(string, options) {
  var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
  if (isObject_default(options)) {
    var separator = "separator" in options ? options.separator : separator;
    length = "length" in options ? toInteger_default(options.length) : length;
    omission = "omission" in options ? baseToString_default(options.omission) : omission;
  }
  string = toString_default(string);
  var strLength = string.length;
  if (hasUnicode_default(string)) {
    var strSymbols = stringToArray_default(string);
    strLength = strSymbols.length;
  }
  if (length >= strLength) {
    return string;
  }
  var end = length - stringSize_default(omission);
  if (end < 1) {
    return omission;
  }
  var result2 = strSymbols ? castSlice_default(strSymbols, 0, end).join("") : string.slice(0, end);
  if (separator === void 0) {
    return result2 + omission;
  }
  if (strSymbols) {
    end += result2.length - end;
  }
  if (isRegExp_default(separator)) {
    if (string.slice(end).search(separator)) {
      var match, substring = result2;
      if (!separator.global) {
        separator = RegExp(separator.source, toString_default(reFlags2.exec(separator)) + "g");
      }
      separator.lastIndex = 0;
      while (match = separator.exec(substring)) {
        var newEnd = match.index;
      }
      result2 = result2.slice(0, newEnd === void 0 ? end : newEnd);
    }
  } else if (string.indexOf(baseToString_default(separator), end) != end) {
    var index = result2.lastIndexOf(separator);
    if (index > -1) {
      result2 = result2.slice(0, index);
    }
  }
  return result2 + omission;
}
var truncate_default = truncate;

// node_modules/lodash-es/unary.js
function unary(func) {
  return ary_default(func, 1);
}
var unary_default = unary;

// node_modules/lodash-es/_unescapeHtmlChar.js
var htmlUnescapes = {
  "&amp;": "&",
  "&lt;": "<",
  "&gt;": ">",
  "&quot;": '"',
  "&#39;": "'"
};
var unescapeHtmlChar = basePropertyOf_default(htmlUnescapes);
var unescapeHtmlChar_default = unescapeHtmlChar;

// node_modules/lodash-es/unescape.js
var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g;
var reHasEscapedHtml = RegExp(reEscapedHtml.source);
function unescape(string) {
  string = toString_default(string);
  return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar_default) : string;
}
var unescape_default = unescape;

// node_modules/lodash-es/_createSet.js
var INFINITY6 = 1 / 0;
var createSet = !(Set_default && 1 / setToArray_default(new Set_default([, -0]))[1] == INFINITY6) ? noop_default : function(values2) {
  return new Set_default(values2);
};
var createSet_default = createSet;

// node_modules/lodash-es/_baseUniq.js
var LARGE_ARRAY_SIZE3 = 200;
function baseUniq(array, iteratee2, comparator) {
  var index = -1, includes2 = arrayIncludes_default, length = array.length, isCommon = true, result2 = [], seen = result2;
  if (comparator) {
    isCommon = false;
    includes2 = arrayIncludesWith_default;
  } else if (length >= LARGE_ARRAY_SIZE3) {
    var set2 = iteratee2 ? null : createSet_default(array);
    if (set2) {
      return setToArray_default(set2);
    }
    isCommon = false;
    includes2 = cacheHas_default;
    seen = new SetCache_default();
  } else {
    seen = iteratee2 ? [] : result2;
  }
  outer:
    while (++index < length) {
      var value = array[index], computed2 = iteratee2 ? iteratee2(value) : value;
      value = comparator || value !== 0 ? value : 0;
      if (isCommon && computed2 === computed2) {
        var seenIndex = seen.length;
        while (seenIndex--) {
          if (seen[seenIndex] === computed2) {
            continue outer;
          }
        }
        if (iteratee2) {
          seen.push(computed2);
        }
        result2.push(value);
      } else if (!includes2(seen, computed2, comparator)) {
        if (seen !== result2) {
          seen.push(computed2);
        }
        result2.push(value);
      }
    }
  return result2;
}
var baseUniq_default = baseUniq;

// node_modules/lodash-es/union.js
var union = baseRest_default(function(arrays) {
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true));
});
var union_default = union;

// node_modules/lodash-es/unionBy.js
var unionBy = baseRest_default(function(arrays) {
  var iteratee2 = last_default(arrays);
  if (isArrayLikeObject_default(iteratee2)) {
    iteratee2 = void 0;
  }
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true), baseIteratee_default(iteratee2, 2));
});
var unionBy_default = unionBy;

// node_modules/lodash-es/unionWith.js
var unionWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays);
  comparator = typeof comparator == "function" ? comparator : void 0;
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true), void 0, comparator);
});
var unionWith_default = unionWith;

// node_modules/lodash-es/uniq.js
function uniq(array) {
  return array && array.length ? baseUniq_default(array) : [];
}
var uniq_default = uniq;

// node_modules/lodash-es/uniqBy.js
function uniqBy(array, iteratee2) {
  return array && array.length ? baseUniq_default(array, baseIteratee_default(iteratee2, 2)) : [];
}
var uniqBy_default = uniqBy;

// node_modules/lodash-es/uniqWith.js
function uniqWith(array, comparator) {
  comparator = typeof comparator == "function" ? comparator : void 0;
  return array && array.length ? baseUniq_default(array, void 0, comparator) : [];
}
var uniqWith_default = uniqWith;

// node_modules/lodash-es/uniqueId.js
var idCounter = 0;
function uniqueId(prefix) {
  var id = ++idCounter;
  return toString_default(prefix) + id;
}
var uniqueId_default = uniqueId;

// node_modules/lodash-es/unset.js
function unset(object, path) {
  return object == null ? true : baseUnset_default(object, path);
}
var unset_default = unset;

// node_modules/lodash-es/unzip.js
var nativeMax15 = Math.max;
function unzip(array) {
  if (!(array && array.length)) {
    return [];
  }
  var length = 0;
  array = arrayFilter_default(array, function(group) {
    if (isArrayLikeObject_default(group)) {
      length = nativeMax15(group.length, length);
      return true;
    }
  });
  return baseTimes_default(length, function(index) {
    return arrayMap_default(array, baseProperty_default(index));
  });
}
var unzip_default = unzip;

// node_modules/lodash-es/unzipWith.js
function unzipWith(array, iteratee2) {
  if (!(array && array.length)) {
    return [];
  }
  var result2 = unzip_default(array);
  if (iteratee2 == null) {
    return result2;
  }
  return arrayMap_default(result2, function(group) {
    return apply_default(iteratee2, void 0, group);
  });
}
var unzipWith_default = unzipWith;

// node_modules/lodash-es/_baseUpdate.js
function baseUpdate(object, path, updater, customizer) {
  return baseSet_default(object, path, updater(baseGet_default(object, path)), customizer);
}
var baseUpdate_default = baseUpdate;

// node_modules/lodash-es/update.js
function update(object, path, updater) {
  return object == null ? object : baseUpdate_default(object, path, castFunction_default(updater));
}
var update_default = update;

// node_modules/lodash-es/updateWith.js
function updateWith(object, path, updater, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return object == null ? object : baseUpdate_default(object, path, castFunction_default(updater), customizer);
}
var updateWith_default = updateWith;

// node_modules/lodash-es/upperCase.js
var upperCase = createCompounder_default(function(result2, word, index) {
  return result2 + (index ? " " : "") + word.toUpperCase();
});
var upperCase_default = upperCase;

// node_modules/lodash-es/valuesIn.js
function valuesIn(object) {
  return object == null ? [] : baseValues_default(object, keysIn_default(object));
}
var valuesIn_default = valuesIn;

// node_modules/lodash-es/without.js
var without = baseRest_default(function(array, values2) {
  return isArrayLikeObject_default(array) ? baseDifference_default(array, values2) : [];
});
var without_default = without;

// node_modules/lodash-es/wrap.js
function wrap(value, wrapper) {
  return partial_default(castFunction_default(wrapper), value);
}
var wrap_default = wrap;

// node_modules/lodash-es/wrapperAt.js
var wrapperAt = flatRest_default(function(paths) {
  var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
    return baseAt_default(object, paths);
  };
  if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper_default) || !isIndex_default(start)) {
    return this.thru(interceptor);
  }
  value = value.slice(start, +start + (length ? 1 : 0));
  value.__actions__.push({
    "func": thru_default,
    "args": [interceptor],
    "thisArg": void 0
  });
  return new LodashWrapper_default(value, this.__chain__).thru(function(array) {
    if (length && !array.length) {
      array.push(void 0);
    }
    return array;
  });
});
var wrapperAt_default = wrapperAt;

// node_modules/lodash-es/wrapperChain.js
function wrapperChain() {
  return chain_default(this);
}
var wrapperChain_default = wrapperChain;

// node_modules/lodash-es/wrapperReverse.js
function wrapperReverse() {
  var value = this.__wrapped__;
  if (value instanceof LazyWrapper_default) {
    var wrapped = value;
    if (this.__actions__.length) {
      wrapped = new LazyWrapper_default(this);
    }
    wrapped = wrapped.reverse();
    wrapped.__actions__.push({
      "func": thru_default,
      "args": [reverse_default],
      "thisArg": void 0
    });
    return new LodashWrapper_default(wrapped, this.__chain__);
  }
  return this.thru(reverse_default);
}
var wrapperReverse_default = wrapperReverse;

// node_modules/lodash-es/_baseXor.js
function baseXor(arrays, iteratee2, comparator) {
  var length = arrays.length;
  if (length < 2) {
    return length ? baseUniq_default(arrays[0]) : [];
  }
  var index = -1, result2 = Array(length);
  while (++index < length) {
    var array = arrays[index], othIndex = -1;
    while (++othIndex < length) {
      if (othIndex != index) {
        result2[index] = baseDifference_default(result2[index] || array, arrays[othIndex], iteratee2, comparator);
      }
    }
  }
  return baseUniq_default(baseFlatten_default(result2, 1), iteratee2, comparator);
}
var baseXor_default = baseXor;

// node_modules/lodash-es/xor.js
var xor = baseRest_default(function(arrays) {
  return baseXor_default(arrayFilter_default(arrays, isArrayLikeObject_default));
});
var xor_default = xor;

// node_modules/lodash-es/xorBy.js
var xorBy = baseRest_default(function(arrays) {
  var iteratee2 = last_default(arrays);
  if (isArrayLikeObject_default(iteratee2)) {
    iteratee2 = void 0;
  }
  return baseXor_default(arrayFilter_default(arrays, isArrayLikeObject_default), baseIteratee_default(iteratee2, 2));
});
var xorBy_default = xorBy;

// node_modules/lodash-es/xorWith.js
var xorWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays);
  comparator = typeof comparator == "function" ? comparator : void 0;
  return baseXor_default(arrayFilter_default(arrays, isArrayLikeObject_default), void 0, comparator);
});
var xorWith_default = xorWith;

// node_modules/lodash-es/zip.js
var zip = baseRest_default(unzip_default);
var zip_default = zip;

// node_modules/lodash-es/_baseZipObject.js
function baseZipObject(props, values2, assignFunc) {
  var index = -1, length = props.length, valsLength = values2.length, result2 = {};
  while (++index < length) {
    var value = index < valsLength ? values2[index] : void 0;
    assignFunc(result2, props[index], value);
  }
  return result2;
}
var baseZipObject_default = baseZipObject;

// node_modules/lodash-es/zipObject.js
function zipObject(props, values2) {
  return baseZipObject_default(props || [], values2 || [], assignValue_default);
}
var zipObject_default = zipObject;

// node_modules/lodash-es/zipObjectDeep.js
function zipObjectDeep(props, values2) {
  return baseZipObject_default(props || [], values2 || [], baseSet_default);
}
var zipObjectDeep_default = zipObjectDeep;

// node_modules/lodash-es/zipWith.js
var zipWith = baseRest_default(function(arrays) {
  var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : void 0;
  iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : void 0;
  return unzipWith_default(arrays, iteratee2);
});
var zipWith_default = zipWith;

// node_modules/lodash-es/array.default.js
var array_default_default = {
  chunk: chunk_default,
  compact: compact_default,
  concat: concat_default,
  difference: difference_default,
  differenceBy: differenceBy_default,
  differenceWith: differenceWith_default,
  drop: drop_default,
  dropRight: dropRight_default,
  dropRightWhile: dropRightWhile_default,
  dropWhile: dropWhile_default,
  fill: fill_default,
  findIndex: findIndex_default,
  findLastIndex: findLastIndex_default,
  first: head_default,
  flatten: flatten_default,
  flattenDeep: flattenDeep_default,
  flattenDepth: flattenDepth_default,
  fromPairs: fromPairs_default,
  head: head_default,
  indexOf: indexOf_default,
  initial: initial_default,
  intersection: intersection_default,
  intersectionBy: intersectionBy_default,
  intersectionWith: intersectionWith_default,
  join: join_default,
  last: last_default,
  lastIndexOf: lastIndexOf_default,
  nth: nth_default,
  pull: pull_default,
  pullAll: pullAll_default,
  pullAllBy: pullAllBy_default,
  pullAllWith: pullAllWith_default,
  pullAt: pullAt_default,
  remove: remove_default,
  reverse: reverse_default,
  slice: slice_default,
  sortedIndex: sortedIndex_default,
  sortedIndexBy: sortedIndexBy_default,
  sortedIndexOf: sortedIndexOf_default,
  sortedLastIndex: sortedLastIndex_default,
  sortedLastIndexBy: sortedLastIndexBy_default,
  sortedLastIndexOf: sortedLastIndexOf_default,
  sortedUniq: sortedUniq_default,
  sortedUniqBy: sortedUniqBy_default,
  tail: tail_default,
  take: take_default,
  takeRight: takeRight_default,
  takeRightWhile: takeRightWhile_default,
  takeWhile: takeWhile_default,
  union: union_default,
  unionBy: unionBy_default,
  unionWith: unionWith_default,
  uniq: uniq_default,
  uniqBy: uniqBy_default,
  uniqWith: uniqWith_default,
  unzip: unzip_default,
  unzipWith: unzipWith_default,
  without: without_default,
  xor: xor_default,
  xorBy: xorBy_default,
  xorWith: xorWith_default,
  zip: zip_default,
  zipObject: zipObject_default,
  zipObjectDeep: zipObjectDeep_default,
  zipWith: zipWith_default
};

// node_modules/lodash-es/collection.default.js
var collection_default_default = {
  countBy: countBy_default,
  each: forEach_default,
  eachRight: forEachRight_default,
  every: every_default,
  filter: filter_default,
  find: find_default,
  findLast: findLast_default,
  flatMap: flatMap_default,
  flatMapDeep: flatMapDeep_default,
  flatMapDepth: flatMapDepth_default,
  forEach: forEach_default,
  forEachRight: forEachRight_default,
  groupBy: groupBy_default,
  includes: includes_default,
  invokeMap: invokeMap_default,
  keyBy: keyBy_default,
  map: map_default,
  orderBy: orderBy_default,
  partition: partition_default,
  reduce: reduce_default,
  reduceRight: reduceRight_default,
  reject: reject_default,
  sample: sample_default,
  sampleSize: sampleSize_default,
  shuffle: shuffle_default,
  size: size_default,
  some: some_default,
  sortBy: sortBy_default
};

// node_modules/lodash-es/date.default.js
var date_default_default = {
  now: now_default
};

// node_modules/lodash-es/function.default.js
var function_default_default = {
  after: after_default,
  ary: ary_default,
  before: before_default,
  bind: bind_default,
  bindKey: bindKey_default,
  curry: curry_default,
  curryRight: curryRight_default,
  debounce: debounce_default,
  defer: defer_default,
  delay: delay_default,
  flip: flip_default,
  memoize: memoize_default,
  negate: negate_default,
  once: once_default,
  overArgs: overArgs_default,
  partial: partial_default,
  partialRight: partialRight_default,
  rearg: rearg_default,
  rest: rest_default,
  spread: spread_default,
  throttle: throttle_default,
  unary: unary_default,
  wrap: wrap_default
};

// node_modules/lodash-es/lang.default.js
var lang_default_default = {
  castArray: castArray_default,
  clone: clone_default,
  cloneDeep: cloneDeep_default,
  cloneDeepWith: cloneDeepWith_default,
  cloneWith: cloneWith_default,
  conformsTo: conformsTo_default,
  eq: eq_default,
  gt: gt_default,
  gte: gte_default,
  isArguments: isArguments_default,
  isArray: isArray_default,
  isArrayBuffer: isArrayBuffer_default,
  isArrayLike: isArrayLike_default,
  isArrayLikeObject: isArrayLikeObject_default,
  isBoolean: isBoolean_default,
  isBuffer: isBuffer_default,
  isDate: isDate_default,
  isElement: isElement_default,
  isEmpty: isEmpty_default,
  isEqual: isEqual_default,
  isEqualWith: isEqualWith_default,
  isError: isError_default,
  isFinite: isFinite_default,
  isFunction: isFunction_default,
  isInteger: isInteger_default,
  isLength: isLength_default,
  isMap: isMap_default,
  isMatch: isMatch_default,
  isMatchWith: isMatchWith_default,
  isNaN: isNaN_default,
  isNative: isNative_default,
  isNil: isNil_default,
  isNull: isNull_default,
  isNumber: isNumber_default,
  isObject: isObject_default,
  isObjectLike: isObjectLike_default,
  isPlainObject: isPlainObject_default,
  isRegExp: isRegExp_default,
  isSafeInteger: isSafeInteger_default,
  isSet: isSet_default,
  isString: isString_default,
  isSymbol: isSymbol_default,
  isTypedArray: isTypedArray_default,
  isUndefined: isUndefined_default,
  isWeakMap: isWeakMap_default,
  isWeakSet: isWeakSet_default,
  lt: lt_default,
  lte: lte_default,
  toArray: toArray_default,
  toFinite: toFinite_default,
  toInteger: toInteger_default,
  toLength: toLength_default,
  toNumber: toNumber_default,
  toPlainObject: toPlainObject_default,
  toSafeInteger: toSafeInteger_default,
  toString: toString_default
};

// node_modules/lodash-es/math.default.js
var math_default_default = {
  add: add_default,
  ceil: ceil_default,
  divide: divide_default,
  floor: floor_default,
  max: max_default,
  maxBy: maxBy_default,
  mean: mean_default,
  meanBy: meanBy_default,
  min: min_default,
  minBy: minBy_default,
  multiply: multiply_default,
  round: round_default,
  subtract: subtract_default,
  sum: sum_default,
  sumBy: sumBy_default
};

// node_modules/lodash-es/number.default.js
var number_default_default = {
  clamp: clamp_default,
  inRange: inRange_default,
  random: random_default
};

// node_modules/lodash-es/object.default.js
var object_default_default = {
  assign: assign_default,
  assignIn: assignIn_default,
  assignInWith: assignInWith_default,
  assignWith: assignWith_default,
  at: at_default,
  create: create_default,
  defaults: defaults_default,
  defaultsDeep: defaultsDeep_default,
  entries: toPairs_default,
  entriesIn: toPairsIn_default,
  extend: assignIn_default,
  extendWith: assignInWith_default,
  findKey: findKey_default,
  findLastKey: findLastKey_default,
  forIn: forIn_default,
  forInRight: forInRight_default,
  forOwn: forOwn_default,
  forOwnRight: forOwnRight_default,
  functions: functions_default,
  functionsIn: functionsIn_default,
  get: get_default,
  has: has_default,
  hasIn: hasIn_default,
  invert: invert_default,
  invertBy: invertBy_default,
  invoke: invoke_default,
  keys: keys_default,
  keysIn: keysIn_default,
  mapKeys: mapKeys_default,
  mapValues: mapValues_default,
  merge: merge_default,
  mergeWith: mergeWith_default,
  omit: omit_default,
  omitBy: omitBy_default,
  pick: pick_default,
  pickBy: pickBy_default,
  result: result_default,
  set: set_default,
  setWith: setWith_default,
  toPairs: toPairs_default,
  toPairsIn: toPairsIn_default,
  transform: transform_default,
  unset: unset_default,
  update: update_default,
  updateWith: updateWith_default,
  values: values_default,
  valuesIn: valuesIn_default
};

// node_modules/lodash-es/seq.default.js
var seq_default_default = {
  at: wrapperAt_default,
  chain: chain_default,
  commit: commit_default,
  lodash: wrapperLodash_default,
  next: next_default,
  plant: plant_default,
  reverse: wrapperReverse_default,
  tap: tap_default,
  thru: thru_default,
  toIterator: toIterator_default,
  toJSON: wrapperValue_default,
  value: wrapperValue_default,
  valueOf: wrapperValue_default,
  wrapperChain: wrapperChain_default
};

// node_modules/lodash-es/string.default.js
var string_default_default = {
  camelCase: camelCase_default,
  capitalize: capitalize_default,
  deburr: deburr_default,
  endsWith: endsWith_default,
  escape: escape_default,
  escapeRegExp: escapeRegExp_default,
  kebabCase: kebabCase_default,
  lowerCase: lowerCase_default,
  lowerFirst: lowerFirst_default,
  pad: pad_default,
  padEnd: padEnd_default,
  padStart: padStart_default,
  parseInt: parseInt_default,
  repeat: repeat_default,
  replace: replace_default,
  snakeCase: snakeCase_default,
  split: split_default,
  startCase: startCase_default,
  startsWith: startsWith_default,
  template: template_default,
  templateSettings: templateSettings_default,
  toLower: toLower_default,
  toUpper: toUpper_default,
  trim: trim_default,
  trimEnd: trimEnd_default,
  trimStart: trimStart_default,
  truncate: truncate_default,
  unescape: unescape_default,
  upperCase: upperCase_default,
  upperFirst: upperFirst_default,
  words: words_default
};

// node_modules/lodash-es/util.default.js
var util_default_default = {
  attempt: attempt_default,
  bindAll: bindAll_default,
  cond: cond_default,
  conforms: conforms_default,
  constant: constant_default,
  defaultTo: defaultTo_default,
  flow: flow_default,
  flowRight: flowRight_default,
  identity: identity_default,
  iteratee: iteratee_default,
  matches: matches_default,
  matchesProperty: matchesProperty_default,
  method: method_default,
  methodOf: methodOf_default,
  mixin: mixin_default,
  noop: noop_default,
  nthArg: nthArg_default,
  over: over_default,
  overEvery: overEvery_default,
  overSome: overSome_default,
  property: property_default,
  propertyOf: propertyOf_default,
  range: range_default,
  rangeRight: rangeRight_default,
  stubArray: stubArray_default,
  stubFalse: stubFalse_default,
  stubObject: stubObject_default,
  stubString: stubString_default,
  stubTrue: stubTrue_default,
  times: times_default,
  toPath: toPath_default,
  uniqueId: uniqueId_default
};

// node_modules/lodash-es/_lazyClone.js
function lazyClone() {
  var result2 = new LazyWrapper_default(this.__wrapped__);
  result2.__actions__ = copyArray_default(this.__actions__);
  result2.__dir__ = this.__dir__;
  result2.__filtered__ = this.__filtered__;
  result2.__iteratees__ = copyArray_default(this.__iteratees__);
  result2.__takeCount__ = this.__takeCount__;
  result2.__views__ = copyArray_default(this.__views__);
  return result2;
}
var lazyClone_default = lazyClone;

// node_modules/lodash-es/_lazyReverse.js
function lazyReverse() {
  if (this.__filtered__) {
    var result2 = new LazyWrapper_default(this);
    result2.__dir__ = -1;
    result2.__filtered__ = true;
  } else {
    result2 = this.clone();
    result2.__dir__ *= -1;
  }
  return result2;
}
var lazyReverse_default = lazyReverse;

// node_modules/lodash-es/_getView.js
var nativeMax16 = Math.max;
var nativeMin13 = Math.min;
function getView(start, end, transforms) {
  var index = -1, length = transforms.length;
  while (++index < length) {
    var data = transforms[index], size2 = data.size;
    switch (data.type) {
      case "drop":
        start += size2;
        break;
      case "dropRight":
        end -= size2;
        break;
      case "take":
        end = nativeMin13(end, start + size2);
        break;
      case "takeRight":
        start = nativeMax16(start, end - size2);
        break;
    }
  }
  return { "start": start, "end": end };
}
var getView_default = getView;

// node_modules/lodash-es/_lazyValue.js
var LAZY_FILTER_FLAG = 1;
var LAZY_MAP_FLAG = 2;
var nativeMin14 = Math.min;
function lazyValue() {
  var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray_default(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView_default(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin14(length, this.__takeCount__);
  if (!isArr || !isRight && arrLength == length && takeCount == length) {
    return baseWrapperValue_default(array, this.__actions__);
  }
  var result2 = [];
  outer:
    while (length-- && resIndex < takeCount) {
      index += dir;
      var iterIndex = -1, value = array[index];
      while (++iterIndex < iterLength) {
        var data = iteratees[iterIndex], iteratee2 = data.iteratee, type = data.type, computed2 = iteratee2(value);
        if (type == LAZY_MAP_FLAG) {
          value = computed2;
        } else if (!computed2) {
          if (type == LAZY_FILTER_FLAG) {
            continue outer;
          } else {
            break outer;
          }
        }
      }
      result2[resIndex++] = value;
    }
  return result2;
}
var lazyValue_default = lazyValue;

// node_modules/lodash-es/lodash.default.js
var VERSION = "4.17.21";
var WRAP_BIND_KEY_FLAG7 = 2;
var LAZY_FILTER_FLAG2 = 1;
var LAZY_WHILE_FLAG = 3;
var MAX_ARRAY_LENGTH7 = 4294967295;
var arrayProto6 = Array.prototype;
var objectProto29 = Object.prototype;
var hasOwnProperty25 = objectProto29.hasOwnProperty;
var symIterator2 = Symbol_default ? Symbol_default.iterator : void 0;
var nativeMax17 = Math.max;
var nativeMin15 = Math.min;
var mixin2 = /* @__PURE__ */ function(func) {
  return function(object, source, options) {
    if (options == null) {
      var isObj = isObject_default(source), props = isObj && keys_default(source), methodNames = props && props.length && baseFunctions_default(source, props);
      if (!(methodNames ? methodNames.length : isObj)) {
        options = source;
        source = object;
        object = this;
      }
    }
    return func(object, source, options);
  };
}(mixin_default);
wrapperLodash_default.after = function_default_default.after;
wrapperLodash_default.ary = function_default_default.ary;
wrapperLodash_default.assign = object_default_default.assign;
wrapperLodash_default.assignIn = object_default_default.assignIn;
wrapperLodash_default.assignInWith = object_default_default.assignInWith;
wrapperLodash_default.assignWith = object_default_default.assignWith;
wrapperLodash_default.at = object_default_default.at;
wrapperLodash_default.before = function_default_default.before;
wrapperLodash_default.bind = function_default_default.bind;
wrapperLodash_default.bindAll = util_default_default.bindAll;
wrapperLodash_default.bindKey = function_default_default.bindKey;
wrapperLodash_default.castArray = lang_default_default.castArray;
wrapperLodash_default.chain = seq_default_default.chain;
wrapperLodash_default.chunk = array_default_default.chunk;
wrapperLodash_default.compact = array_default_default.compact;
wrapperLodash_default.concat = array_default_default.concat;
wrapperLodash_default.cond = util_default_default.cond;
wrapperLodash_default.conforms = util_default_default.conforms;
wrapperLodash_default.constant = util_default_default.constant;
wrapperLodash_default.countBy = collection_default_default.countBy;
wrapperLodash_default.create = object_default_default.create;
wrapperLodash_default.curry = function_default_default.curry;
wrapperLodash_default.curryRight = function_default_default.curryRight;
wrapperLodash_default.debounce = function_default_default.debounce;
wrapperLodash_default.defaults = object_default_default.defaults;
wrapperLodash_default.defaultsDeep = object_default_default.defaultsDeep;
wrapperLodash_default.defer = function_default_default.defer;
wrapperLodash_default.delay = function_default_default.delay;
wrapperLodash_default.difference = array_default_default.difference;
wrapperLodash_default.differenceBy = array_default_default.differenceBy;
wrapperLodash_default.differenceWith = array_default_default.differenceWith;
wrapperLodash_default.drop = array_default_default.drop;
wrapperLodash_default.dropRight = array_default_default.dropRight;
wrapperLodash_default.dropRightWhile = array_default_default.dropRightWhile;
wrapperLodash_default.dropWhile = array_default_default.dropWhile;
wrapperLodash_default.fill = array_default_default.fill;
wrapperLodash_default.filter = collection_default_default.filter;
wrapperLodash_default.flatMap = collection_default_default.flatMap;
wrapperLodash_default.flatMapDeep = collection_default_default.flatMapDeep;
wrapperLodash_default.flatMapDepth = collection_default_default.flatMapDepth;
wrapperLodash_default.flatten = array_default_default.flatten;
wrapperLodash_default.flattenDeep = array_default_default.flattenDeep;
wrapperLodash_default.flattenDepth = array_default_default.flattenDepth;
wrapperLodash_default.flip = function_default_default.flip;
wrapperLodash_default.flow = util_default_default.flow;
wrapperLodash_default.flowRight = util_default_default.flowRight;
wrapperLodash_default.fromPairs = array_default_default.fromPairs;
wrapperLodash_default.functions = object_default_default.functions;
wrapperLodash_default.functionsIn = object_default_default.functionsIn;
wrapperLodash_default.groupBy = collection_default_default.groupBy;
wrapperLodash_default.initial = array_default_default.initial;
wrapperLodash_default.intersection = array_default_default.intersection;
wrapperLodash_default.intersectionBy = array_default_default.intersectionBy;
wrapperLodash_default.intersectionWith = array_default_default.intersectionWith;
wrapperLodash_default.invert = object_default_default.invert;
wrapperLodash_default.invertBy = object_default_default.invertBy;
wrapperLodash_default.invokeMap = collection_default_default.invokeMap;
wrapperLodash_default.iteratee = util_default_default.iteratee;
wrapperLodash_default.keyBy = collection_default_default.keyBy;
wrapperLodash_default.keys = keys_default;
wrapperLodash_default.keysIn = object_default_default.keysIn;
wrapperLodash_default.map = collection_default_default.map;
wrapperLodash_default.mapKeys = object_default_default.mapKeys;
wrapperLodash_default.mapValues = object_default_default.mapValues;
wrapperLodash_default.matches = util_default_default.matches;
wrapperLodash_default.matchesProperty = util_default_default.matchesProperty;
wrapperLodash_default.memoize = function_default_default.memoize;
wrapperLodash_default.merge = object_default_default.merge;
wrapperLodash_default.mergeWith = object_default_default.mergeWith;
wrapperLodash_default.method = util_default_default.method;
wrapperLodash_default.methodOf = util_default_default.methodOf;
wrapperLodash_default.mixin = mixin2;
wrapperLodash_default.negate = negate_default;
wrapperLodash_default.nthArg = util_default_default.nthArg;
wrapperLodash_default.omit = object_default_default.omit;
wrapperLodash_default.omitBy = object_default_default.omitBy;
wrapperLodash_default.once = function_default_default.once;
wrapperLodash_default.orderBy = collection_default_default.orderBy;
wrapperLodash_default.over = util_default_default.over;
wrapperLodash_default.overArgs = function_default_default.overArgs;
wrapperLodash_default.overEvery = util_default_default.overEvery;
wrapperLodash_default.overSome = util_default_default.overSome;
wrapperLodash_default.partial = function_default_default.partial;
wrapperLodash_default.partialRight = function_default_default.partialRight;
wrapperLodash_default.partition = collection_default_default.partition;
wrapperLodash_default.pick = object_default_default.pick;
wrapperLodash_default.pickBy = object_default_default.pickBy;
wrapperLodash_default.property = util_default_default.property;
wrapperLodash_default.propertyOf = util_default_default.propertyOf;
wrapperLodash_default.pull = array_default_default.pull;
wrapperLodash_default.pullAll = array_default_default.pullAll;
wrapperLodash_default.pullAllBy = array_default_default.pullAllBy;
wrapperLodash_default.pullAllWith = array_default_default.pullAllWith;
wrapperLodash_default.pullAt = array_default_default.pullAt;
wrapperLodash_default.range = util_default_default.range;
wrapperLodash_default.rangeRight = util_default_default.rangeRight;
wrapperLodash_default.rearg = function_default_default.rearg;
wrapperLodash_default.reject = collection_default_default.reject;
wrapperLodash_default.remove = array_default_default.remove;
wrapperLodash_default.rest = function_default_default.rest;
wrapperLodash_default.reverse = array_default_default.reverse;
wrapperLodash_default.sampleSize = collection_default_default.sampleSize;
wrapperLodash_default.set = object_default_default.set;
wrapperLodash_default.setWith = object_default_default.setWith;
wrapperLodash_default.shuffle = collection_default_default.shuffle;
wrapperLodash_default.slice = array_default_default.slice;
wrapperLodash_default.sortBy = collection_default_default.sortBy;
wrapperLodash_default.sortedUniq = array_default_default.sortedUniq;
wrapperLodash_default.sortedUniqBy = array_default_default.sortedUniqBy;
wrapperLodash_default.split = string_default_default.split;
wrapperLodash_default.spread = function_default_default.spread;
wrapperLodash_default.tail = array_default_default.tail;
wrapperLodash_default.take = array_default_default.take;
wrapperLodash_default.takeRight = array_default_default.takeRight;
wrapperLodash_default.takeRightWhile = array_default_default.takeRightWhile;
wrapperLodash_default.takeWhile = array_default_default.takeWhile;
wrapperLodash_default.tap = seq_default_default.tap;
wrapperLodash_default.throttle = function_default_default.throttle;
wrapperLodash_default.thru = thru_default;
wrapperLodash_default.toArray = lang_default_default.toArray;
wrapperLodash_default.toPairs = object_default_default.toPairs;
wrapperLodash_default.toPairsIn = object_default_default.toPairsIn;
wrapperLodash_default.toPath = util_default_default.toPath;
wrapperLodash_default.toPlainObject = lang_default_default.toPlainObject;
wrapperLodash_default.transform = object_default_default.transform;
wrapperLodash_default.unary = function_default_default.unary;
wrapperLodash_default.union = array_default_default.union;
wrapperLodash_default.unionBy = array_default_default.unionBy;
wrapperLodash_default.unionWith = array_default_default.unionWith;
wrapperLodash_default.uniq = array_default_default.uniq;
wrapperLodash_default.uniqBy = array_default_default.uniqBy;
wrapperLodash_default.uniqWith = array_default_default.uniqWith;
wrapperLodash_default.unset = object_default_default.unset;
wrapperLodash_default.unzip = array_default_default.unzip;
wrapperLodash_default.unzipWith = array_default_default.unzipWith;
wrapperLodash_default.update = object_default_default.update;
wrapperLodash_default.updateWith = object_default_default.updateWith;
wrapperLodash_default.values = object_default_default.values;
wrapperLodash_default.valuesIn = object_default_default.valuesIn;
wrapperLodash_default.without = array_default_default.without;
wrapperLodash_default.words = string_default_default.words;
wrapperLodash_default.wrap = function_default_default.wrap;
wrapperLodash_default.xor = array_default_default.xor;
wrapperLodash_default.xorBy = array_default_default.xorBy;
wrapperLodash_default.xorWith = array_default_default.xorWith;
wrapperLodash_default.zip = array_default_default.zip;
wrapperLodash_default.zipObject = array_default_default.zipObject;
wrapperLodash_default.zipObjectDeep = array_default_default.zipObjectDeep;
wrapperLodash_default.zipWith = array_default_default.zipWith;
wrapperLodash_default.entries = object_default_default.toPairs;
wrapperLodash_default.entriesIn = object_default_default.toPairsIn;
wrapperLodash_default.extend = object_default_default.assignIn;
wrapperLodash_default.extendWith = object_default_default.assignInWith;
mixin2(wrapperLodash_default, wrapperLodash_default);
wrapperLodash_default.add = math_default_default.add;
wrapperLodash_default.attempt = util_default_default.attempt;
wrapperLodash_default.camelCase = string_default_default.camelCase;
wrapperLodash_default.capitalize = string_default_default.capitalize;
wrapperLodash_default.ceil = math_default_default.ceil;
wrapperLodash_default.clamp = number_default_default.clamp;
wrapperLodash_default.clone = lang_default_default.clone;
wrapperLodash_default.cloneDeep = lang_default_default.cloneDeep;
wrapperLodash_default.cloneDeepWith = lang_default_default.cloneDeepWith;
wrapperLodash_default.cloneWith = lang_default_default.cloneWith;
wrapperLodash_default.conformsTo = lang_default_default.conformsTo;
wrapperLodash_default.deburr = string_default_default.deburr;
wrapperLodash_default.defaultTo = util_default_default.defaultTo;
wrapperLodash_default.divide = math_default_default.divide;
wrapperLodash_default.endsWith = string_default_default.endsWith;
wrapperLodash_default.eq = lang_default_default.eq;
wrapperLodash_default.escape = string_default_default.escape;
wrapperLodash_default.escapeRegExp = string_default_default.escapeRegExp;
wrapperLodash_default.every = collection_default_default.every;
wrapperLodash_default.find = collection_default_default.find;
wrapperLodash_default.findIndex = array_default_default.findIndex;
wrapperLodash_default.findKey = object_default_default.findKey;
wrapperLodash_default.findLast = collection_default_default.findLast;
wrapperLodash_default.findLastIndex = array_default_default.findLastIndex;
wrapperLodash_default.findLastKey = object_default_default.findLastKey;
wrapperLodash_default.floor = math_default_default.floor;
wrapperLodash_default.forEach = collection_default_default.forEach;
wrapperLodash_default.forEachRight = collection_default_default.forEachRight;
wrapperLodash_default.forIn = object_default_default.forIn;
wrapperLodash_default.forInRight = object_default_default.forInRight;
wrapperLodash_default.forOwn = object_default_default.forOwn;
wrapperLodash_default.forOwnRight = object_default_default.forOwnRight;
wrapperLodash_default.get = object_default_default.get;
wrapperLodash_default.gt = lang_default_default.gt;
wrapperLodash_default.gte = lang_default_default.gte;
wrapperLodash_default.has = object_default_default.has;
wrapperLodash_default.hasIn = object_default_default.hasIn;
wrapperLodash_default.head = array_default_default.head;
wrapperLodash_default.identity = identity_default;
wrapperLodash_default.includes = collection_default_default.includes;
wrapperLodash_default.indexOf = array_default_default.indexOf;
wrapperLodash_default.inRange = number_default_default.inRange;
wrapperLodash_default.invoke = object_default_default.invoke;
wrapperLodash_default.isArguments = lang_default_default.isArguments;
wrapperLodash_default.isArray = isArray_default;
wrapperLodash_default.isArrayBuffer = lang_default_default.isArrayBuffer;
wrapperLodash_default.isArrayLike = lang_default_default.isArrayLike;
wrapperLodash_default.isArrayLikeObject = lang_default_default.isArrayLikeObject;
wrapperLodash_default.isBoolean = lang_default_default.isBoolean;
wrapperLodash_default.isBuffer = lang_default_default.isBuffer;
wrapperLodash_default.isDate = lang_default_default.isDate;
wrapperLodash_default.isElement = lang_default_default.isElement;
wrapperLodash_default.isEmpty = lang_default_default.isEmpty;
wrapperLodash_default.isEqual = lang_default_default.isEqual;
wrapperLodash_default.isEqualWith = lang_default_default.isEqualWith;
wrapperLodash_default.isError = lang_default_default.isError;
wrapperLodash_default.isFinite = lang_default_default.isFinite;
wrapperLodash_default.isFunction = lang_default_default.isFunction;
wrapperLodash_default.isInteger = lang_default_default.isInteger;
wrapperLodash_default.isLength = lang_default_default.isLength;
wrapperLodash_default.isMap = lang_default_default.isMap;
wrapperLodash_default.isMatch = lang_default_default.isMatch;
wrapperLodash_default.isMatchWith = lang_default_default.isMatchWith;
wrapperLodash_default.isNaN = lang_default_default.isNaN;
wrapperLodash_default.isNative = lang_default_default.isNative;
wrapperLodash_default.isNil = lang_default_default.isNil;
wrapperLodash_default.isNull = lang_default_default.isNull;
wrapperLodash_default.isNumber = lang_default_default.isNumber;
wrapperLodash_default.isObject = isObject_default;
wrapperLodash_default.isObjectLike = lang_default_default.isObjectLike;
wrapperLodash_default.isPlainObject = lang_default_default.isPlainObject;
wrapperLodash_default.isRegExp = lang_default_default.isRegExp;
wrapperLodash_default.isSafeInteger = lang_default_default.isSafeInteger;
wrapperLodash_default.isSet = lang_default_default.isSet;
wrapperLodash_default.isString = lang_default_default.isString;
wrapperLodash_default.isSymbol = lang_default_default.isSymbol;
wrapperLodash_default.isTypedArray = lang_default_default.isTypedArray;
wrapperLodash_default.isUndefined = lang_default_default.isUndefined;
wrapperLodash_default.isWeakMap = lang_default_default.isWeakMap;
wrapperLodash_default.isWeakSet = lang_default_default.isWeakSet;
wrapperLodash_default.join = array_default_default.join;
wrapperLodash_default.kebabCase = string_default_default.kebabCase;
wrapperLodash_default.last = last_default;
wrapperLodash_default.lastIndexOf = array_default_default.lastIndexOf;
wrapperLodash_default.lowerCase = string_default_default.lowerCase;
wrapperLodash_default.lowerFirst = string_default_default.lowerFirst;
wrapperLodash_default.lt = lang_default_default.lt;
wrapperLodash_default.lte = lang_default_default.lte;
wrapperLodash_default.max = math_default_default.max;
wrapperLodash_default.maxBy = math_default_default.maxBy;
wrapperLodash_default.mean = math_default_default.mean;
wrapperLodash_default.meanBy = math_default_default.meanBy;
wrapperLodash_default.min = math_default_default.min;
wrapperLodash_default.minBy = math_default_default.minBy;
wrapperLodash_default.stubArray = util_default_default.stubArray;
wrapperLodash_default.stubFalse = util_default_default.stubFalse;
wrapperLodash_default.stubObject = util_default_default.stubObject;
wrapperLodash_default.stubString = util_default_default.stubString;
wrapperLodash_default.stubTrue = util_default_default.stubTrue;
wrapperLodash_default.multiply = math_default_default.multiply;
wrapperLodash_default.nth = array_default_default.nth;
wrapperLodash_default.noop = util_default_default.noop;
wrapperLodash_default.now = date_default_default.now;
wrapperLodash_default.pad = string_default_default.pad;
wrapperLodash_default.padEnd = string_default_default.padEnd;
wrapperLodash_default.padStart = string_default_default.padStart;
wrapperLodash_default.parseInt = string_default_default.parseInt;
wrapperLodash_default.random = number_default_default.random;
wrapperLodash_default.reduce = collection_default_default.reduce;
wrapperLodash_default.reduceRight = collection_default_default.reduceRight;
wrapperLodash_default.repeat = string_default_default.repeat;
wrapperLodash_default.replace = string_default_default.replace;
wrapperLodash_default.result = object_default_default.result;
wrapperLodash_default.round = math_default_default.round;
wrapperLodash_default.sample = collection_default_default.sample;
wrapperLodash_default.size = collection_default_default.size;
wrapperLodash_default.snakeCase = string_default_default.snakeCase;
wrapperLodash_default.some = collection_default_default.some;
wrapperLodash_default.sortedIndex = array_default_default.sortedIndex;
wrapperLodash_default.sortedIndexBy = array_default_default.sortedIndexBy;
wrapperLodash_default.sortedIndexOf = array_default_default.sortedIndexOf;
wrapperLodash_default.sortedLastIndex = array_default_default.sortedLastIndex;
wrapperLodash_default.sortedLastIndexBy = array_default_default.sortedLastIndexBy;
wrapperLodash_default.sortedLastIndexOf = array_default_default.sortedLastIndexOf;
wrapperLodash_default.startCase = string_default_default.startCase;
wrapperLodash_default.startsWith = string_default_default.startsWith;
wrapperLodash_default.subtract = math_default_default.subtract;
wrapperLodash_default.sum = math_default_default.sum;
wrapperLodash_default.sumBy = math_default_default.sumBy;
wrapperLodash_default.template = string_default_default.template;
wrapperLodash_default.times = util_default_default.times;
wrapperLodash_default.toFinite = lang_default_default.toFinite;
wrapperLodash_default.toInteger = toInteger_default;
wrapperLodash_default.toLength = lang_default_default.toLength;
wrapperLodash_default.toLower = string_default_default.toLower;
wrapperLodash_default.toNumber = lang_default_default.toNumber;
wrapperLodash_default.toSafeInteger = lang_default_default.toSafeInteger;
wrapperLodash_default.toString = lang_default_default.toString;
wrapperLodash_default.toUpper = string_default_default.toUpper;
wrapperLodash_default.trim = string_default_default.trim;
wrapperLodash_default.trimEnd = string_default_default.trimEnd;
wrapperLodash_default.trimStart = string_default_default.trimStart;
wrapperLodash_default.truncate = string_default_default.truncate;
wrapperLodash_default.unescape = string_default_default.unescape;
wrapperLodash_default.uniqueId = util_default_default.uniqueId;
wrapperLodash_default.upperCase = string_default_default.upperCase;
wrapperLodash_default.upperFirst = string_default_default.upperFirst;
wrapperLodash_default.each = collection_default_default.forEach;
wrapperLodash_default.eachRight = collection_default_default.forEachRight;
wrapperLodash_default.first = array_default_default.head;
mixin2(wrapperLodash_default, function() {
  var source = {};
  baseForOwn_default(wrapperLodash_default, function(func, methodName) {
    if (!hasOwnProperty25.call(wrapperLodash_default.prototype, methodName)) {
      source[methodName] = func;
    }
  });
  return source;
}(), { "chain": false });
wrapperLodash_default.VERSION = VERSION;
(wrapperLodash_default.templateSettings = string_default_default.templateSettings).imports._ = wrapperLodash_default;
arrayEach_default(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(methodName) {
  wrapperLodash_default[methodName].placeholder = wrapperLodash_default;
});
arrayEach_default(["drop", "take"], function(methodName, index) {
  LazyWrapper_default.prototype[methodName] = function(n) {
    n = n === void 0 ? 1 : nativeMax17(toInteger_default(n), 0);
    var result2 = this.__filtered__ && !index ? new LazyWrapper_default(this) : this.clone();
    if (result2.__filtered__) {
      result2.__takeCount__ = nativeMin15(n, result2.__takeCount__);
    } else {
      result2.__views__.push({
        "size": nativeMin15(n, MAX_ARRAY_LENGTH7),
        "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
      });
    }
    return result2;
  };
  LazyWrapper_default.prototype[methodName + "Right"] = function(n) {
    return this.reverse()[methodName](n).reverse();
  };
});
arrayEach_default(["filter", "map", "takeWhile"], function(methodName, index) {
  var type = index + 1, isFilter = type == LAZY_FILTER_FLAG2 || type == LAZY_WHILE_FLAG;
  LazyWrapper_default.prototype[methodName] = function(iteratee2) {
    var result2 = this.clone();
    result2.__iteratees__.push({
      "iteratee": baseIteratee_default(iteratee2, 3),
      "type": type
    });
    result2.__filtered__ = result2.__filtered__ || isFilter;
    return result2;
  };
});
arrayEach_default(["head", "last"], function(methodName, index) {
  var takeName = "take" + (index ? "Right" : "");
  LazyWrapper_default.prototype[methodName] = function() {
    return this[takeName](1).value()[0];
  };
});
arrayEach_default(["initial", "tail"], function(methodName, index) {
  var dropName = "drop" + (index ? "" : "Right");
  LazyWrapper_default.prototype[methodName] = function() {
    return this.__filtered__ ? new LazyWrapper_default(this) : this[dropName](1);
  };
});
LazyWrapper_default.prototype.compact = function() {
  return this.filter(identity_default);
};
LazyWrapper_default.prototype.find = function(predicate) {
  return this.filter(predicate).head();
};
LazyWrapper_default.prototype.findLast = function(predicate) {
  return this.reverse().find(predicate);
};
LazyWrapper_default.prototype.invokeMap = baseRest_default(function(path, args) {
  if (typeof path == "function") {
    return new LazyWrapper_default(this);
  }
  return this.map(function(value) {
    return baseInvoke_default(value, path, args);
  });
});
LazyWrapper_default.prototype.reject = function(predicate) {
  return this.filter(negate_default(baseIteratee_default(predicate)));
};
LazyWrapper_default.prototype.slice = function(start, end) {
  start = toInteger_default(start);
  var result2 = this;
  if (result2.__filtered__ && (start > 0 || end < 0)) {
    return new LazyWrapper_default(result2);
  }
  if (start < 0) {
    result2 = result2.takeRight(-start);
  } else if (start) {
    result2 = result2.drop(start);
  }
  if (end !== void 0) {
    end = toInteger_default(end);
    result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start);
  }
  return result2;
};
LazyWrapper_default.prototype.takeRightWhile = function(predicate) {
  return this.reverse().takeWhile(predicate).reverse();
};
LazyWrapper_default.prototype.toArray = function() {
  return this.take(MAX_ARRAY_LENGTH7);
};
baseForOwn_default(LazyWrapper_default.prototype, function(func, methodName) {
  var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = wrapperLodash_default[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
  if (!lodashFunc) {
    return;
  }
  wrapperLodash_default.prototype[methodName] = function() {
    var value = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper_default, iteratee2 = args[0], useLazy = isLazy || isArray_default(value);
    var interceptor = function(value2) {
      var result3 = lodashFunc.apply(wrapperLodash_default, arrayPush_default([value2], args));
      return isTaker && chainAll ? result3[0] : result3;
    };
    if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
      isLazy = useLazy = false;
    }
    var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
    if (!retUnwrapped && useLazy) {
      value = onlyLazy ? value : new LazyWrapper_default(this);
      var result2 = func.apply(value, args);
      result2.__actions__.push({ "func": thru_default, "args": [interceptor], "thisArg": void 0 });
      return new LodashWrapper_default(result2, chainAll);
    }
    if (isUnwrapped && onlyLazy) {
      return func.apply(this, args);
    }
    result2 = this.thru(interceptor);
    return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
  };
});
arrayEach_default(["pop", "push", "shift", "sort", "splice", "unshift"], function(methodName) {
  var func = arrayProto6[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
  wrapperLodash_default.prototype[methodName] = function() {
    var args = arguments;
    if (retUnwrapped && !this.__chain__) {
      var value = this.value();
      return func.apply(isArray_default(value) ? value : [], args);
    }
    return this[chainName](function(value2) {
      return func.apply(isArray_default(value2) ? value2 : [], args);
    });
  };
});
baseForOwn_default(LazyWrapper_default.prototype, function(func, methodName) {
  var lodashFunc = wrapperLodash_default[methodName];
  if (lodashFunc) {
    var key = lodashFunc.name + "";
    if (!hasOwnProperty25.call(realNames_default, key)) {
      realNames_default[key] = [];
    }
    realNames_default[key].push({ "name": methodName, "func": lodashFunc });
  }
});
realNames_default[createHybrid_default(void 0, WRAP_BIND_KEY_FLAG7).name] = [{
  "name": "wrapper",
  "func": void 0
}];
LazyWrapper_default.prototype.clone = lazyClone_default;
LazyWrapper_default.prototype.reverse = lazyReverse_default;
LazyWrapper_default.prototype.value = lazyValue_default;
wrapperLodash_default.prototype.at = seq_default_default.at;
wrapperLodash_default.prototype.chain = seq_default_default.wrapperChain;
wrapperLodash_default.prototype.commit = seq_default_default.commit;
wrapperLodash_default.prototype.next = seq_default_default.next;
wrapperLodash_default.prototype.plant = seq_default_default.plant;
wrapperLodash_default.prototype.reverse = seq_default_default.reverse;
wrapperLodash_default.prototype.toJSON = wrapperLodash_default.prototype.valueOf = wrapperLodash_default.prototype.value = seq_default_default.value;
wrapperLodash_default.prototype.first = wrapperLodash_default.prototype.head;
if (symIterator2) {
  wrapperLodash_default.prototype[symIterator2] = seq_default_default.toIterator;
}

// node_modules/v-network-graph/lib/index.js
var Io = Object.defineProperty;
var Lo = Object.defineProperties;
var $o = Object.getOwnPropertyDescriptors;
var on = Object.getOwnPropertySymbols;
var Ao = Object.prototype.hasOwnProperty;
var Zo = Object.prototype.propertyIsEnumerable;
var ie = Math.pow;
var sn = (n, e, t) => e in n ? Io(n, e, { enumerable: true, configurable: true, writable: true, value: t }) : n[e] = t;
var oe = (n, e) => {
  for (var t in e || (e = {}))
    Ao.call(e, t) && sn(n, t, e[t]);
  if (on)
    for (var t of on(e))
      Zo.call(e, t) && sn(n, t, e[t]);
  return n;
};
var Be = (n, e) => Lo(n, $o(e));
var pe = (n, e, t) => new Promise((o, i) => {
  var s = (u) => {
    try {
      c(t.next(u));
    } catch (h) {
      i(h);
    }
  }, a = (u) => {
    try {
      c(t.throw(u));
    } catch (h) {
      i(h);
    }
  }, c = (u) => u.done ? o(u.value) : Promise.resolve(u.value).then(s, a);
  c((t = t.apply(n, e)).next());
});
var Uo = [
  "paths",
  "node-labels",
  "nodes",
  "focusring",
  "edge-labels",
  "edges",
  "base",
  "grid",
  "background",
  "root"
];
function xe(n) {
  return isReactive(n) ? n : reactive(n);
}
function q(n, e = "Parameter") {
  if (n == null)
    throw new Error(`${e} is null`);
  return n;
}
var $n = Symbol("containers");
function Fo(n) {
  provide($n, n);
}
function Nt() {
  const n = q(inject($n), "containers");
  return {
    container: n.container,
    svg: n.svg,
    viewport: n.viewport,
    svgPanZoom: n.svgPanZoom
  };
}
var _ = class {
  static value(e, t) {
    return e instanceof Function ? e(t) : e;
  }
  static values(e, t) {
    return Object.values(e).filter((o) => o instanceof Function).length === 0 ? e : Object.fromEntries(
      Object.entries(e).map(([o, i]) => [o, i instanceof Function ? i(t) : i])
    );
  }
};
var D = ((n) => (n.CENTER = "center", n.NORTH = "north", n.NORTH_EAST = "north-east", n.EAST = "east", n.SOUTH_EAST = "south-east", n.SOUTH = "south", n.SOUTH_WEST = "south-west", n.WEST = "west", n.NORTH_WEST = "north-west", n))(D || {});
function bt(n) {
  const e = {};
  return Object.assign(e, n(e));
}
function qr(n) {
  return n;
}
function Xr(n) {
  return n;
}
function ln(n, e, t) {
  const o = _.values(e.normal, n);
  return o.type == "circle" ? {
    width: o.radius * 2 * t,
    height: o.radius * 2 * t
  } : {
    width: o.width * t,
    height: o.height * t
  };
}
function qo(n, e, t, o) {
  const s = Math.abs(n.x - t.x) < e.width / 2 + o.width / 2, c = Math.abs(n.y - t.y) < e.height / 2 + o.height / 2;
  return s && c;
}
function Ke(n, e) {
  let t = 0;
  return e === 1 || n === void 0 || n === "none" ? t = n != null ? n : 0 : typeof n == "string" ? t = n.split(/\s+/).map((o) => parseInt(o) * e).filter((o) => !isNaN(o)).join(" ") : t = n * e, t && t !== "0" ? t : void 0;
}
function rt(n) {
  let e = 0;
  if (n === void 0 || n === "none")
    e = 0;
  else if (typeof n == "string") {
    const t = n.split(/\s+/).map((o) => parseInt(o)).filter((o) => !isNaN(o));
    t.length % 2 === 0 ? e = t.reduce((o, i) => o + i, 0) : e = t.reduce((o, i) => o + i, 0) * 2;
  } else
    e = n * 2;
  return e;
}
var cn = 20;
var An = class {
  activate(e) {
    const { nodePositions: t, nodes: o, configs: i, emitter: s, scale: a, svgPanZoom: c } = e, u = (r) => {
      for (const [l, d] of Object.entries(r)) {
        const b = this.getOrCreateNodePosition(t, l);
        this.setNodePosition(b, d);
      }
    }, h = (r) => {
      const l = r.filter((k) => !(k in t.value)), d = c.getViewArea(), b = a.value;
      for (const k of l) {
        const g = o.value[k], v = ln(g, i.node, b), w = oe({}, d.center);
        for (; ; ) {
          let m = false;
          for (const [p, y] of Object.entries(t.value)) {
            if (k === p)
              continue;
            const x = o.value[p];
            if (!x)
              continue;
            const z = ln(x, i.node, b);
            if (m = qo(w, v, y, z), m)
              break;
          }
          if (m)
            w.x += v.width + cn * b, w.x + v.width / 2 > d.box.right && (w.x = d.center.x, w.y += v.height + cn * b);
          else
            break;
        }
        const E = this.getOrCreateNodePosition(t, k);
        this.setNodePosition(E, w);
      }
    };
    h(Object.keys(o.value));
    const f = watch(
      () => isEqual_default(new Set(Object.keys(o.value)), new Set(Object.keys(t.value))),
      (r) => {
        r || h(Object.keys(o.value));
      }
    );
    s.on("node:dragstart", u), s.on("node:pointermove", u), s.on("node:dragend", u), this.onDeactivate = () => {
      f(), s.off("node:dragstart", u), s.off("node:pointermove", u), s.off("node:dragend", u);
    };
  }
  deactivate() {
    this.onDeactivate && this.onDeactivate();
  }
  setNodePosition(e, t) {
    e.value.x = round_default(t.x, 3), e.value.y = round_default(t.y, 3);
  }
  getOrCreateNodePosition(e, t) {
    const o = toRef(e.value, t);
    return o.value || (o.value = { x: 0, y: 0 }), o;
  }
};
function Zn() {
  return {
    view: {
      scalingObjects: false,
      panEnabled: true,
      zoomEnabled: true,
      minZoomLevel: 0.1,
      maxZoomLevel: 64,
      doubleClickZoomEnabled: true,
      mouseWheelZoomEnabled: true,
      boxSelectionEnabled: false,
      autoPanAndZoomOnLoad: "center-content",
      fitContentMargin: "8%",
      autoPanOnResize: true,
      layoutHandler: new An(),
      onSvgPanZoomInitialized: void 0,
      grid: {
        visible: false,
        interval: 10,
        thickIncrements: 5,
        line: {
          color: "#e0e0e0",
          width: 1,
          dasharray: 1
        },
        thick: {
          color: "#cccccc",
          width: 1,
          dasharray: 0
        }
      },
      selection: {
        box: {
          color: "#0000ff20",
          strokeWidth: 1,
          strokeColor: "#aaaaff",
          strokeDasharray: 0
        },
        detector: (n) => {
          const e = /Mac OS/.test(navigator.userAgent) ? n.metaKey : n.ctrlKey;
          return n.type === "keydown" ? e : !e;
        }
      },
      builtInLayerOrder: [],
      onBeforeInitialDisplay: void 0
    },
    node: bt((n) => ({
      normal: {
        type: "circle",
        radius: 16,
        // for rect -->
        width: 32,
        height: 32,
        borderRadius: 4,
        // <-- for rect
        color: "#4466cc",
        strokeWidth: 0,
        strokeColor: "#000000",
        strokeDasharray: 0
      },
      hover: {
        type: (e) => _.value(n.normal.type, e),
        radius: (e) => {
          var t;
          return ((t = _.value(n.normal.radius, e)) != null ? t : 0) + 2;
        },
        width: (e) => {
          var t;
          return ((t = _.value(n.normal.width, e)) != null ? t : 0) + 2;
        },
        height: (e) => {
          var t;
          return ((t = _.value(n.normal.height, e)) != null ? t : 0) + 2;
        },
        borderRadius: (e) => {
          var t;
          return (t = _.value(n.normal.borderRadius, e)) != null ? t : 0;
        },
        strokeWidth: (e) => _.value(n.normal.strokeWidth, e),
        strokeColor: (e) => _.value(n.normal.strokeColor, e),
        strokeDasharray: (e) => _.value(n.normal.strokeDasharray, e),
        color: "#3355bb"
      },
      selected: void 0,
      draggable: true,
      selectable: false,
      label: {
        visible: true,
        fontFamily: void 0,
        fontSize: 11,
        lineHeight: 1.1,
        color: "#000000",
        background: void 0,
        // background: {
        //   visible: true,
        //   color: "#ffffff",
        //   padding: {
        //     vertical: 1,
        //     horizontal: 4,
        //   },
        //   borderRadius: 2
        // },
        margin: 4,
        direction: D.SOUTH,
        directionAutoAdjustment: false,
        text: "name",
        handleNodeEvents: true
      },
      focusring: {
        visible: true,
        width: 4,
        padding: 3,
        color: "#eebb00"
      },
      zOrder: {
        enabled: false,
        zIndex: 0,
        bringToFrontOnHover: true,
        bringToFrontOnSelected: true
      },
      transition: void 0
    })),
    edge: bt((n) => ({
      normal: {
        width: 2,
        color: "#4466cc",
        dasharray: 0,
        linecap: "butt",
        animate: false,
        animationSpeed: 50
      },
      hover: {
        width: (e) => _.value(n.normal.width, e) + 1,
        color: "#3355bb",
        dasharray: (e) => _.value(n.normal.dasharray, e),
        linecap: (e) => _.value(n.normal.linecap, e),
        animate: (e) => _.value(n.normal.animate, e),
        animationSpeed: (e) => _.value(n.normal.animationSpeed, e)
      },
      selected: {
        width: (e) => _.value(n.normal.width, e) + 1,
        color: "#dd8800",
        dasharray: (e) => {
          const t = _.value(n.normal.width, e);
          return `${t * 1.5} ${t * 2}`;
        },
        linecap: (e) => _.value(n.normal.linecap, e),
        animate: (e) => _.value(n.normal.animate, e),
        animationSpeed: (e) => _.value(n.normal.animationSpeed, e)
      },
      selectable: false,
      gap: 3,
      type: "straight",
      marker: {
        source: {
          type: "none",
          width: 5,
          height: 5,
          margin: -1,
          offset: 0,
          units: "strokeWidth",
          color: null
        },
        target: {
          type: "none",
          width: 5,
          height: 5,
          margin: -1,
          offset: 0,
          units: "strokeWidth",
          color: null
        }
      },
      margin: null,
      summarize: (e, t) => t.edge.type == "curve" ? false : null,
      summarized: {
        label: {
          fontSize: 10,
          lineHeight: 1,
          color: "#4466cc"
        },
        shape: {
          type: "rect",
          // for circle -->
          radius: 6,
          // <-- for circle
          width: 12,
          height: 12,
          borderRadius: 3,
          color: "#ffffff",
          strokeWidth: 1,
          strokeColor: "#4466cc",
          strokeDasharray: void 0
        },
        stroke: {
          width: 5,
          color: "#4466cc",
          dasharray: void 0,
          linecap: void 0,
          animate: false,
          animationSpeed: 50
        }
      },
      selfLoop: {
        radius: 12,
        isClockwise: true,
        offset: 10,
        angle: 270
      },
      keepOrder: "clock",
      label: {
        fontFamily: void 0,
        fontSize: 11,
        lineHeight: 1.1,
        color: "#000000",
        background: void 0,
        // background: {
        //   visible: true,
        //   color: "#ffffff",
        //   padding: {
        //     vertical: 1,
        //     horizontal: 4,
        //   },
        //   borderRadius: 2
        // },
        margin: 4,
        padding: 4
      },
      zOrder: {
        enabled: false,
        zIndex: 0,
        bringToFrontOnHover: true,
        bringToFrontOnSelected: true
      }
    })),
    path: bt((n) => ({
      visible: false,
      clickable: false,
      hoverable: false,
      curveInNode: false,
      end: "centerOfNode",
      margin: 0,
      // @Deprecated
      path: reactive({
        width: 6,
        color: (e) => {
          const t = [
            "#d5000088",
            "#c5116288",
            "#aa00ff88",
            "#6200ea88",
            "#304ffe88",
            "#2962ff88",
            "#0091ea88",
            "#00b8d488",
            "#00bfa588",
            "#00c85388",
            "#64dd1788",
            "#aeea0088",
            "#ffd60088",
            "#ffab0088",
            "#ff6d0088",
            "#dd2c0088"
          ], o = e.edges.map(
            (i) => i.split("").reduce((s, a) => (s = (s << 5) - s + a.charCodeAt(0), s & s), 0)
          ).reduce((i, s) => i + s, 0);
          return t[Math.abs(o) % t.length];
        },
        dasharray: void 0,
        linecap: "round",
        linejoin: "round",
        animate: false,
        animationSpeed: 50
      }),
      normal: {
        width: (e) => _.value(n.path.width, e),
        color: (e) => _.value(n.path.color, e),
        dasharray: (e) => _.value(n.path.dasharray, e),
        linecap: (e) => _.value(n.path.linecap, e),
        linejoin: (e) => _.value(n.path.linejoin, e),
        animate: (e) => _.value(n.path.animate, e),
        animationSpeed: (e) => _.value(n.path.animationSpeed, e)
      },
      hover: {
        width: (e) => _.value(n.normal.width, e) + 2,
        color: (e) => _.value(n.normal.color, e),
        dasharray: (e) => _.value(n.normal.dasharray, e),
        linecap: (e) => _.value(n.normal.linecap, e),
        linejoin: (e) => _.value(n.normal.linejoin, e),
        animate: (e) => _.value(n.normal.animate, e),
        animationSpeed: (e) => _.value(n.normal.animationSpeed, e)
      },
      selected: {
        width: (e) => _.value(n.normal.width, e) + 2,
        color: (e) => _.value(n.normal.color, e),
        dasharray: "6 12",
        linecap: (e) => _.value(n.normal.linecap, e),
        linejoin: (e) => _.value(n.normal.linejoin, e),
        animate: (e) => _.value(n.normal.animate, e),
        animationSpeed: (e) => _.value(n.normal.animationSpeed, e)
      },
      selectable: false,
      zOrder: {
        enabled: false,
        zIndex: 0,
        bringToFrontOnHover: true,
        bringToFrontOnSelected: true
      },
      transition: void 0
    }))
  };
}
function Gr(n) {
  const e = Zn();
  return n && merge_default(e, n), e;
}
var Dn = Symbol("style");
function Xo(n, e) {
  return isPlainObject_default(n) ? merge_default(n, e) : e;
}
function Go(n) {
  const e = reactive(Zn()), t = Object.keys(e);
  for (const o of t)
    watch(() => n.value[o], () => {
      mergeWith_default(e[o], n.value[o] || {}, Xo);
    }, { immediate: true, deep: true });
  return provide(Dn, e), e;
}
function at2(n) {
  return q(inject(Dn), `Configs(${n})`)[n];
}
function Ko() {
  return at2("view");
}
function lt2() {
  return at2("node");
}
function ct() {
  return at2("edge");
}
function Nn() {
  return at2("path");
}
var Yo = 1;
function Qo() {
  return Yo++;
}
function le(n) {
  return Object.entries(n);
}
function et(n, e) {
  const t = new Set(Object.keys(n));
  le(e).forEach(([o, i]) => {
    isEqual_default(n[o], i) || (n[o] = i), t.delete(o);
  }), t.forEach((o) => delete n[o]);
}
function Jo(n) {
  return n instanceof Promise || n && typeof n.then == "function";
}
function ei(n, e, t) {
  const o = xe({
    edgeLayoutPoints: {},
    edgeGroups: {},
    summarizedEdges: {}
  });
  return watchEffect(() => {
    const { edgeLayoutPoints: i, edgeGroups: s } = ni(
      t,
      n.value,
      e.value
    );
    et(o.edgeLayoutPoints, i), et(o.edgeGroups, s);
  }), watchEffect(() => {
    const i = {};
    for (const [s, { edges: a, groupWidth: c }] of Object.entries(o.edgeGroups)) {
      let u = false;
      if (c == 0)
        u = false;
      else if (t.edge.summarize instanceof Function) {
        const h = t.edge.summarize(a, t);
        h === null ? u = un(n.value, a, t, c) : u = h;
      } else
        t.edge.summarize ? u = un(n.value, a, t, c) : u = false;
      o.edgeGroups[s].summarize = u, u && Object.keys(a).forEach((h) => i[h] = true);
    }
    et(o.summarizedEdges, i);
  }), o;
}
function ti(n, e, t, o, i, s) {
  return n ? e ? dn(n.edge, t, o, i, 0, 0, s) : dn(
    n.edge,
    t,
    o,
    i,
    n.groupWidth,
    n.pointInGroup,
    s
  ) : { p1: { x: 0, y: 0 }, p2: { x: 0, y: 0 } };
}
function ni(n, e, t) {
  const o = {}, i = {}, s = {};
  for (const [c, u] of Object.entries(t)) {
    if (!(u.source in e && u.target in e))
      continue;
    const h = [u.source, u.target].sort().join("<=>"), f = s[h] || {};
    f[c] = u, s[h] = f;
  }
  const a = n.edge.gap instanceof Function ? n.edge.gap : (c, u) => n.edge.gap;
  for (const [c, u] of Object.entries(s)) {
    const h = Object.keys(u).length;
    if (h == 0)
      continue;
    const f = a(u, n), [r, l] = Object.entries(u)[0];
    if (h === 1)
      o[r] = { edge: l, pointInGroup: 0, groupWidth: 0 }, i[c] = { edges: u, groupWidth: 0, summarize: false };
    else {
      let d = 0;
      const b = Object.entries(u).map(([v, w]) => {
        let E = _.value(n.edge.normal.width, w);
        return isNaN(+E) && (console.warn(
          "[v-network-graph] Edge width is invalid value. id=[%s] value=[%s]",
          v,
          E
        ), E = 1), E / 2;
      }), k = Object.entries(u).map(([v, w], E) => (E > 0 && (d += b[E - 1] + f + b[E]), [v, w, d])), g = d;
      k.forEach(([v, w, E]) => {
        o[v] = { edge: w, pointInGroup: E, groupWidth: g };
      }), i[c] = { edges: u, groupWidth: g, summarize: false };
    }
  }
  return { edgeLayoutPoints: o, edgeGroups: i };
}
function un(n, e, t, o) {
  if (Object.entries(e).length === 1)
    return false;
  const s = Math.min(
    ...Object.values(e).flatMap((a) => [n[a.source], n[a.target]]).filter((a) => a).map((a) => {
      const c = _.values(t.node.normal, a);
      return c.type === "circle" ? c.radius * 2 : Math.min(c.width, c.height);
    })
  );
  return o > s;
}
function dn(n, e, t, o, i, s, a) {
  var r, l, d, b, k, g, v, w;
  let c, u, h, f;
  return n.source < n.target ? [c, u, h, f] = fn(
    (r = e == null ? void 0 : e.x) != null ? r : 0,
    (l = e == null ? void 0 : e.y) != null ? l : 0,
    (d = t == null ? void 0 : t.x) != null ? d : 0,
    (b = t == null ? void 0 : t.y) != null ? b : 0,
    o,
    i,
    s,
    a
  ) : [h, f, c, u] = fn(
    (k = t == null ? void 0 : t.x) != null ? k : 0,
    (g = t == null ? void 0 : t.y) != null ? g : 0,
    (v = e == null ? void 0 : e.x) != null ? v : 0,
    (w = e == null ? void 0 : e.y) != null ? w : 0,
    o,
    i,
    s,
    a
  ), { p1: { x: c, y: u }, p2: { x: h, y: f } };
}
function fn(n, e, t, o, i, s, a, c) {
  const u = t - n, h = o - e;
  let f = (s / 2 - a) * i;
  if (f !== 0 && c !== "clock") {
    const r = Math.atan2(o - e, t - n);
    if (c === "vertical") {
      const l = Math.PI / 2;
      (r < -l || r >= l) && (f *= -1);
    } else
      c === "horizontal" && r < 0 && (f *= -1);
  }
  if (u === 0) {
    const r = h < 0 ? -1 : 1;
    return [n + f * r, e, t + f * r, o];
  } else if (h === 0) {
    const r = u < 0 ? 1 : -1;
    return [n, e + f * r, t, o + f * r];
  } else {
    const l = -1 / (h / u);
    h < 0 && (f = -f);
    const d = f / Math.sqrt(1 + Math.pow(l, 2));
    return [n + d, e + d * l, t + d, o + d * l];
  }
}
function jn(n, e, t) {
  return t || (t = { x: 0, y: 0 }), t.x = n.x + e.x, t.y = n.y + e.y, t;
}
function jt(n, e, t) {
  return t || (t = { x: 0, y: 0 }), t.x = n.x - e.x, t.y = n.y - e.y, t;
}
function Bn(n, e, t) {
  return t || (t = { x: 0, y: 0 }), t.x = n.x * e.x, t.y = n.y * e.y, t;
}
function Rn(n, e, t) {
  return t || (t = { x: 0, y: 0 }), t.x = n.x * e, t.y = n.y * e, t;
}
function Bt(n, e, t) {
  return t || (t = { x: 0, y: 0 }), t.x = n.x / e.x, t.y = n.y / e.y, t;
}
function Vn(n, e) {
  return n.x * e.x + n.y * e.y;
}
function Wn(n, e) {
  return n.x * e.y - n.y * e.x;
}
function Rt(n) {
  return n.x * n.x + n.y * n.y;
}
function Vt(n) {
  return Math.sqrt(Rt(n));
}
function Wt(n, e) {
  const t = n.x - e.x, o = n.y - e.y;
  return t * t + o * o;
}
function Hn(n, e) {
  return Math.sqrt(Wt(n, e));
}
function Un(n, e) {
  e || (e = { x: 0, y: 0 });
  const t = Vt(n);
  return t === 0 ? (e.x = 1, e.y = 0) : Bt(n, { x: t, y: t }, e), e;
}
function nt(n, e, t) {
  t || (t = { x: 0, y: 0 });
  const o = n.x * Math.cos(e) - n.y * Math.sin(e), i = n.x * Math.sin(e) + n.y * Math.cos(e);
  return t.x = o, t.y = i, t;
}
var oi = 180 / Math.PI;
function ii(n) {
  return n * oi;
}
function Ht(n) {
  return Math.atan2(n.y, n.x);
}
function Ut(n) {
  return ii(Ht(n));
}
var si = Object.freeze(Object.defineProperty({
  __proto__: null,
  add: jn,
  angle: Ht,
  angleDegree: Ut,
  cross: Wn,
  distance: Hn,
  distanceSquared: Wt,
  divide: Bt,
  dot: Vn,
  length: Vt,
  lengthSquared: Rt,
  multiply: Bn,
  multiplyScalar: Rn,
  normalize: Un,
  rotate: nt,
  subtract: jt
}, Symbol.toStringTag, { value: "Module" }));
var R = class _R {
  static fromArray(e) {
    return new _R(e[0] || 0, e[1] || 0);
  }
  static fromObject(e) {
    return new _R(e.x, e.y);
  }
  constructor(e, t) {
    this.x = e, this.y = t;
  }
  // instance methods
  add(e) {
    return jn(this, e, this);
  }
  subtract(e) {
    return jt(this, e, this);
  }
  multiply(e) {
    return Bn(this, e, this);
  }
  multiplyScalar(e) {
    return Rn(this, e, this);
  }
  divide(e) {
    return Bt(this, e, this);
  }
  dot(e) {
    return Vn(this, e);
  }
  cross(e) {
    return Wn(this, e);
  }
  lengthSquared() {
    return Rt(this);
  }
  length() {
    return Vt(this);
  }
  distanceSquared(e) {
    return Wt(this, e);
  }
  distance(e) {
    return Hn(this, e);
  }
  normalize() {
    return Un(this, this);
  }
  angle() {
    return Ht(this);
  }
  angleDegree() {
    return Ut(this);
  }
  rotate(e) {
    return nt(this, e, this);
  }
  isEqualTo(e) {
    return this.x === e.x && this.y === e.y;
  }
  clone() {
    return new _R(this.x, this.y);
  }
  toObject() {
    return { x: this.x, y: this.y };
  }
  toArray() {
    return [this.x, this.y];
  }
};
var J = oe({
  Vector2D: R
}, si);
var Y = class _Y {
  constructor(e, t, o) {
    this.source = e, this.target = t, this.v = o;
  }
  static fromLinePosition(e) {
    const t = R.fromObject(e.p1), o = R.fromObject(e.p2);
    return new _Y(t, o, De(t, o));
  }
  static fromPositions(e, t) {
    const o = R.fromObject(e), i = R.fromObject(t);
    return new _Y(o, i, De(o, i));
  }
  static fromVectors(e, t) {
    return new _Y(e, t, De(e, t));
  }
};
function De(n, e) {
  return e.clone().subtract(n);
}
function ri(n) {
  return [R.fromObject(n.p1), R.fromObject(n.p2)];
}
function ai(n) {
  return new R((n.p1.x + n.p2.x) / 2, (n.p1.y + n.p2.y) / 2);
}
function ot(n, e) {
  return { p1: n, p2: e };
}
function Tt(n, e, t) {
  const o = Y.fromLinePosition(n);
  return li(o, e, t);
}
function li(n, e, t) {
  const o = n.v.clone().normalize(), i = n.source.clone().add(o.clone().multiplyScalar(e)), s = n.target.clone().subtract(o.clone().multiplyScalar(t));
  let a = i.toObject(), c = s.toObject();
  const u = De(i, s);
  if (n.v.angle() * u.angle() < 0) {
    const h = new R((a.x + c.x) / 2, (a.y + c.y) / 2), f = h.clone().add(o.multiplyScalar(0.5));
    a = h.toObject(), c = f.toObject();
  }
  return { p1: a, p2: c };
}
function ci(n) {
  return { p1: n.p2, p2: n.p1 };
}
function Ve(n) {
  const e = n.v.clone().normalize().rotate(Math.PI / 2);
  return Y.fromVectors(n.target, n.target.clone().add(e));
}
function Ft(n, e) {
  const t = e.v.clone().normalize(), o = e.source, i = J.subtract(n, o), s = t.dot(i);
  return o.clone().add(t.multiplyScalar(s));
}
function ut(n, e, t, o) {
  if (!(J.lengthSquared(J.subtract(e, t)) - o * o <= Math.pow(1, -10)))
    return null;
  const a = Y.fromVectors(n, e), c = Ft(t, a), u = J.length(J.subtract(c, t));
  if (o < u)
    return null;
  if (o === u)
    return c;
  const h = Math.sqrt(ie(o, 2) - ie(u, 2)), f = a.v.normalize().multiplyScalar(h);
  return c.subtract(f);
}
function ui(n, e, t, o, i) {
  if (!(J.lengthSquared(J.subtract(e, t)) - o * o <= Math.pow(1, -10)))
    return null;
  const c = Y.fromVectors(n, e), u = Ft(t, c), h = J.length(J.subtract(u, t));
  if (o < h)
    return null;
  if (o === h)
    return u;
  const f = Math.sqrt(ie(o, 2) - ie(h, 2)), r = c.v.normalize().multiplyScalar(f), l = u.clone().add(r), d = u.clone().subtract(r), b = i.distance(l), k = i.distance(d);
  return Math.abs(b - k) < 2 ? d : b < k ? l : d;
}
function _e(n, e) {
  const t = J.subtract(e.source, n.source), o = n.v, i = e.v, s = J.cross(t, o) / J.cross(o, i);
  return e.source.clone().add(i.clone().multiplyScalar(s));
}
function qe(n, e, t, o, i) {
  const s = n, c = t.clone().subtract(s), u = c.length(), h = e + o;
  if (h < u)
    return null;
  const f = Math.abs(e - o);
  if (u < f)
    return null;
  if (u === h) {
    const y = c.clone().normalize(), x = n.clone().add(y.multiplyScalar(e));
    return i ? x : [x, x];
  }
  if (u === f) {
    const y = c.clone().normalize(), x = e > o, z = n.clone().add(y.multiplyScalar(x ? e : -e));
    return i ? z : [z, z];
  }
  const r = e, l = o, d = (ie(u, 2) + ie(r, 2) - ie(l, 2)) / (2 * u * r), b = r * d, k = Math.sqrt(ie(r, 2) - ie(b, 2)), g = c.clone().normalize(), v = new R(-g.y, g.x), w = g.clone().multiplyScalar(b), E = v.clone().multiplyScalar(k), m = n.clone().add(w).add(E), p = n.clone().add(w).subtract(E);
  if (i) {
    const y = m.distance(i), x = p.distance(i);
    return y < x ? m : p;
  } else
    return [m, p];
}
function hn(n, e, t, o) {
  const i = Y.fromPositions(n, e), s = (t.width + t.strokeWidth) / 2 * o, a = (t.height + t.strokeWidth) / 2 * o, c = t.borderRadius > 0 ? (t.borderRadius + t.strokeWidth / 2) * o : 0, u = (i.v.angle() - Math.PI / 2) % Math.PI, h = Math.PI / 2 - u % Math.PI, f = a * Math.abs(Math.tan(u)), r = s * Math.abs(Math.tan(h)), l = f <= s - c, d = r <= a - c;
  if (l || d || c === 0)
    return Math.sqrt(l ? ie(a, 2) + ie(f, 2) : ie(s, 2) + ie(r, 2));
  {
    const b = e.x - s + c, k = e.y - a + c, g = e.x + s - c, v = e.y + a - c, w = [
      new R(b, k),
      new R(g, k),
      new R(g, v),
      new R(b, v)
    ], E = Math.floor((i.v.angleDegree() + 360) % 360 / 90), m = w[E], p = ut(
      i.source,
      Ft(m, i),
      m,
      c
    );
    return p ? De(p, i.target).length() : De(m, i.target).length() + c;
  }
}
function Fn(n, e, t, o, i) {
  const s = Y.fromLinePosition(n), a = s.v.clone().normalize(), c = o === 0 ? s.source : s.source.clone().add(a.clone().multiplyScalar(o * i)), u = o === 0 ? s.target : s.target.clone().subtract(a.clone().multiplyScalar(o * i)), h = (e.width / 2 + t) * i, f = new R(-a.y, a.x).multiplyScalar(h);
  let r = J.subtract(c, f), l = J.add(c, f), d = J.subtract(u, f), b = J.add(u, f);
  const k = s.v.angleDegree();
  return (k < -90 || k >= 90) && ([r, l] = [l, r], [d, b] = [b, d]), {
    source: { above: r, below: l },
    target: { above: d, below: b }
  };
}
function di(n, e, t, o) {
  let i;
  t.type === "circle" ? i = t.radius + t.strokeWidth / 2 : i = hn(
    e,
    n,
    t,
    1
    // scale
  );
  let s;
  return o.type === "circle" ? s = o.radius + o.strokeWidth / 2 : s = hn(
    n,
    e,
    o,
    1
    // scale
  ), [i, s];
}
function Se(n, e, t) {
  const { x: o, y: i } = n, s = o - e.x, a = i - e.y;
  return {
    x: s * Math.cos(t) - a * Math.sin(t) + e.x,
    y: s * Math.sin(t) + a * Math.cos(t) + e.y
  };
}
function _t(n) {
  return n > 0 ? -(Math.PI * 2 - n) : Math.PI * 2 + n;
}
function It(n, e, t, o) {
  const i = [], s = Y.fromVectors(e, n), a = Y.fromVectors(e, t);
  let c = Ne(s, a);
  o * c < 0 && (c = _t(c));
  const u = R.fromObject(Se(n, e, -c / 2)), h = Y.fromVectors(e, u), f = Ve(h), r = Ne(s, h);
  let l = Ve(s);
  if (Math.abs(r) < Math.PI / 2) {
    const b = _e(l, f);
    i.push(b);
  } else {
    const b = R.fromObject(Se(u, e, r / 2)), k = Ve(
      Y.fromVectors(e, R.fromObject(b))
    ), g = _e(l, k), v = _e(k, f);
    i.push(g, b, v);
  }
  i.push(u);
  const d = Ne(a, h);
  if (l = Ve(a), Math.abs(d) < Math.PI / 2) {
    const b = _e(l, f);
    i.push(b);
  } else {
    const b = R.fromObject(Se(u, e, d / 2)), k = Ve(
      Y.fromVectors(e, R.fromObject(b))
    ), g = _e(f, k), v = _e(k, l);
    i.push(g, b, v);
  }
  return i;
}
function Ne(n, e) {
  return Math.atan2(
    n.v.y * e.v.x - n.v.x * e.v.y,
    n.v.x * e.v.x + n.v.y * e.v.y
  );
}
function fi(n, e, t) {
  const o = n.x, i = n.y, s = e.x, a = e.y, c = t.x, u = t.y, h = o - s, f = i - a, r = c - s, l = u - a;
  if (h === 0 && f === 0 || r === 0 && l === 0)
    return [n, 0];
  const d = (l * (h * (o + s) + f * (i + a)) - f * (r * (c + s) + l * (u + a))) / (2 * h * l - 2 * f * r), b = (-r * (h * (o + s) + f * (i + a)) + h * (r * (c + s) + l * (u + a))) / (2 * h * l - 2 * f * r), k = Math.sqrt(Math.pow(o - d, 2) + Math.pow(i - b, 2));
  return [new R(d, b), k];
}
function Ze(n) {
  return n.type == "circle" ? n.radius : Math.min(n.width, n.height) / 2;
}
function hi(n) {
  const e = Object.values(n);
  if (e.length === 0)
    return {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    };
  const t = {
    top: e[0].y,
    bottom: e[0].y,
    left: e[0].x,
    right: e[0].x
  };
  return e.forEach((o) => {
    t.top = Math.min(o.y, t.top), t.bottom = Math.max(o.y, t.bottom), t.left = Math.min(o.x, t.left), t.right = Math.max(o.x, t.right);
  }), t;
}
function Qe(...n) {
  return n.find((e) => !!e);
}
var pi = Number.EPSILON * 100;
function vi(n, e, t, o, i, s, a, c) {
  var k, g;
  const u = n.edges, h = n.directions, f = u.map((v, w) => mi(v, h[w], o[v.edgeId])), r = [];
  let l = false, d = false;
  {
    const v = f[0];
    let w = Ze(e[v.source].shape) * i;
    const E = c + (a === "edgeOfNode" ? w : 0), m = E <= 0 ? v.line.source : vn(v, E, t, true);
    r.push(m), w = Ze(e[v.target].shape) * i, c > 0 && J.distance(v.line.source, v.line.target) <= E + w && (l = true);
  }
  const b = u.length;
  for (let v = 1; v < b; v++) {
    const w = f[v - 1], E = f[v], m = E.source, p = R.fromObject((k = t[m]) != null ? k : { x: 0, y: 0 }), y = gi(w, E, p), x = Ze(e[m].shape) * i, z = Math.max(x * (2 / 3), x - 4 * i), L = Lt(w), C = Lt(E), T = Je(w, p, z, L), $ = Je(E, p, z, !C), N = Je(w, p, x, L), G = Je(E, p, x, !C);
    let B;
    if (y) {
      const H = J.distance(y, p);
      if (H < z)
        B = [
          Qe(T, N, w.line.target),
          y,
          Qe($, G, E.line.source)
        ];
      else if (H <= x) {
        let fe, se;
        N && T ? fe = J.distance(y, T) < J.distance(y, N) ? T : N : fe = N || w.line.target, G && $ ? se = J.distance(y, $) < J.distance(y, G) ? $ : G : se = G || E.line.source, B = [fe, y, se];
      } else
        T && $ ? B = [T, p, $] : N && G ? B = [N, p, G] : B = [
          Qe(T, N, w.line.target),
          p,
          Qe($, G, E.line.source)
        ];
    } else
      T && $ ? B = [T, p, $] : N && G ? B = [N, p, G] : B = [w.line.target, p, E.line.source];
    if (w.curve) {
      const H = r[r.length - 1];
      if (H) {
        const fe = H instanceof Array ? H[H.length - 1] : H;
        let se;
        B instanceof Array ? se = s ? B[0] : B[1] : se = B;
        const ge = It(
          fe,
          w.curve.circle.center,
          se,
          w.curve.theta
        );
        B instanceof Array && s ? r.push([...ge, ...B]) : r.push([...ge, se]);
      }
    } else if (w.loop) {
      const [H, fe, se] = mn(p, w, x);
      r.push(H), r.push(se), B instanceof Array && s ? r.push([fe, B[1], B[2]]) : r.push(B[2]);
    } else
      s || !(B instanceof Array) ? r.push(B) : E.curve ? r.push(B[1]) : E.loop ? r.push(B[0]) : r.push(B[0], B[2]);
  }
  {
    const v = f[f.length - 1];
    let w = Ze(e[v.target].shape) * i;
    const E = c + (a === "edgeOfNode" ? w : 0), m = E <= 0 ? v.line.target : vn(v, E, t, false);
    if (w = Ze(e[v.source].shape) * i, v.loop) {
      const p = R.fromObject((g = t[v.target]) != null ? g : { x: 0, y: 0 }), [y, x, z] = mn(p, v, w);
      r.push(y), r.push(z);
    } else if (v.curve) {
      const p = r[r.length - 1], y = p instanceof Array ? p[p.length - 1] : p, x = It(
        y,
        v.curve.circle.center,
        m,
        v.curve.theta
      );
      r.push([...x, m]);
    } else
      r.push(m);
    c > 0 && J.distance(v.line.source, v.line.target) <= E + w && (d = true);
  }
  return l && (r.shift(), r[0] instanceof Array && r.unshift(r[0][0])), d && r.pop(), r;
}
function pn(n) {
  const e = n.length;
  if (e === 0)
    return [];
  if (e <= 1)
    return [true];
  const t = [];
  let o = null, i = true;
  for (let s = 0; s < e; s++) {
    const a = n[s].edge.source, c = n[s].edge.target;
    if (s === 0)
      if (e > 2) {
        const u = qn(n, 0);
        u === null ? i = true : i = u === c;
      } else
        i = [n[1].edge.source, n[1].edge.target].includes(c);
    else
      a === c ? i = true : i = o === a;
    t.push(i), o = i ? c : a;
  }
  return t;
}
function qn(n, e) {
  const t = n[e], o = n[e + 1], i = [t.edge.source, t.edge.target].sort(), s = [o.edge.source, o.edge.target].sort();
  if (i[0] === i[1])
    return i[0];
  if (s[0] === s[1])
    return s[0];
  if (t.edgeId === o.edgeId || i[0] === s[0] && i[1] === s[1]) {
    if (e >= n.length - 2)
      return null;
    {
      const a = qn(n, e + 1);
      return a === null ? null : a === i[1] ? i[0] : i[1];
    }
  } else
    return s.includes(i[1]) ? i[1] : i[0];
}
function vn(n, e, t, o) {
  const i = o ? n.source : n.target, s = n.curve;
  if (s) {
    let a = e / s.circle.radius;
    return s.theta > 0 && (a *= -1), o || (a *= -1), R.fromObject(
      Se(
        o ? n.line.source : n.line.target,
        s.circle.center,
        a
      )
    );
  } else {
    let a, c;
    if (o ? (a = n.line.target, c = n.line.source) : (a = n.line.source, c = n.line.target), t[i]) {
      const u = ut(
        a,
        c,
        R.fromObject(t[i]),
        e
      );
      return u === null ? a : u;
    } else
      return a;
  }
}
function gi(n, e, t) {
  let o = null;
  if (n.loop || e.loop)
    o = null;
  else if (n.curve)
    if (e.curve) {
      if (n.line.target.isEqualTo(e.line.source))
        return n.line.target.clone();
      o = qe(
        n.curve.circle.center,
        n.curve.circle.radius,
        e.curve.circle.center,
        e.curve.circle.radius,
        n.curve.center
      );
    } else
      o = ui(
        e.line.target,
        e.line.source,
        n.curve.circle.center,
        n.curve.circle.radius,
        t
      );
  else if (e.curve)
    o = ut(
      n.line.source,
      n.line.target,
      e.curve.circle.center,
      e.curve.circle.radius
    );
  else {
    const i = gn(n.line), s = gn(e.line);
    !isFinite(i) && !isFinite(s) || Math.abs(i - s) < pi ? o = null : o = _e(n.line, e.line);
  }
  return o;
}
function Je(n, e, t, o) {
  if (n.loop) {
    const i = qe(
      e,
      t,
      n.loop.center,
      n.loop.radius[0]
    );
    return i ? o ? i[0] : i[1] : null;
  } else
    return n.curve ? qe(
      e,
      t,
      n.curve.circle.center,
      n.curve.circle.radius,
      R.fromObject(n.curve.center)
    ) : ut(
      o ? n.line.source : n.line.target,
      o ? n.line.target : n.line.source,
      e,
      t
    );
}
function mi(n, e, t) {
  let o = t.origin, i = n.edge.source, s = n.edge.target, a = t.curve;
  const c = t.loop;
  c ? o = t.position : e || (o = ci(o), i = n.edge.target, s = n.edge.source, a && (a = Be(oe({}, a), { theta: -a.theta })));
  const u = Y.fromLinePosition(o);
  return {
    edgeId: n.edgeId,
    source: i,
    target: s,
    line: u,
    direction: e,
    curve: a,
    loop: c
  };
}
function gn(n) {
  return (n.target.y - n.source.y) / (n.target.x - n.source.x);
}
function mn(n, e, t) {
  const { radius: o, center: i } = q(e.loop, "Loop of edge parameter"), [s, a] = o, c = qe(n, t, i, o[0]);
  let [u, h] = c ? c.reverse() : [e.line.source, e.line.target];
  const f = Lt(e);
  f || ([u, h] = [h, u]);
  const r = u, l = h, d = R.fromObject(r).subtract(i).angleDegree();
  let g = (R.fromObject(l).subtract(i).angleDegree() + 360 - d) % 360 >= 180;
  return g = f ? g : !g, [r, l, `A ${s} ${a} 0 ${g ? 1 : 0} ${f ? 1 : 0} ${l.x} ${l.y}`];
}
function Lt(n) {
  return n.loop ? n.direction ? n.loop.isClockwise : !n.loop.isClockwise : true;
}
function yt(n, e, t, o, i, s, a) {
  const c = reactive({});
  watch(
    () => new Set(Object.keys(n.value)),
    (h, f) => {
      f || (f = /* @__PURE__ */ new Set([]));
      for (const r of h)
        f.has(r) || bi(n, c, r, false, e, i);
      for (const r of f)
        h.has(r) || (t.delete(r), o.delete(r), s == null || s(r, c[r]), delete c[r]);
    },
    { immediate: true }
  ), watch(
    () => [...t],
    (h, f) => {
      const r = f ? h.filter((d) => !f.includes(d)) : h, l = f ? f.filter((d) => !h.includes(d)) : [];
      r.forEach((d) => {
        const b = c[d];
        b && !b.selected && (b.selected = true);
      }), l.forEach((d) => {
        const b = c[d];
        b && b.selected && (b.selected = false);
      });
    },
    { immediate: true }
    // for specified from the beginning
  ), watch(
    () => [...o],
    (h, f) => {
      const r = h.filter((d) => !f.includes(d)), l = f.filter((d) => !h.includes(d));
      r.forEach((d) => {
        const b = c[d];
        b && !b.hovered && (b.hovered = true);
      }), l.forEach((d) => {
        const b = c[d];
        b && b.hovered && (b.hovered = false);
      });
    }
  );
  const u = computed(() => {
    const h = a ? a() : Object.values(c);
    return e.zOrder.enabled ? yi(h, e.zOrder, o, t) : h;
  });
  return { states: c, zOrderedList: u };
}
function bi(n, e, t, o, i, s) {
  const a = {
    id: t,
    selected: o,
    hovered: false,
    selectable: computed(() => n.value[t] ? _.value(i.selectable, n.value[t]) : unref(a.selectable)),
    zIndex: computed(() => n.value[t] ? _.value(i.zOrder.zIndex, n.value[t]) : unref(a.zIndex))
  };
  e[t] = a, s(
    n,
    t,
    e[t]
    /* get reactive object */
  );
}
function yi(n, e, t, o) {
  return e.bringToFrontOnHover && e.bringToFrontOnSelected ? n.sort((i, s) => {
    const a = t.has(i.id), c = t.has(s.id);
    if (a != c)
      return a ? 1 : -1;
    const u = o.has(i.id), h = o.has(s.id);
    return u != h ? u ? 1 : -1 : i.zIndex - s.zIndex;
  }) : e.bringToFrontOnHover ? n.sort((i, s) => {
    const a = t.has(i.id), c = t.has(s.id);
    return a != c ? a ? 1 : -1 : i.zIndex - s.zIndex;
  }) : e.bringToFrontOnSelected ? n.sort((i, s) => {
    const a = o.has(i.id), c = o.has(s.id);
    return a != c ? a ? 1 : -1 : i.zIndex - s.zIndex;
  }) : n.sort((i, s) => i.zIndex - s.zIndex);
}
function wi(n) {
  return typeof btoa === void 0 ? Buffer.from(n).toString("base64").replaceAll("=", "") : btoa(n).replaceAll("=", "");
}
function Ei() {
  return { markers: reactive({}), referenceCount: {} };
}
function ki(n) {
  const { markers: e, referenceCount: t } = n;
  function o(c, u) {
    var f;
    const h = (f = t[c]) != null ? f : 0;
    t[c] = h + 1, h || (e[c] = u);
  }
  function i(c) {
    var h;
    const u = (h = t[c]) != null ? h : 0;
    u && (u - 1 === 0 ? (delete e[c], delete t[c]) : t[c] = u - 1);
  }
  function s(c) {
    c && i(c);
  }
  function a(c, u, h, f, r) {
    if (c.type === "none") {
      s(h);
      return;
    }
    if (c.type === "custom")
      return s(h), c.customId;
    const l = xi(c, u, f), d = Pi(l, r);
    return d === h || (s(h), o(d, l)), d;
  }
  return {
    makeMarker: a,
    clearMarker: s
  };
}
function xi(n, e, t) {
  var o;
  return Be(oe({}, n), {
    color: (o = n.color) != null ? o : t,
    isSource: e
  });
}
function Pi(n, e) {
  const t = wi(n.color), o = n.isSource ? "L" : "R", i = n.units === "strokeWidth" ? "rel" : "abs";
  return `marker_${e}_${n.type}_${n.width}_${n.height}_${n.margin}_${n.offset}_${t}_${o}_${i}`;
}
function wt(n, e, t) {
  return {
    objects: n,
    selected: e,
    hovered: t
  };
}
var Xn = Symbol("states");
var Si = {
  type: "none",
  width: 0,
  height: 0,
  margin: 0,
  offset: 0,
  units: "strokeWidth",
  color: null
};
function Mi(n, e, t, o, i, s, a, c) {
  const u = reactive({}), h = xe({});
  watchEffect(() => {
    const m = Object.fromEntries(
      Object.keys(n.objects.value).map((p) => [p, {}])
    );
    Object.entries(e.objects.value).forEach(([p, y]) => {
      m != null && m[y.source] || (m[y.source] = {}), m != null && m[y.target] || (m[y.target] = {}), m[y.source][p] = y.target, m[y.target][p] = y.source;
    }), et(h, m);
  });
  const {
    states: f,
    zOrderedList: r
    //
  } = yt(
    n.objects,
    o.node,
    n.selected,
    n.hovered,
    (m, p, y) => {
      zi(
        m,
        p,
        y,
        o.node,
        h,
        i,
        s
      );
    },
    (m, p) => {
      const y = i.nodes;
      delete y[m];
    }
  ), l = Qo(), d = ei(n.objects, e.objects, o), b = ref([]), {
    states: k,
    zOrderedList: g
    //
  } = yt(
    e.objects,
    o.edge,
    e.selected,
    e.hovered,
    (m, p, y) => {
      _i(
        m,
        p,
        y,
        o.edge,
        a,
        f,
        d,
        i,
        c,
        l
      );
    },
    (m, p) => {
      var y;
      (y = p.stopWatchHandle) == null || y.call(p);
    },
    () => b.value
  );
  watchEffect(() => {
    b.value = Ii(d.edgeGroups, k);
  }), watch(
    d.edgeGroups,
    (m) => Ai(u, d, o),
    { immediate: true }
  );
  const {
    states: v,
    zOrderedList: w
    //
  } = yt(
    t.objects,
    o.path,
    t.selected,
    t.hovered,
    (m, p, y) => {
      const x = y;
      x.clickable = computed(() => m.value[p] ? _.value(o.path.clickable, m.value[p]) : false), x.hoverable = computed(() => m.value[p] ? _.value(o.path.hoverable, m.value[p]) : false), x.path = m.value[p], x.edges = yn(x.path, e), x.directions = pn(x.edges), x.stopWatchHandle = watch(
        () => m.value[p].edges,
        () => {
          x.path = m.value[p], x.edges = yn(x.path, e), x.directions = pn(x.edges);
        }
      );
    },
    (m, p) => {
      var y;
      (y = p.stopWatchHandle) == null || y.call(p);
    }
  ), E = {
    nodeStates: f,
    edgeStates: k,
    edgeGroupStates: d,
    summarizedEdgeStates: u,
    pathStates: v,
    layouts: i,
    nodeZOrderedList: r,
    edgeZOrderedList: g,
    pathZOrderedList: w
  };
  return provide(Xn, E), E;
}
function Ci(n) {
  return n.summarized;
}
function me() {
  return q(inject(Xn), "states");
}
function Oi(n, e, t, o) {
  return t && o.hover ? _.values(o.hover, n) : Gn(n, e, o);
}
function Gn(n, e, t) {
  return e && t.selected ? _.values(t.selected, n) : _.values(t.normal, n);
}
function zi(n, e, t, o, i, s, a) {
  var c, u;
  !s.nodes[e] && ((c = a.nodes) != null && c[e]) && (s.nodes[e] = oe({}, (u = a.nodes) == null ? void 0 : u[e])), t.shape = computed(() => n.value[e] ? Oi(n.value[e], t.selected, t.hovered, o) : unref(t.shape)), t.staticShape = computed(() => n.value[e] ? Gn(n.value[e], t.selected, o) : unref(t.staticShape)), t.label = computed(() => n.value[e] ? _.values(o.label, n.value[e]) : unref(t.label)), t.labelText = computed(() => {
    var h, f;
    return o.label.text instanceof Function ? unref(t.label).text : n.value[e] ? (f = (h = n.value[e]) == null ? void 0 : h[unref(t.label).text]) != null ? f : "" : unref(t.labelText);
  }), t.draggable = computed(() => n.value[e] ? _.value(o.draggable, n.value[e]) : unref(t.draggable)), t.oppositeNodeIds = toRef(i, e), t.oppositeNodes = computed(() => Object.entries(t.oppositeNodeIds).reduce(
    (h, f) => {
      const [r, l] = f, d = s.nodes[l];
      return d && (h[r] = { nodeId: l, pos: oe({}, d) }), h;
    },
    {}
  ));
}
function Ti(n, e, t, o) {
  return e ? _.values(o.selected, n) : t && o.hover ? _.values(o.hover, n) : _.values(o.normal, n);
}
function bn(n) {
  return n.type === "none" ? Si : n;
}
function _i(n, e, t, o, i, s, a, c, u, h) {
  const { makeMarker: f, clearMarker: r } = ki(i);
  Object.assign(t, {
    origin: { p1: { x: 0, y: 0 }, p2: { x: 0, y: 0 } },
    labelPosition: { p1: { x: 0, y: 0 }, p2: { x: 0, y: 0 } },
    position: { p1: { x: 0, y: 0 }, p2: { x: 0, y: 0 } }
  }), t.label = computed(() => n.value[e] ? _.values(o.label, n.value[e]) : unref(t.label));
  const l = computed(() => {
    const v = n.value[e], w = Ti(v, t.selected, t.hovered, o);
    isNaN(+w.width) && (console.warn(
      "[v-network-graph] Edge width is invalid value. id=[%s] value=[%s]",
      e,
      w.width
    ), w.width = 1), (w.color === void 0 || w.color === null) && (console.warn(
      "[v-network-graph] Edge color is invalid value. id=[%s] value=[%s]",
      e,
      w.color
    ), w.color = "#000000");
    let E = _.value(o.normal.width, v);
    isNaN(+E) && (E = 1);
    const m = bn(_.values(o.marker.source, [v, w])), p = bn(_.values(o.marker.target, [v, w]));
    return { stroke: w, normalWidth: E, source: m, target: p };
  });
  t.line = l;
  const d = toRef(
    a.edgeLayoutPoints,
    e
  ), b = toRef(a.summarizedEdges, e), k = watchEffect(() => {
    var B, H, fe, se, ge, Oe, ze;
    const v = n.value[e];
    if (!v)
      return;
    const w = (B = s[v.source]) == null ? void 0 : B.staticShape, E = (H = s[v.target]) == null ? void 0 : H.staticShape;
    if (!w || !E)
      return;
    const m = (fe = c.nodes[v == null ? void 0 : v.source]) != null ? fe : { x: 0, y: 0 }, p = (se = c.nodes[v == null ? void 0 : v.target]) != null ? se : { x: 0, y: 0 }, y = ti(
      d.value,
      (ge = b.value) != null ? ge : false,
      m,
      p,
      u.value,
      o.keepOrder
    ), [x, z] = di(m, p, w, E), L = u.value;
    t.labelPosition = Tt(
      y,
      x * L,
      z * L
    );
    let C = 0, T = 0;
    const $ = l.value;
    if ($.source.type !== "none") {
      const re = $.source;
      C = re.margin + re.width, re.units === "strokeWidth" && (C *= $.normalWidth);
    }
    if ($.target.type !== "none") {
      const re = $.target;
      T = re.margin + re.width, re.units === "strokeWidth" && (T *= $.normalWidth);
    }
    o.margin && (C += o.margin, T += o.margin);
    const N = !!o.margin || $.source.type !== "none" || $.target.type !== "none";
    if (v.source === v.target) {
      t.origin = ot(m, p);
      const re = _.values(o.selfLoop, v), [Le, $e] = $i(
        m,
        w,
        re,
        N,
        C,
        T,
        (ze = (Oe = d.value) == null ? void 0 : Oe.pointInGroup) != null ? ze : 0,
        L
      );
      t.position = Le, t.loop = $e, t.curve = void 0;
      return;
    } else
      t.loop = void 0;
    if (N && (C += x, T += z), o.type === "straight" || b.value)
      t.origin = y, t.curve = void 0, C === 0 && T === 0 ? t.position = t.origin : t.position = Tt(t.origin, C * L, T * L);
    else {
      t.origin = ot(m, p);
      const re = d.value ? d.value.groupWidth / 2 - d.value.pointInGroup : 0, [Le, $e] = Li(
        t.origin,
        y,
        re,
        C * L,
        T * L
      );
      t.position = Le, t.curve = $e;
    }
  }), g = watchEffect(() => {
    n.value[e] && (t.sourceMarkerId = f(
      l.value.source,
      true,
      t.sourceMarkerId,
      l.value.stroke.color,
      h
    ), t.targetMarkerId = f(
      l.value.target,
      false,
      t.targetMarkerId,
      l.value.stroke.color,
      h
    ));
  });
  t.stopWatchHandle = () => {
    k(), g(), r(t.sourceMarkerId), r(t.targetMarkerId);
  };
}
function Ii(n, e) {
  return Object.entries(n).map(([t, o]) => {
    var i;
    return o.summarize ? {
      id: (i = Object.keys(o.edges)[0]) != null ? i : t,
      summarized: true,
      key: t,
      group: o,
      zIndex: Object.keys(o.edges).map((s) => {
        var a, c;
        return (c = (a = e[s]) == null ? void 0 : a.zIndex) != null ? c : 0;
      }).reduce((s, a) => Math.max(s, a))
    } : Object.entries(o.edges).map(
      ([s, a]) => {
        var c, u;
        return {
          id: s,
          summarized: false,
          key: s,
          edge: a,
          zIndex: (u = (c = e[s]) == null ? void 0 : c.zIndex) != null ? u : 0
        };
      }
    );
  }).flat();
}
function Li(n, e, t, o, i) {
  const s = Y.fromLinePosition(n), a = Y.fromLinePosition(e), c = ai(e), [u, h] = fi(
    s.source,
    s.target,
    c
  );
  let f, r;
  if (h === 0)
    return [n, r];
  if (t === 0)
    return o === 0 && i === 0 ? f = n : f = Tt(n, o, i), [f, r];
  const l = Y.fromVectors(u, c), d = Ne(
    Y.fromVectors(u, s.source),
    l
  );
  if (o === 0 && i === 0)
    f = n;
  else {
    let v = o / h, w = i / h;
    d > 0 && (v *= -1, w *= -1), f = ot(
      Se(s.source, u, v),
      Se(s.target, u, -w)
    );
    let E = Ne(
      Y.fromVectors(u, s.source),
      Y.fromVectors(u, s.target)
    ), m = Ne(
      Y.fromPositions(u, f.p1),
      Y.fromPositions(u, f.p2)
    );
    if (d * E < 0 && (E = _t(E), d * m < 0 && (m = _t(m))), E * m < 0) {
      const p = c.clone().add(a.v.normalize().multiplyScalar(0.5));
      return f = ot(c, p), [f, r];
    }
  }
  const [b, k] = ri(f), g = It(b, u, k, d).map((v) => v.toObject());
  return r = {
    center: c,
    theta: d,
    circle: { center: u, radius: h },
    control: g
  }, [f, r];
}
function $i(n, e, t, o, i, s, a, c) {
  const u = c, h = (t.radius + a / 2) * u, f = t.offset * u + h, r = (t.angle - 90) * (Math.PI / 180), l = R.fromObject({
    x: n.x + f * Math.cos(r),
    y: n.y + f * Math.sin(r)
  }), d = t.isClockwise;
  let b, k;
  if (o) {
    const m = qe(
      l,
      h,
      R.fromObject(n),
      Ze(e) * u
    );
    if (m) {
      [b, k] = m;
      let p = 1;
      if (d || ([b, k] = [k, b], p = -1), i !== 0 || s !== 0) {
        const y = i * u / h * p, x = s * u / h * p;
        b = Se(b, l, y), k = Se(k, l, -x);
      }
    }
  }
  if (b === void 0 || k === void 0) {
    const m = R.fromObject(n).subtract(l).normalize().multiplyScalar(h);
    let p = 1 * (Math.PI / 180);
    d || (p *= -1), b = l.clone().add(nt(m, p)), k = l.clone().add(nt(m, -p));
  }
  const g = R.fromObject(b).subtract(l).angleDegree(), E = (R.fromObject(k).subtract(l).angleDegree() + 360 - g) % 360 >= 180;
  return [
    { p1: b, p2: k },
    {
      center: l,
      radius: [h, h],
      isLargeArc: d ? E : !E,
      isClockwise: d
    }
  ];
}
function Ai(n, e, t) {
  const o = e.edgeGroups;
  Object.entries(o).filter(([i, s]) => s.summarize && !(i in n)).forEach(([i, s]) => {
    const a = { stroke: void 0 };
    a.stroke = computed(
      () => _.values(t.edge.summarized.stroke, s.edges)
    ), n[i] = a;
  }), Object.keys(n).forEach((i) => {
    var s;
    (s = e.edgeGroups[i]) != null && s.summarize || delete n[i];
  });
}
function yn(n, e) {
  return n.edges.map((t) => ({ edgeId: t, edge: e.objects.value[t] })).filter((t) => t.edge);
}
var Ue = class {
  static valueOf(e) {
    return Array.from(e.values());
  }
};
var Zi = 3;
var Di = 6;
var Kn = 500;
function tt(n) {
  return n === "touch" ? Di : Zi;
}
function qt(n, e, t, o) {
  let i = n.get(e);
  if (i)
    i.id !== t && (i = void 0);
  else {
    const c = Array.from(n.entries()).find(([u, h]) => h.id === t);
    if (c) {
      const [u, h] = c;
      n.delete(u), i = h;
    }
  }
  let s, a;
  return [i, s, a] = Yn(i, o, t), n.set(e, i), [s, a];
}
function Yn(n, e, t) {
  const o = Date.now();
  n && o - n.lastTime <= Kn ? (n.count++, n.lastTime = o) : n = { count: 1, lastTime: o, id: t };
  const i = {
    view: window,
    screenX: e.screenX,
    screenY: e.screenY,
    clientX: e.clientX,
    clientY: e.clientY,
    ctrlKey: e.ctrlKey,
    shiftKey: e.shiftKey,
    altKey: e.altKey,
    metaKey: e.metaKey,
    button: e.button,
    buttons: e.buttons,
    detail: n.count
  };
  let s, a;
  return e instanceof PointerEvent ? (Object.assign(i, {
    pointerId: e.pointerId,
    width: e.width,
    height: e.height,
    pressure: e.pressure,
    tangentialPressure: e.tangentialPressure,
    tiltX: e.tiltX,
    tiltY: e.tiltY,
    twist: e.twist,
    pointerType: e.pointerType,
    isPrimary: e.isPrimary
  }), s = new PointerEvent("click", i), n.count === 2 && (a = new PointerEvent("dblclick", i))) : (s = new MouseEvent("click", i), n.count === 2 && (a = new MouseEvent("dblclick", i))), [n, s, a];
}
function Xt(n) {
  const e = Date.now();
  Array.from(n.entries()).filter(([t, o]) => e - o.lastTime > Kn).map(([t, o]) => n.delete(t));
}
function Ni(n, e, t, o, i, s, a) {
  const c = {
    pointers: /* @__PURE__ */ new Map(),
    follow: {
      followedPointerId: -1,
      nodeBasePositions: {}
    },
    hoveredNodesPre: /* @__PURE__ */ new Set(),
    clicks: /* @__PURE__ */ new Map()
  }, u = {
    pointermove: d,
    pointerup: k,
    pointercancel: b
  };
  function h(m) {
    const p = c.follow.followedPointerId === m.pointerId, y = i.has(m.nodeId), x = !(m.pointerId in c.pointers);
    if (p && x || p && !y) {
      const z = Ue.valueOf(c.pointers).find((L) => i.has(L.nodeId));
      if (!z) {
        c.follow = { followedPointerId: -1, nodeBasePositions: {} };
        return;
      }
      m = z, c.follow.followedPointerId = m.pointerId;
    } else {
      const z = c.pointers.get(c.follow.followedPointerId);
      if (!z) {
        c.follow = { followedPointerId: -1, nodeBasePositions: {} };
        return;
      }
      m = z;
    }
    if (p || y) {
      const z = Ue.valueOf(c.pointers).map((L) => L.nodeId);
      c.follow.nodeBasePositions = Object.fromEntries(
        Array.from(i).filter((L) => !z.includes(L)).filter((L) => {
          var C;
          return (C = n[L]) == null ? void 0 : C.draggable;
        }).map((L) => [L, Et(e.nodes, L)])
      ), m.dragBasePosition = oe({}, m.latestPosition), m.nodeBasePosition = Et(e.nodes, m.nodeId);
    }
  }
  watch(i, (m) => {
    const p = c.pointers.get(c.follow.followedPointerId);
    p && h(p), m.size > 0 && t.selectionMode.value !== "node" ? t.selectionMode.value = "node" : m.size === 0 && t.selectionMode.value === "node" && (t.selectionMode.value = "container");
  }), watch(t.selectionMode, (m) => {
    m !== "node" && i.clear();
  });
  function f(m, p) {
    const y = m.dragBasePosition.x - p.pageX, x = m.dragBasePosition.y - p.pageY, z = c.follow.followedPointerId == m.pointerId ? oe({
      [m.nodeId]: m.nodeBasePosition
    }, c.follow.nodeBasePositions) : { [m.nodeId]: m.nodeBasePosition }, L = s.value;
    return Object.fromEntries(
      Object.entries(z).map(([C, T]) => [
        C,
        {
          x: T.x - y / L,
          y: T.y - x / L
        }
      ])
    );
  }
  function r(m, p) {
    var x, z;
    if (p.isTrusted || p.shiftKey && !["container", "node"].includes(t.selectionMode.value))
      return;
    t.selectionMode.value = "node";
    const y = (z = (x = n[m]) == null ? void 0 : x.selectable) != null ? z : false;
    if (y) {
      const L = Ue.valueOf(c.pointers).filter((C) => i.has(C.nodeId)).length > 0;
      p.shiftKey || L ? i.has(m) ? i.delete(m) : typeof y == "number" && i.size >= y || i.add(m) : i.has(m) || (i.clear(), i.add(m));
    }
    a.emit("node:click", { node: m, event: p });
  }
  function l(m, p) {
    p.isTrusted || a.emit("node:dblclick", { node: m, event: p });
  }
  function d(m) {
    var z;
    m.stopPropagation();
    const p = c.pointers.get(m.pointerId);
    if (!p)
      return;
    p.latestPosition = { x: m.pageX, y: m.pageY }, p.moveCounter++;
    const y = tt(m.pointerType);
    if (p.moveCounter <= y || !((z = n[p.nodeId]) != null && z.draggable))
      return;
    if (p.moveCounter === y + 1) {
      const L = f(p, {
        pointerId: p.pointerId,
        pageX: p.dragBasePosition.x,
        pageY: p.dragBasePosition.y
      });
      a.emit("node:dragstart", L);
    }
    const x = f(p, m);
    a.emit("node:pointermove", x);
  }
  function b(m) {
    m.stopPropagation();
    let p = c.pointers.get(m.pointerId);
    if (p) {
      for (p of c.pointers.values()) {
        const y = p.nodeId, x = tt(m.pointerType);
        if (p.moveCounter > x) {
          const L = f(p, {
            pointerId: p.pointerId,
            pageX: p.latestPosition.x,
            pageY: p.latestPosition.y
          });
          a.emit("node:dragend", L);
        }
        a.emit("node:pointerup", { node: y, event: m });
      }
      c.pointers.clear(), c.follow = { followedPointerId: -1, nodeBasePositions: {} }, le(u).forEach(([y, x]) => {
        document.removeEventListener(y, x);
      }), t.viewMode.value = "default";
    }
  }
  function k(m) {
    var L, C, T;
    m.stopPropagation();
    const p = c.pointers.get(m.pointerId);
    if (!p)
      return;
    c.pointers.delete(m.pointerId);
    const y = p.nodeId, x = tt(m.pointerType), z = p.moveCounter > x;
    if (z) {
      if ((L = n[p.nodeId]) != null && L.draggable) {
        const $ = f(p, m);
        a.emit("node:dragend", $), a.emit("node:pointerup", { node: y, event: m });
      }
    } else
      a.emit("node:pointerup", { node: y, event: m });
    if (!z) {
      const [$, N] = qt(
        c.clicks,
        p.pointerId,
        y,
        m
      );
      (C = p.eventTarget) == null || C.dispatchEvent($), N && ((T = p.eventTarget) == null || T.dispatchEvent(N));
    }
    c.pointers.size === 0 ? (c.follow = { followedPointerId: -1, nodeBasePositions: {} }, le(u).forEach(([$, N]) => {
      document.removeEventListener($, N);
    }), Xt(c.clicks), t.viewMode.value = "default") : h(p), o.clear(), c.hoveredNodesPre.forEach(o.add, o);
  }
  function g(m, p) {
    if (p.button == 2 || (p.stopPropagation(), !["default", "node"].includes(t.viewMode.value)))
      return;
    c.pointers.size == 0 && (t.viewMode.value = "node", le(u).forEach(([x, z]) => {
      document.addEventListener(x, z);
    }));
    const y = {
      pointerId: p.pointerId,
      nodeId: m,
      moveCounter: 0,
      nodeBasePosition: Et(e.nodes, m),
      dragBasePosition: { x: p.pageX, y: p.pageY },
      latestPosition: { x: p.pageX, y: p.pageY },
      eventTarget: p.currentTarget
    };
    c.pointers.set(p.pointerId, y), i.has(m) && (c.follow.followedPointerId < 0 ? (c.follow.followedPointerId = p.pointerId, h(y)) : delete c.follow.nodeBasePositions[y.nodeId]), a.emit("node:pointerdown", { node: m, event: p });
  }
  function v(m, p) {
    c.hoveredNodesPre.add(m), !(c.pointers.size > 0) && (o.add(m), a.emit("node:pointerover", { node: m, event: p }));
  }
  function w(m, p) {
    c.hoveredNodesPre.delete(m), !(c.pointers.size > 0) && (o.delete(m), a.emit("node:pointerout", { node: m, event: p }));
  }
  function E(m, p) {
    p.stopPropagation(), a.emit("node:contextmenu", { node: m, event: p });
  }
  return {
    handleNodePointerDownEvent: g,
    handleNodePointerOverEvent: v,
    handleNodePointerOutEvent: w,
    handleNodeClickEvent: r,
    handleNodeDoubleClickEvent: l,
    handleNodeContextMenu: E
  };
}
function Et(n, e) {
  var o;
  const t = (o = n[e]) != null ? o : { x: 0, y: 0 };
  return oe({}, t);
}
function ji(n, e, t, o, i) {
  const s = {
    pointers: /* @__PURE__ */ new Map(),
    // <PointerId, ...>
    pointerPeekCount: 0,
    clicks: /* @__PURE__ */ new Map()
  }, a = {
    pointerup: u,
    pointercancel: h
  };
  watch(o, (p) => {
    p.size > 0 && e.selectionMode.value !== "edge" ? e.selectionMode.value = "edge" : p.size === 0 && e.selectionMode.value === "edge" && (e.selectionMode.value = "container");
  }), watch(e.selectionMode, (p) => {
    p !== "edge" && o.clear();
  });
  function c(p, y) {
    if (y.button == 2 || (y.stopPropagation(), !["default", "edge"].includes(e.viewMode.value)))
      return;
    s.pointers.size == 0 && (e.viewMode.value = "edge", le(a).forEach(([z, L]) => {
      document.addEventListener(z, L);
    }), s.pointerPeekCount = 0), s.pointerPeekCount++;
    const x = {
      pointerId: y.pointerId,
      id: p,
      eventTarget: y.currentTarget
    };
    s.pointers.set(y.pointerId, x), i.emit("edge:pointerdown", he(p, y));
  }
  function u(p) {
    var C, T;
    p.stopPropagation();
    const y = s.pointers.get(p.pointerId);
    if (!y)
      return;
    s.pointers.delete(p.pointerId);
    const x = y.id;
    i.emit("edge:pointerup", he(x, p));
    const [z, L] = qt(
      s.clicks,
      y.pointerId,
      x instanceof Array ? x.join(",") : x,
      p
    );
    (C = y.eventTarget) == null || C.dispatchEvent(z), L && ((T = y.eventTarget) == null || T.dispatchEvent(L)), s.pointers.size === 0 && (s.pointerPeekCount = 0, le(a).forEach(([$, N]) => {
      document.removeEventListener($, N);
    }), Xt(s.clicks), e.viewMode.value = "default");
  }
  function h(p) {
    if (p.stopPropagation(), !!s.pointers.get(p.pointerId)) {
      for (const x of s.pointers.values()) {
        const z = x.id;
        i.emit("edge:pointerup", he(z, p));
      }
      s.pointers.clear(), s.pointerPeekCount = 0, le(a).forEach(([x, z]) => {
        document.removeEventListener(x, z);
      }), i.emit("view:mode", "default");
    }
  }
  function f(p, y) {
    var L;
    if (y.isTrusted || y.shiftKey && !["container", "edge"].includes(e.selectionMode.value))
      return;
    e.selectionMode.value = "edge";
    const x = p instanceof Array ? p : [p], z = Ue.valueOf(s.pointers).filter((C) => (C.id instanceof Array ? C.id : [C.id]).every(($) => o.has($))).length > 0;
    if (p instanceof Array)
      x.find((T) => {
        var $;
        return ($ = n[T]) == null ? void 0 : $.selectable;
      }) && (y.shiftKey || z ? x.some((T) => o.has(T)) ? x.forEach((T) => o.delete(T)) : x.forEach((T) => {
        var N;
        const $ = (N = n[T]) == null ? void 0 : N.selectable;
        typeof $ == "number" && o.size >= $ || o.add(T);
      }) : (o.clear(), x.forEach((T) => o.add(T))));
    else {
      const C = (L = n[p]) == null ? void 0 : L.selectable;
      C && (y.shiftKey || z ? o.has(p) ? o.delete(p) : typeof C == "number" && o.size >= C || o.add(p) : o.has(p) || (o.clear(), o.add(p)));
    }
    i.emit("edge:click", he(p, y));
  }
  function r(p, y) {
    y.isTrusted || i.emit("edge:dblclick", he(p, y));
  }
  function l(p, y) {
    t.add(p), i.emit("edge:pointerover", he(p, y));
  }
  function d(p, y) {
    t.delete(p), i.emit("edge:pointerout", he(p, y));
  }
  function b(p, y) {
    y.stopPropagation(), i.emit("edge:contextmenu", he(p, y));
  }
  function k(p, y) {
    if (y.button == 2 || (y.stopPropagation(), !["default", "edge"].includes(e.viewMode.value)))
      return;
    s.pointers.size == 0 && (e.viewMode.value = "edge", le(a).forEach(([z, L]) => {
      document.addEventListener(z, L);
    }), s.pointerPeekCount = 0), s.pointerPeekCount++;
    const x = {
      pointerId: y.pointerId,
      id: p,
      eventTarget: y.currentTarget
    };
    s.pointers.set(y.pointerId, x), i.emit("edge:pointerdown", he(p, y));
  }
  function g(p, y) {
    p.forEach((x) => t.add(x)), i.emit("edge:pointerover", he(p, y));
  }
  function v(p, y) {
    p.forEach((x) => t.delete(x)), i.emit("edge:pointerout", he(p, y));
  }
  function w(p, y) {
    f(p, y);
  }
  function E(p, y) {
    r(p, y);
  }
  function m(p, y) {
    y.stopPropagation(), i.emit("edge:contextmenu", he(p, y));
  }
  return {
    handleEdgePointerDownEvent: c,
    handleEdgePointerOverEvent: l,
    handleEdgePointerOutEvent: d,
    handleEdgeClickEvent: f,
    handleEdgeDoubleClickEvent: r,
    handleEdgeContextMenu: b,
    handleEdgesPointerDownEvent: k,
    handleEdgesPointerOverEvent: g,
    handleEdgesPointerOutEvent: v,
    handleEdgesClickEvent: w,
    handleEdgesDoubleClickEvent: E,
    handleEdgesContextMenu: m
  };
}
function he(n, e) {
  return n instanceof Array ? {
    edges: n,
    event: e,
    summarized: true
  } : {
    edge: n,
    edges: [n],
    event: e,
    summarized: false
  };
}
function Bi(n, e, t, o) {
  const i = {
    moveCounter: 0,
    pointerCounter: 0,
    clickState: void 0
  }, s = {
    pointermove: c,
    pointerup: u,
    pointercancel: u
  };
  function a(d) {
    i.moveCounter = 0, i.pointerCounter === 0 && le(s).forEach(([b, k]) => {
      document.addEventListener(b, k, { passive: true });
    }), i.pointerCounter++;
  }
  function c(d) {
    i.moveCounter++;
  }
  function u(d) {
    if (i.pointerCounter--, i.pointerCounter <= 0) {
      i.pointerCounter = 0, le(s).forEach(([k, g]) => {
        document.removeEventListener(k, g);
      });
      const b = tt(d.pointerType);
      if (i.moveCounter <= b) {
        if (d.shiftKey && e.selectionMode.value !== "container")
          return;
        e.selectionMode.value = "container";
        const [k, g, v] = Yn(
          i.clickState,
          d,
          "view"
        );
        i.clickState = k, n.value.dispatchEvent(g), v && n.value.dispatchEvent(v);
      }
    }
  }
  function h(d) {
    d.isTrusted || (d.stopPropagation(), o.emit("view:click", { event: d }));
  }
  function f(d) {
    d.isTrusted || (d.stopPropagation(), o.emit("view:dblclick", { event: d }));
  }
  function r(d) {
    o.emit("view:contextmenu", { event: d }), i.pointerCounter > 0 && (i.pointerCounter = 0, le(s).forEach(([b, k]) => {
      var g;
      (g = n.value) == null || g.removeEventListener(b, k);
    }));
  }
  const l = (d) => {
    d.preventDefault();
  };
  onMounted(() => {
    const d = n.value;
    d && (d.addEventListener("pointerdown", a, { passive: true }), d.addEventListener("click", h, { passive: false }), d.addEventListener("dblclick", f, { passive: false }), d.addEventListener("contextmenu", r, { passive: false }), t.value && d.addEventListener("wheel", l, { passive: false }));
  }), onUnmounted(() => {
    const d = n.value;
    d && (d.removeEventListener("pointerdown", a), d.removeEventListener("click", h), d.removeEventListener("dblclick", f), d.removeEventListener("contextmenu", r), t.value && d.removeEventListener("wheel", l));
  }), watch(t, (d, b) => {
    const k = n.value;
    !k || d === b || (d ? k.addEventListener("wheel", l, { passive: false }) : k.removeEventListener("wheel", l));
  });
}
function Ri(n, e, t, o, i, s) {
  const a = {
    pointers: /* @__PURE__ */ new Map(),
    // <PointerId, ...>
    pointerPeekCount: 0,
    clicks: /* @__PURE__ */ new Map()
  };
  function c(v, w) {
    var E, m;
    return i.value ? { path: (m = (E = n[v]) == null ? void 0 : E.path) != null ? m : v, event: w } : { path: v, event: w };
  }
  const u = {
    pointerup: f,
    pointercancel: r
  };
  watch(o, (v) => {
    v.size > 0 && e.selectionMode.value !== "path" ? e.selectionMode.value = "path" : v.size === 0 && e.selectionMode.value === "path" && (e.selectionMode.value = "container");
  }), watch(e.selectionMode, (v) => {
    v !== "path" && o.clear();
  });
  function h(v, w) {
    var m;
    if (!((m = n[v]) != null && m.clickable) || w.button == 2 || (w.stopPropagation(), !["default", "path"].includes(e.viewMode.value)))
      return;
    a.pointers.size == 0 && (e.viewMode.value = "path", le(u).forEach(([p, y]) => {
      document.addEventListener(p, y);
    }), a.pointerPeekCount = 0), a.pointerPeekCount++;
    const E = {
      pointerId: w.pointerId,
      id: v,
      eventTarget: w.currentTarget
    };
    a.pointers.set(w.pointerId, E), s.emit("path:pointerdown", c(v, w));
  }
  function f(v) {
    var y, x;
    const w = a.pointers.get(v.pointerId);
    if (!w)
      return;
    v.stopPropagation(), a.pointers.delete(v.pointerId);
    const E = w.id;
    s.emit("path:pointerup", c(E, v));
    const [m, p] = qt(
      a.clicks,
      w.pointerId,
      E,
      v
    );
    (y = w.eventTarget) == null || y.dispatchEvent(m), p && ((x = w.eventTarget) == null || x.dispatchEvent(p)), a.pointers.size === 0 && (a.pointerPeekCount = 0, le(u).forEach(([z, L]) => {
      document.removeEventListener(z, L);
    }), Xt(a.clicks), e.viewMode.value = "default");
  }
  function r(v) {
    if (a.pointers.get(v.pointerId)) {
      v.stopPropagation();
      for (const E of a.pointers.values()) {
        const m = E.id;
        s.emit("path:pointerup", c(m, v));
      }
      a.pointers.clear(), a.pointerPeekCount = 0, le(u).forEach(([E, m]) => {
        document.removeEventListener(E, m);
      }), s.emit("view:mode", "default");
    }
  }
  function l(v, w) {
    var E;
    (E = n[v]) != null && E.hoverable && (t.add(v), s.emit("path:pointerover", c(v, w)));
  }
  function d(v, w) {
    var E;
    (E = n[v]) != null && E.hoverable && (t.delete(v), s.emit("path:pointerout", c(v, w)));
  }
  function b(v, w) {
    var m, p, y;
    if (w.isTrusted || !((m = n[v]) != null && m.clickable) || w.shiftKey && !["container", "path"].includes(e.selectionMode.value))
      return;
    e.selectionMode.value = "path";
    const E = (y = (p = n[v]) == null ? void 0 : p.selectable) != null ? y : false;
    if (E) {
      const x = Ue.valueOf(a.pointers).filter((z) => o.has(z.id)).length > 0;
      w.shiftKey || x ? o.has(v) ? o.delete(v) : typeof E == "number" && o.size >= E || o.add(v) : o.has(v) || (o.clear(), o.add(v));
    }
    s.emit("path:click", c(v, w));
  }
  function k(v, w) {
    var E;
    w.isTrusted || (E = n[v]) != null && E.clickable && s.emit("path:dblclick", c(v, w));
  }
  function g(v, w) {
    var E;
    (E = n[v]) != null && E.clickable && (w.stopPropagation(), s.emit("path:contextmenu", c(v, w)));
  }
  return {
    handlePathPointerDownEvent: h,
    handlePathPointerOverEvent: l,
    handlePathPointerOutEvent: d,
    handlePathClickEvent: b,
    handlePathDoubleClickEvent: k,
    handlePathContextMenu: g
  };
}
function Vi(n) {
  return pe(this, null, function* () {
    const t = yield (yield fetch(n)).blob();
    return new Promise((o, i) => {
      try {
        const s = new FileReader();
        s.onload = function() {
          o(this.result);
        }, s.readAsDataURL(t);
      } catch (s) {
        i(s);
      }
    });
  });
}
function $t(n, e, t) {
  var s;
  const o = n.createSVGPoint();
  o.x = t.x, o.y = t.y;
  const i = o.matrixTransform((s = e.getCTM()) == null ? void 0 : s.inverse());
  return { x: i.x, y: i.y };
}
function Wi(n, e, t) {
  const o = n.createSVGPoint();
  o.x = t.x, o.y = t.y;
  const i = o.matrixTransform(e.getCTM());
  return { x: i.x, y: i.y };
}
function Qn(n, e, t) {
  var h;
  const o = n.cloneNode(true), i = e.getBBox(), s = 1 / t, a = {
    x: Math.floor((i.x - 10) * s),
    y: Math.floor((i.y - 10) * s),
    width: Math.ceil((i.width + 20) * s),
    height: Math.ceil((i.height + 20) * s)
  };
  o.setAttribute("width", a.width.toString()), o.setAttribute("height", a.height.toString());
  const c = o.querySelector(".v-ng-viewport");
  c.setAttribute("transform", `translate(${-a.x} ${-a.y}), scale(${s})`), c.removeAttribute("style"), o.setAttribute("viewBox", `0 0 ${a.width} ${a.height}`), o.removeAttribute("style");
  const u = document.createNodeIterator(o, NodeFilter.SHOW_COMMENT);
  for (; u.nextNode(); ) {
    const f = u.referenceNode;
    (h = f.parentNode) == null || h.removeChild(f);
  }
  return o;
}
function Hi(n) {
  return pe(this, null, function* () {
    let e = false, t = n.getAttribute("href");
    if (t || (e = true, t = n.getAttribute("xlink:href")), !(!t || t.startsWith("data:")))
      try {
        const o = yield Vi(t);
        n.setAttribute(e ? "xlink:href" : "href", o);
      } catch (o) {
        console.warn("Image download failed.", t);
        return;
      }
  });
}
function Ui(i, s, a) {
  return pe(this, arguments, function* (n, e, t, o = {}) {
    const c = Qn(n, e, t);
    if (o.embedImages) {
      const h = Array.from(c.querySelectorAll("image")).map((f) => Hi(f));
      yield Promise.all(h);
    }
    return c;
  });
}
function Fi(n, e, t, o, i, s) {
  const a = computed(
    () => !!s.node.selectable && s.view.boxSelectionEnabled
  ), c = computed(() => e.viewMode.value === "box-selection"), u = ref(), h = ref(), f = {
    pointers: /* @__PURE__ */ new Set(),
    // Set of pointers being pressed
    points: /* @__PURE__ */ new Map(),
    // Point indicated by each pointer
    startPoint: null,
    // Point where the drag started
    selectedNodesAtSelectStarted: /* @__PURE__ */ new Set(),
    // Nodes selected at the start of the selection
    selectionType: "append",
    // Selection method for nodes included in the dragged range
    options: {
      // options specified by user at start of selection mode
      stopTrigger: "pointerup",
      selectionType: "append",
      selectionTypeWithShiftKey: "same"
    }
  }, r = debounce_default(
    () => {
      qi(
        q(n.value, "container"),
        q(u.value, "viewport"),
        h,
        t.nodes,
        o,
        i,
        f.selectedNodesAtSelectStarted,
        f.selectionType
      );
    },
    50,
    { maxWait: 100 }
  ), l = new Xi(
    n,
    b,
    k,
    g,
    d,
    v
  );
  function d(y) {
    if (f.options.stopTrigger !== "click" || f.pointers.size > 0)
      return;
    const x = { x: y.offsetX, y: y.offsetY };
    f.startPoint && R.fromObject(f.startPoint).distance(x) > 10 || p();
  }
  function b(y) {
    y.stopPropagation();
    const x = { x: y.offsetX, y: y.offsetY };
    f.pointers.size === 0 && (f.startPoint = x, l.activate(), f.selectedNodesAtSelectStarted.clear(), i.forEach((z) => f.selectedNodesAtSelectStarted.add(z)), f.options.selectionTypeWithShiftKey === "same" ? f.selectionType = f.options.selectionType : f.selectionType = y.shiftKey ? f.options.selectionTypeWithShiftKey : f.options.selectionType), f.pointers.has(y.pointerId) || f.pointers.add(y.pointerId), f.points.set(y.pointerId, x), w();
  }
  function k(y) {
    if (f.pointers.delete(y.pointerId), f.pointers.size === 1) {
      const x = q(n.value).getBoundingClientRect(), z = { x: y.x - x.x, y: y.y - x.y };
      f.startPoint = z;
    } else
      f.pointers.size === 0 && (l.deactivate(), f.options.stopTrigger === "pointerup" && p(), f.selectedNodesAtSelectStarted.clear());
    w();
  }
  function g(y) {
    const x = q(n.value).getBoundingClientRect(), z = { x: y.x - x.x, y: y.y - x.y };
    f.points.set(y.pointerId, z), w(), r();
  }
  function v(y) {
    y.key === "Escape" && f.options.stopTrigger !== "manual" && (y.stopPropagation(), p());
  }
  function w() {
    let y, x;
    const z = Array.from(f.pointers);
    if (z.length >= 2) {
      const L = z[0], C = z[z.length - 1];
      y = f.points.get(L), x = f.points.get(C);
    } else if (f.startPoint && z.length === 1) {
      const L = z[0];
      y = f.startPoint, x = f.points.get(L);
    } else
      y = void 0, x = void 0;
    y && x ? (h.value = {
      pos: {
        x: Math.min(y.x, x.x),
        y: Math.min(y.y, x.y)
      },
      size: {
        width: Math.abs(x.x - y.x),
        height: Math.abs(x.y - y.y)
      }
    }, h.value.size.width === 0 && (h.value.size.width = 1), h.value.size.height === 0 && (h.value.size.height = 1)) : h.value && (h.value = void 0);
  }
  const E = new Gi(
    n,
    // key down
    (y) => {
      a.value && s.view.selection.detector(y) && (m({
        stop: "manual",
        type: "append",
        withShiftKey: "invert"
      }), E.activate());
    },
    // key up
    (y) => {
      a.value && s.view.selection.detector(y) && (f.pointers.size === 0 ? p() : f.options.stopTrigger = "pointerup", E.deactivate());
    }
  );
  watch(a, (y) => {
    y ? E.register() : E.unregister();
  }), onMounted(() => {
    var y;
    u.value = (y = n.value) == null ? void 0 : y.querySelector(".v-ng-viewport"), a.value && E.register();
  }), onUnmounted(() => {
    p(), a.value && E.unregister();
  });
  function m(y = {}) {
    var x, z, L;
    f.options = {
      stopTrigger: (x = y.stop) != null ? x : "pointerup",
      selectionType: (z = y.type) != null ? z : "append",
      selectionTypeWithShiftKey: (L = y.withShiftKey) != null ? L : "same"
    }, e.viewMode.value !== "box-selection" && (e.viewMode.value = "box-selection", f.pointers.clear(), l.register());
  }
  function p() {
    e.viewMode.value === "box-selection" && (e.viewMode.value = "default", l.unregister());
  }
  return { isBoxSelectionMode: c, selectionBox: h, startBoxSelection: m, stopBoxSelection: p };
}
function qi(n, e, t, o, i, s, a, c) {
  if (!t.value)
    return;
  const u = t.value, h = $t(n, e, u.pos), f = $t(n, e, {
    x: u.pos.x + u.size.width,
    y: u.pos.y + u.size.height
  }), r = new Set(
    Object.entries(o).filter(([l, d]) => h.x <= d.x && d.x <= f.x && h.y <= d.y && d.y <= f.y).map(([l, d]) => l)
  );
  if (c === "append")
    s.forEach((l) => {
      r.has(l) || s.delete(l);
    }), r.forEach((l) => {
      var b, k;
      const d = (k = (b = i[l]) == null ? void 0 : b.selectable) != null ? k : false;
      (d === true || typeof d == "number" && s.size < d) && s.add(l);
    });
  else {
    const l = new Set(a);
    l.forEach((d) => {
      r.has(d) && l.delete(d);
    }), r.forEach((d) => {
      var b, k;
      if (!a.has(d)) {
        const g = (k = (b = i[d]) == null ? void 0 : b.selectable) != null ? k : false;
        (g === true || typeof g == "number" && l.size < g) && l.add(d);
      }
    }), s.clear(), l.forEach((d) => s.add(d));
  }
}
var Xi = class {
  constructor(e, t, o, i, s, a) {
    this._container = e, this._handlePointerDownEvent = t, this._handlePointerUpEvent = o, this._handlePointerMoveEvent = i, this._handleClickEvent = s, this._handleKeyDownEvent = a, this._ignoreEvent = (c) => c.stopPropagation();
  }
  register() {
    const e = { capture: true, passive: false }, t = q(this._container.value, "container");
    t.addEventListener("pointerdown", this._handlePointerDownEvent, e), t.addEventListener("click", this._handleClickEvent, e), t.addEventListener("pointerenter", this._ignoreEvent, e), t.addEventListener("pointerleave", this._ignoreEvent, e), document.addEventListener("keydown", this._handleKeyDownEvent, e);
  }
  activate() {
    const e = { capture: true, passive: false };
    document.addEventListener("pointermove", this._handlePointerMoveEvent, e), document.addEventListener("pointerup", this._handlePointerUpEvent, e);
  }
  deactivate() {
    const e = { capture: true };
    document.removeEventListener("pointermove", this._handlePointerMoveEvent, e), document.removeEventListener("pointerup", this._handlePointerUpEvent, e);
  }
  unregister() {
    this.deactivate();
    const e = { capture: true };
    if (this._container.value) {
      const t = this._container.value;
      t.removeEventListener("pointerdown", this._handlePointerDownEvent, e), t.removeEventListener("click", this._handleClickEvent, e), t.removeEventListener("pointerenter", this._ignoreEvent, e), t.removeEventListener("pointerleave", this._ignoreEvent, e), document.removeEventListener("keydown", this._handleKeyDownEvent, e);
    }
  }
};
var Gi = class {
  constructor(e, t, o) {
    this._container = e, this._handleKeyDownEvent = t, this._handleKeyUpEvent = o, this._preventDefault = (i) => {
      i.stopPropagation(), i.preventDefault();
    };
  }
  register() {
    document.addEventListener("keydown", this._handleKeyDownEvent, { capture: true, passive: true });
  }
  activate() {
    document.addEventListener("keyup", this._handleKeyUpEvent, { capture: true, passive: true }), q(this._container.value, "container").addEventListener("contextmenu", this._preventDefault, { passive: false });
  }
  deactivate() {
    document.removeEventListener("keyup", this._handleKeyUpEvent, { capture: true }), this._container.value && this._container.value.removeEventListener("contextmenu", this._preventDefault);
  }
  unregister() {
    this.deactivate(), document.removeEventListener("keydown", this._handleKeyDownEvent, { capture: true });
  }
};
var Jn = Symbol("mouseEventHandlers");
function Ki(n, e, t, o, i, s, a, c, u, h, f, r, l, d, b, k) {
  const g = {
    selectionMode: ref("container"),
    viewMode: ref("default")
  };
  a.size > 0 ? g.selectionMode.value = "node" : c.size > 0 ? g.selectionMode.value = "edge" : u.size > 0 && (g.selectionMode.value = "path"), watch(g.viewMode, (w) => {
    k.emit("view:mode", w);
  }), Bi(n, g, d, k);
  const v = oe(oe(oe(oe({
    selectedNodes: a,
    hoveredNodes: h,
    selectedEdges: c,
    hoveredEdges: f,
    selectedPaths: u,
    hoveredPaths: r
  }, Ni(
    o,
    e,
    g,
    h,
    a,
    t,
    k
  )), ji(i, g, f, c, k)), Ri(
    s,
    g,
    r,
    u,
    l,
    k
  )), Fi(
    n,
    g,
    e,
    o,
    a,
    b
  ));
  return provide(Jn, v), v;
}
function Ye() {
  return q(inject(Jn), "mouseEventHandlers");
}
function Yi(n) {
  return { all: n = n || /* @__PURE__ */ new Map(), on: function(e, t) {
    var o = n.get(e);
    o ? o.push(t) : n.set(e, [t]);
  }, off: function(e, t) {
    var o = n.get(e);
    o && (t ? o.splice(o.indexOf(t) >>> 0, 1) : n.set(e, []));
  }, emit: function(e, t) {
    var o = n.get(e);
    o && o.slice().map(function(i) {
      i(t);
    }), (o = n.get("*")) && o.slice().map(function(i) {
      i(e, t);
    });
  } };
}
var eo = Symbol("emitter");
function Qi() {
  const n = Yi();
  return provide(eo, n), n;
}
function Ji() {
  return q(inject(eo), "event emitter");
}
var wn = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : {};
function es(n) {
  return n && n.__esModule && Object.prototype.hasOwnProperty.call(n, "default") ? n.default : n;
}
var kt;
var En;
function dt() {
  if (En)
    return kt;
  En = 1, kt = {
    /**
     * Get global this object
     *
     * @return {Object}        global this object
     */
    getGlobalThis: function() {
      if (typeof globalThis != "undefined")
        return globalThis;
      if (typeof self != "undefined")
        return self;
      if (typeof window != "undefined")
        return window;
      if (typeof wn != "undefined")
        return wn;
      if (typeof this != "undefined")
        return this;
      throw new Error("Unable to locate global `this`");
    },
    /**
     * Extends an object
     *
     * @param  {Object} target object to extend
     * @param  {Object} source object to take properties from
     * @return {Object}        extended object
     */
    extend: function(e, t) {
      e = e || {};
      for (var o in t)
        this.isObject(t[o]) ? e[o] = this.extend(e[o], t[o]) : e[o] = t[o];
      return e;
    },
    /**
     * Checks if an object is a DOM element
     *
     * @param  {Object}  o HTML element or String
     * @return {Boolean}   returns true if object is a DOM element
     */
    isElement: function(e) {
      return e instanceof HTMLElement || e instanceof SVGElement || e instanceof SVGSVGElement || //DOM2
      e && typeof e == "object" && e !== null && e.nodeType === 1 && typeof e.nodeName == "string";
    },
    /**
     * Checks if an object is an Object
     *
     * @param  {Object}  o Object
     * @return {Boolean}   returns true if object is an Object
     */
    isObject: function(e) {
      return Object.prototype.toString.call(e) === "[object Object]";
    },
    /**
     * Checks if variable is Number
     *
     * @param  {Integer|Float}  n
     * @return {Boolean}   returns true if variable is Number
     */
    isNumber: function(e) {
      return !isNaN(parseFloat(e)) && isFinite(e);
    },
    /**
     * Search for an SVG element
     *
     * @param  {Object|String} elementOrSelector DOM Element or selector String
     * @return {Object|Null}                   SVG or null
     */
    getSvg: function(e) {
      var t, o;
      if (this.isElement(e))
        t = e;
      else if (typeof e == "string" || e instanceof String) {
        if (t = document.querySelector(e), !t)
          throw new Error(
            "Provided selector did not find any elements. Selector: " + e
          );
      } else
        throw new Error("Provided selector is not an HTML object nor String");
      if (t.tagName.toLowerCase() === "svg")
        o = t;
      else if (t.tagName.toLowerCase() === "object")
        o = t.contentDocument.documentElement;
      else if (t.tagName.toLowerCase() === "embed")
        o = t.getSVGDocument().documentElement;
      else
        throw t.tagName.toLowerCase() === "img" ? new Error(
          'Cannot script an SVG in an "img" element. Please use an "object" element or an in-line SVG.'
        ) : new Error("Cannot get SVG.");
      return o;
    },
    /**
     * Attach a given context to a function
     * @param  {Function} fn      Function
     * @param  {Object}   context Context
     * @return {Function}           Function with certain context
     */
    proxy: function(e, t) {
      return function() {
        return e.apply(t, arguments);
      };
    },
    /**
     * Returns object type
     * Uses toString that returns [object SVGPoint]
     * And than parses object type from string
     *
     * @param  {Object} o Any object
     * @return {String}   Object type
     */
    getType: function(e) {
      return Object.prototype.toString.apply(e).replace(/^\[object\s/, "").replace(/\]$/, "");
    },
    /**
     * If it is a touch event than add clientX and clientY to event object
     *
     * @param  {Event} evt
     * @param  {SVGSVGElement} svg
     */
    mouseAndTouchNormalize: function(e, t) {
      if (e.clientX === void 0 || e.clientX === null)
        if (e.clientX = 0, e.clientY = 0, e.touches !== void 0 && e.touches.length) {
          if (e.touches[0].clientX !== void 0)
            e.clientX = e.touches[0].clientX, e.clientY = e.touches[0].clientY;
          else if (e.touches[0].pageX !== void 0) {
            var o = t.getBoundingClientRect();
            e.clientX = e.touches[0].pageX - o.left, e.clientY = e.touches[0].pageY - o.top;
          }
        } else
          e.originalEvent !== void 0 && e.originalEvent.clientX !== void 0 && (e.clientX = e.originalEvent.clientX, e.clientY = e.originalEvent.clientY);
    },
    /**
     * If it is a touch event than add clientX and clientY to event object
     *
     * @param  {Event} evt
     * @param  {SVGSVGElement} svg
     * @param  {Number} touch
     */
    touchNormalize: function(e, t, o) {
      if (e.touches !== void 0 && e.touches.length) {
        if (e.touches[o].clientX !== void 0)
          e.clientX = e.touches[o].clientX, e.clientY = e.touches[o].clientY;
        else if (e.touches[o].pageX !== void 0) {
          var i = t.getBoundingClientRect();
          e.clientX = e.touches[o].pageX - i.left, e.clientY = e.touches[o].pageY - i.top;
        }
      } else
        (e.clientX === void 0 || e.clientX === null) && (e.clientX = 0, e.clientY = 0, e.originalEvent !== void 0 && e.originalEvent.clientX !== void 0 && (e.clientX = e.originalEvent.clientX, e.clientY = e.originalEvent.clientY));
    },
    /**
     * Check if an event is a double click/tap
     * TODO: For touch gestures use a library (hammer.js) that takes in account other events
     * (touchmove and touchend). It should take in account tap duration and traveled distance
     *
     * @param  {Event}  evt
     * @param  {Event}  prevEvt Previous Event
     * @return {Boolean}
     */
    isDblClick: function(e, t) {
      if (e.detail === 2)
        return true;
      if (t != null) {
        var o = e.timeStamp - t.timeStamp, i = Math.sqrt(
          Math.pow(e.clientX - t.clientX, 2) + Math.pow(e.clientY - t.clientY, 2)
        );
        return o < 250 && i < 10;
      }
      return false;
    },
    /**
     * Returns current timestamp as an integer
     *
     * @return {Number}
     */
    now: Date.now || function() {
      return (/* @__PURE__ */ new Date()).getTime();
    },
    // From underscore.
    // Returns a function, that, when invoked, will only be triggered at most once
    // during a given window of time. Normally, the throttled function will run
    // as much as it can, without ever going more than once per `wait` duration;
    // but if you'd like to disable the execution on the leading edge, pass
    // `{leading: false}`. To disable execution on the trailing edge, ditto.
    throttle: function(e, t, o) {
      var i = this, s, a, c, u = null, h = 0;
      o || (o = {});
      var f = function() {
        h = o.leading === false ? 0 : i.now(), u = null, c = e.apply(s, a), u || (s = a = null);
      };
      return function() {
        var r = i.now();
        !h && o.leading === false && (h = r);
        var l = t - (r - h);
        return s = this, a = arguments, l <= 0 || l > t ? (clearTimeout(u), u = null, h = r, c = e.apply(s, a), u || (s = a = null)) : !u && o.trailing !== false && (u = setTimeout(f, l)), c;
      };
    },
    /**
     * Create a requestAnimationFrame simulation
     *
     * @param  {Number|String} refreshRate
     * @return {Function}
     */
    createRequestAnimationFrame: function(e) {
      var t = null;
      return e !== "auto" && e < 60 && e > 1 && (t = Math.floor(1e3 / e)), t === null ? window.requestAnimationFrame || n(33) : n(t);
    },
    /**
     * Calculate distance of points
     *
     * @param  {SVGPoint} point1
     * @param  {SVGPoint} point2
     * @return {Number}
     */
    calculateDistance: function(e, t) {
      var o = e.x - t.x, i = e.y - t.y;
      return Math.sqrt(o * o + i * i);
    }
  };
  function n(e) {
    return function(t) {
      window.setTimeout(t, e);
    };
  }
  return kt;
}
var xt;
var kn;
function ts() {
  if (kn)
    return xt;
  kn = 1;
  var n = dt();
  return xt = function() {
    var e = "", t, o, i, s = [], a = { passive: true }, c = { passive: false };
    n.getGlobalThis().addEventListener ? (t = "addEventListener", o = "removeEventListener") : (t = "attachEvent", o = "detachEvent", e = "on");
    function u() {
      return i || (i = "onwheel" in document.createElement("div") ? "wheel" : document.onmousewheel !== void 0 ? "mousewheel" : "DOMMouseScroll"), i;
    }
    function h(g, v) {
      var w = function(E) {
        !E && (E = window.event);
        var m = {
          // keep a ref to the original event object
          originalEvent: E,
          target: E.target || E.srcElement,
          type: "wheel",
          deltaMode: E.type == "MozMousePixelScroll" ? 0 : 1,
          deltaX: 0,
          delatZ: 0,
          preventDefault: function() {
            E.preventDefault ? E.preventDefault() : E.returnValue = false;
          }
        };
        return u() == "mousewheel" ? (m.deltaY = -0.025 * E.wheelDelta, E.wheelDeltaX && (m.deltaX = -0.025 * E.wheelDeltaX)) : m.deltaY = E.detail, v(m);
      };
      return s.push({
        element: g,
        fn: w
      }), w;
    }
    function f(g) {
      for (var v = 0; v < s.length; v++)
        if (s[v].element === g)
          return s[v].fn;
      return function() {
      };
    }
    function r(g) {
      for (var v = 0; v < s.length; v++)
        if (s[v].element === g)
          return s.splice(v, 1);
    }
    function l(g, v, w, E) {
      var m;
      u() === "wheel" ? m = w : m = h(g, w), g[t](
        e + v,
        m,
        E ? a : c
      );
    }
    function d(g, v, w, E) {
      var m;
      u() === "wheel" ? m = w : m = f(g), g[o](
        e + v,
        m,
        E ? a : c
      ), r(g);
    }
    function b(g, v, w) {
      l(g, u(), v, w), u() == "DOMMouseScroll" && l(
        g,
        "MozMousePixelScroll",
        v,
        w
      );
    }
    function k(g, v, w) {
      d(g, u(), v, w), u() == "DOMMouseScroll" && d(
        g,
        "MozMousePixelScroll",
        v,
        w
      );
    }
    return {
      on: b,
      off: k
    };
  }(), xt;
}
var We;
var xn;
function Gt() {
  if (xn)
    return We;
  xn = 1;
  var n = dt(), e = "unknown";
  return (
    /*@cc_on!@*/
    typeof document != "undefined" && document.documentMode && (e = "ie"), We = {
      svgNS: "http://www.w3.org/2000/svg",
      xmlNS: "http://www.w3.org/XML/1998/namespace",
      xmlnsNS: "http://www.w3.org/2000/xmlns/",
      xlinkNS: "http://www.w3.org/1999/xlink",
      evNS: "http://www.w3.org/2001/xml-events",
      /**
       * Get svg dimensions: width and height
       *
       * @param  {SVGSVGElement} svg
       * @return {Object}     {width: 0, height: 0}
       */
      getBoundingClientRectNormalized: function(t) {
        if (t.clientWidth && t.clientHeight)
          return { width: t.clientWidth, height: t.clientHeight };
        if (t.getBoundingClientRect())
          return t.getBoundingClientRect();
        throw new Error("Cannot get BoundingClientRect for SVG.");
      },
      /**
       * Gets g element with class of "viewport" or creates it if it doesn't exist
       *
       * @param  {SVGSVGElement} svg
       * @return {SVGElement}     g (group) element
       */
      getOrCreateViewport: function(t, o) {
        var i = null;
        if (n.isElement(o) ? i = o : i = t.querySelector(o), !i) {
          var s = Array.prototype.slice.call(t.childNodes || t.children).filter(function(f) {
            return f.nodeName !== "defs" && f.nodeName !== "#text";
          });
          s.length === 1 && s[0].nodeName === "g" && s[0].getAttribute("transform") === null && (i = s[0]);
        }
        if (!i) {
          var a = "viewport-" + (/* @__PURE__ */ new Date()).toISOString().replace(/\D/g, "");
          i = document.createElementNS(this.svgNS, "g"), i.setAttribute("id", a);
          var c = t.childNodes || t.children;
          if (c && c.length > 0)
            for (var u = c.length; u > 0; u--)
              c[c.length - u].nodeName !== "defs" && i.appendChild(c[c.length - u]);
          t.appendChild(i);
        }
        var h = [];
        return i.getAttribute("class") && (h = i.getAttribute("class").split(" ")), ~h.indexOf("svg-pan-zoom_viewport") || (h.push("svg-pan-zoom_viewport"), i.setAttribute("class", h.join(" "))), i;
      },
      /**
       * Set SVG attributes
       *
       * @param  {SVGSVGElement} svg
       */
      setupSvgAttributes: function(t) {
        if (t.setAttribute("xmlns", this.svgNS), t.setAttributeNS(this.xmlnsNS, "xmlns:xlink", this.xlinkNS), t.setAttributeNS(this.xmlnsNS, "xmlns:ev", this.evNS), t.parentNode !== null) {
          var o = t.getAttribute("style") || "";
          o.toLowerCase().indexOf("overflow") === -1 && t.setAttribute("style", "overflow: hidden; " + o);
        }
      },
      /**
       * How long Internet Explorer takes to finish updating its display (ms).
       */
      internetExplorerRedisplayInterval: 300,
      /**
       * Forces the browser to redisplay all SVG elements that rely on an
       * element defined in a 'defs' section. It works globally, for every
       * available defs element on the page.
       * The throttling is intentionally global.
       *
       * This is only needed for IE. It is as a hack to make markers (and 'use' elements?)
       * visible after pan/zoom when there are multiple SVGs on the page.
       * See bug report: https://connect.microsoft.com/IE/feedback/details/781964/
       * also see svg-pan-zoom issue: https://github.com/ariutta/svg-pan-zoom/issues/62
       */
      refreshDefsGlobal: n.throttle(
        function() {
          for (var t = document.querySelectorAll("defs"), o = t.length, i = 0; i < o; i++) {
            var s = t[i];
            s.parentNode.insertBefore(s, s);
          }
        },
        We ? We.internetExplorerRedisplayInterval : null
      ),
      /**
       * Sets the current transform matrix of an element
       *
       * @param {SVGElement} element
       * @param {SVGMatrix} matrix  CTM
       * @param {SVGElement} defs
       */
      setCTM: function(t, o, i) {
        var s = this, a = "matrix(" + o.a + "," + o.b + "," + o.c + "," + o.d + "," + o.e + "," + o.f + ")";
        t.setAttributeNS(null, "transform", a), "transform" in t.style ? t.style.transform = a : "-ms-transform" in t.style ? t.style["-ms-transform"] = a : "-webkit-transform" in t.style && (t.style["-webkit-transform"] = a), e === "ie" && i && (i.parentNode.insertBefore(i, i), window.setTimeout(function() {
          s.refreshDefsGlobal();
        }, s.internetExplorerRedisplayInterval));
      },
      /**
       * Instantiate an SVGPoint object with given event coordinates
       *
       * @param {Event} evt
       * @param  {SVGSVGElement} svg
       * @return {SVGPoint}     point
       */
      getEventPoint: function(t, o) {
        var i = o.createSVGPoint();
        return n.mouseAndTouchNormalize(t, o), i.x = t.clientX, i.y = t.clientY, i;
      },
      /**
       * Instantiate an SVGPoint object with given touch event coordinates
       *
       * @param {Event} evt
       * @param  {SVGSVGElement} svg
       * @param  {Number} touch
       * @return {SVGPoint}     point
       */
      getTouchPoint: function(t, o, i) {
        var s = o.createSVGPoint();
        return n.touchNormalize(t, o, i), s.x = t.clientX, s.y = t.clientY, s;
      },
      /**
       * Get SVG center point
       *
       * @param  {SVGSVGElement} svg
       * @return {SVGPoint}
       */
      getSvgCenterPoint: function(t, o, i) {
        return this.createSVGPoint(t, o / 2, i / 2);
      },
      /**
       * Create a SVGPoint with given x and y
       *
       * @param  {SVGSVGElement} svg
       * @param  {Number} x
       * @param  {Number} y
       * @return {SVGPoint}
       */
      createSVGPoint: function(t, o, i) {
        var s = t.createSVGPoint();
        return s.x = o, s.y = i, s;
      }
    }, We
  );
}
var Pt;
var Pn;
function ns() {
  if (Pn)
    return Pt;
  Pn = 1;
  var n = Gt();
  return Pt = {
    enable: function(e) {
      var t = e.svg.querySelector("defs");
      t || (t = document.createElementNS(n.svgNS, "defs"), e.svg.appendChild(t));
      var o = t.querySelector("style#svg-pan-zoom-controls-styles");
      if (!o) {
        var i = document.createElementNS(n.svgNS, "style");
        i.setAttribute("id", "svg-pan-zoom-controls-styles"), i.setAttribute("type", "text/css"), i.textContent = ".svg-pan-zoom-control { cursor: pointer; fill: black; fill-opacity: 0.333; } .svg-pan-zoom-control:hover { fill-opacity: 0.8; } .svg-pan-zoom-control-background { fill: white; fill-opacity: 0.5; } .svg-pan-zoom-control-background { fill-opacity: 0.8; }", t.appendChild(i);
      }
      var s = document.createElementNS(n.svgNS, "g");
      s.setAttribute("id", "svg-pan-zoom-controls"), s.setAttribute(
        "transform",
        "translate(" + (e.width - 70) + " " + (e.height - 76) + ") scale(0.75)"
      ), s.setAttribute("class", "svg-pan-zoom-control"), s.appendChild(this._createZoomIn(e)), s.appendChild(this._createZoomReset(e)), s.appendChild(this._createZoomOut(e)), e.svg.appendChild(s), e.controlIcons = s;
    },
    _createZoomIn: function(e) {
      var t = document.createElementNS(n.svgNS, "g");
      t.setAttribute("id", "svg-pan-zoom-zoom-in"), t.setAttribute("transform", "translate(30.5 5) scale(0.015)"), t.setAttribute("class", "svg-pan-zoom-control"), t.addEventListener(
        "click",
        function() {
          e.getPublicInstance().zoomIn();
        },
        false
      ), t.addEventListener(
        "touchstart",
        function() {
          e.getPublicInstance().zoomIn();
        },
        false
      );
      var o = document.createElementNS(n.svgNS, "rect");
      o.setAttribute("x", "0"), o.setAttribute("y", "0"), o.setAttribute("width", "1500"), o.setAttribute("height", "1400"), o.setAttribute("class", "svg-pan-zoom-control-background"), t.appendChild(o);
      var i = document.createElementNS(n.svgNS, "path");
      return i.setAttribute(
        "d",
        "M1280 576v128q0 26 -19 45t-45 19h-320v320q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-320h-320q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h320v-320q0 -26 19 -45t45 -19h128q26 0 45 19t19 45v320h320q26 0 45 19t19 45zM1536 1120v-960 q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z"
      ), i.setAttribute("class", "svg-pan-zoom-control-element"), t.appendChild(i), t;
    },
    _createZoomReset: function(e) {
      var t = document.createElementNS(n.svgNS, "g");
      t.setAttribute("id", "svg-pan-zoom-reset-pan-zoom"), t.setAttribute("transform", "translate(5 35) scale(0.4)"), t.setAttribute("class", "svg-pan-zoom-control"), t.addEventListener(
        "click",
        function() {
          e.getPublicInstance().reset();
        },
        false
      ), t.addEventListener(
        "touchstart",
        function() {
          e.getPublicInstance().reset();
        },
        false
      );
      var o = document.createElementNS(
        n.svgNS,
        "rect"
      );
      o.setAttribute("x", "2"), o.setAttribute("y", "2"), o.setAttribute("width", "182"), o.setAttribute("height", "58"), o.setAttribute(
        "class",
        "svg-pan-zoom-control-background"
      ), t.appendChild(o);
      var i = document.createElementNS(
        n.svgNS,
        "path"
      );
      i.setAttribute(
        "d",
        "M33.051,20.632c-0.742-0.406-1.854-0.609-3.338-0.609h-7.969v9.281h7.769c1.543,0,2.701-0.188,3.473-0.562c1.365-0.656,2.048-1.953,2.048-3.891C35.032,22.757,34.372,21.351,33.051,20.632z"
      ), i.setAttribute(
        "class",
        "svg-pan-zoom-control-element"
      ), t.appendChild(i);
      var s = document.createElementNS(
        n.svgNS,
        "path"
      );
      return s.setAttribute(
        "d",
        "M170.231,0.5H15.847C7.102,0.5,0.5,5.708,0.5,11.84v38.861C0.5,56.833,7.102,61.5,15.847,61.5h154.384c8.745,0,15.269-4.667,15.269-10.798V11.84C185.5,5.708,178.976,0.5,170.231,0.5z M42.837,48.569h-7.969c-0.219-0.766-0.375-1.383-0.469-1.852c-0.188-0.969-0.289-1.961-0.305-2.977l-0.047-3.211c-0.03-2.203-0.41-3.672-1.142-4.406c-0.732-0.734-2.103-1.102-4.113-1.102h-7.05v13.547h-7.055V14.022h16.524c2.361,0.047,4.178,0.344,5.45,0.891c1.272,0.547,2.351,1.352,3.234,2.414c0.731,0.875,1.31,1.844,1.737,2.906s0.64,2.273,0.64,3.633c0,1.641-0.414,3.254-1.242,4.84s-2.195,2.707-4.102,3.363c1.594,0.641,2.723,1.551,3.387,2.73s0.996,2.98,0.996,5.402v2.32c0,1.578,0.063,2.648,0.19,3.211c0.19,0.891,0.635,1.547,1.333,1.969V48.569z M75.579,48.569h-26.18V14.022h25.336v6.117H56.454v7.336h16.781v6H56.454v8.883h19.125V48.569z M104.497,46.331c-2.44,2.086-5.887,3.129-10.34,3.129c-4.548,0-8.125-1.027-10.731-3.082s-3.909-4.879-3.909-8.473h6.891c0.224,1.578,0.662,2.758,1.316,3.539c1.196,1.422,3.246,2.133,6.15,2.133c1.739,0,3.151-0.188,4.236-0.562c2.058-0.719,3.087-2.055,3.087-4.008c0-1.141-0.504-2.023-1.512-2.648c-1.008-0.609-2.607-1.148-4.796-1.617l-3.74-0.82c-3.676-0.812-6.201-1.695-7.576-2.648c-2.328-1.594-3.492-4.086-3.492-7.477c0-3.094,1.139-5.664,3.417-7.711s5.623-3.07,10.036-3.07c3.685,0,6.829,0.965,9.431,2.895c2.602,1.93,3.966,4.73,4.093,8.402h-6.938c-0.128-2.078-1.057-3.555-2.787-4.43c-1.154-0.578-2.587-0.867-4.301-0.867c-1.907,0-3.428,0.375-4.565,1.125c-1.138,0.75-1.706,1.797-1.706,3.141c0,1.234,0.561,2.156,1.682,2.766c0.721,0.406,2.25,0.883,4.589,1.43l6.063,1.43c2.657,0.625,4.648,1.461,5.975,2.508c2.059,1.625,3.089,3.977,3.089,7.055C108.157,41.624,106.937,44.245,104.497,46.331z M139.61,48.569h-26.18V14.022h25.336v6.117h-18.281v7.336h16.781v6h-16.781v8.883h19.125V48.569z M170.337,20.14h-10.336v28.43h-7.266V20.14h-10.383v-6.117h27.984V20.14z"
      ), s.setAttribute(
        "class",
        "svg-pan-zoom-control-element"
      ), t.appendChild(s), t;
    },
    _createZoomOut: function(e) {
      var t = document.createElementNS(n.svgNS, "g");
      t.setAttribute("id", "svg-pan-zoom-zoom-out"), t.setAttribute("transform", "translate(30.5 70) scale(0.015)"), t.setAttribute("class", "svg-pan-zoom-control"), t.addEventListener(
        "click",
        function() {
          e.getPublicInstance().zoomOut();
        },
        false
      ), t.addEventListener(
        "touchstart",
        function() {
          e.getPublicInstance().zoomOut();
        },
        false
      );
      var o = document.createElementNS(n.svgNS, "rect");
      o.setAttribute("x", "0"), o.setAttribute("y", "0"), o.setAttribute("width", "1500"), o.setAttribute("height", "1400"), o.setAttribute("class", "svg-pan-zoom-control-background"), t.appendChild(o);
      var i = document.createElementNS(n.svgNS, "path");
      return i.setAttribute(
        "d",
        "M1280 576v128q0 26 -19 45t-45 19h-896q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h896q26 0 45 19t19 45zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5 t84.5 -203.5z"
      ), i.setAttribute("class", "svg-pan-zoom-control-element"), t.appendChild(i), t;
    },
    disable: function(e) {
      e.controlIcons && (e.controlIcons.parentNode.removeChild(e.controlIcons), e.controlIcons = null);
    }
  }, Pt;
}
var St;
var Sn;
function os() {
  if (Sn)
    return St;
  Sn = 1;
  var n = Gt(), e = dt(), t = function(o, i) {
    this.init(o, i);
  };
  return t.prototype.init = function(o, i) {
    this.viewport = o, this.options = i, this.originalState = { zoom: 1, x: 0, y: 0 }, this.activeState = { zoom: 1, x: 0, y: 0 }, this.updateCTMCached = e.proxy(this.updateCTM, this), this.requestAnimationFrame = e.createRequestAnimationFrame(
      this.options.refreshRate
    ), this.viewBox = { x: 0, y: 0, width: 0, height: 0 }, this.cacheViewBox();
    var s = this.processCTM();
    this.setCTM(s), this.updateCTM();
  }, t.prototype.cacheViewBox = function() {
    var o = this.options.svg.getAttribute("viewBox");
    if (o) {
      var i = o.split(/[\s\,]/).filter(function(a) {
        return a;
      }).map(parseFloat);
      this.viewBox.x = i[0], this.viewBox.y = i[1], this.viewBox.width = i[2], this.viewBox.height = i[3];
      var s = Math.min(
        this.options.width / this.viewBox.width,
        this.options.height / this.viewBox.height
      );
      this.activeState.zoom = isFinite(s) ? s : 1, this.activeState.x = (this.options.width - this.viewBox.width * s) / 2, this.activeState.y = (this.options.height - this.viewBox.height * s) / 2, this.updateCTMOnNextFrame(), this.options.svg.removeAttribute("viewBox");
    } else
      this.simpleViewBoxCache();
  }, t.prototype.simpleViewBoxCache = function() {
    var o = this.viewport.getBBox();
    this.viewBox.x = o.x, this.viewBox.y = o.y, this.viewBox.width = o.width, this.viewBox.height = o.height;
  }, t.prototype.getViewBox = function() {
    return e.extend({}, this.viewBox);
  }, t.prototype.processCTM = function() {
    var o = this.getCTM();
    if (this.options.fit || this.options.contain) {
      var i;
      this.options.fit ? i = Math.min(
        this.options.width / this.viewBox.width,
        this.options.height / this.viewBox.height
      ) : i = Math.max(
        this.options.width / this.viewBox.width,
        this.options.height / this.viewBox.height
      ), i = isFinite(i) ? i : 1, o.a = i, o.d = i, o.e = -this.viewBox.x * i, o.f = -this.viewBox.y * i;
    }
    if (this.options.center) {
      var s = (this.options.width - (this.viewBox.width + this.viewBox.x * 2) * o.a) * 0.5, a = (this.options.height - (this.viewBox.height + this.viewBox.y * 2) * o.a) * 0.5;
      o.e = s, o.f = a;
    }
    return this.originalState.zoom = o.a, this.originalState.x = o.e, this.originalState.y = o.f, o;
  }, t.prototype.getOriginalState = function() {
    return e.extend({}, this.originalState);
  }, t.prototype.getState = function() {
    return e.extend({}, this.activeState);
  }, t.prototype.getZoom = function() {
    return this.activeState.zoom;
  }, t.prototype.getRelativeZoom = function() {
    return this.activeState.zoom / this.originalState.zoom;
  }, t.prototype.computeRelativeZoom = function(o) {
    return o / this.originalState.zoom;
  }, t.prototype.getPan = function() {
    return { x: this.activeState.x, y: this.activeState.y };
  }, t.prototype.getCTM = function() {
    var o = this.options.svg.createSVGMatrix();
    return o.a = this.activeState.zoom, o.b = 0, o.c = 0, o.d = this.activeState.zoom, o.e = this.activeState.x, o.f = this.activeState.y, o;
  }, t.prototype.setCTM = function(o) {
    var i = this.isZoomDifferent(o), s = this.isPanDifferent(o);
    if (i || s) {
      if (i && (this.options.beforeZoom(
        this.getRelativeZoom(),
        this.computeRelativeZoom(o.a)
      ) === false ? (o.a = o.d = this.activeState.zoom, i = false) : (this.updateCache(o), this.options.onZoom(this.getRelativeZoom()))), s) {
        var a = this.options.beforePan(this.getPan(), {
          x: o.e,
          y: o.f
        }), c = false, u = false;
        a === false ? (o.e = this.getPan().x, o.f = this.getPan().y, c = u = true) : e.isObject(a) && (a.x === false ? (o.e = this.getPan().x, c = true) : e.isNumber(a.x) && (o.e = a.x), a.y === false ? (o.f = this.getPan().y, u = true) : e.isNumber(a.y) && (o.f = a.y)), c && u || !this.isPanDifferent(o) ? s = false : (this.updateCache(o), this.options.onPan(this.getPan()));
      }
      (i || s) && this.updateCTMOnNextFrame();
    }
  }, t.prototype.isZoomDifferent = function(o) {
    return this.activeState.zoom !== o.a;
  }, t.prototype.isPanDifferent = function(o) {
    return this.activeState.x !== o.e || this.activeState.y !== o.f;
  }, t.prototype.updateCache = function(o) {
    this.activeState.zoom = o.a, this.activeState.x = o.e, this.activeState.y = o.f;
  }, t.prototype.pendingUpdate = false, t.prototype.updateCTMOnNextFrame = function() {
    this.pendingUpdate || (this.pendingUpdate = true, this.requestAnimationFrame.call(window, this.updateCTMCached));
  }, t.prototype.updateCTM = function() {
    var o = this.getCTM();
    n.setCTM(this.viewport, o, this.defs), this.pendingUpdate = false, this.options.onUpdatedCTM && this.options.onUpdatedCTM(o);
  }, St = function(o, i) {
    return new t(o, i);
  }, St;
}
var Mt;
var Mn;
function is() {
  if (Mn)
    return Mt;
  Mn = 1;
  var n = ts(), e = ns(), t = dt(), o = Gt(), i = os(), s = function(r, l) {
    this.init(r, l);
  }, a = {
    viewportSelector: ".svg-pan-zoom_viewport",
    // Viewport selector. Can be querySelector string or SVGElement
    panEnabled: true,
    // enable or disable panning (default enabled)
    controlIconsEnabled: false,
    // insert icons to give user an option in addition to mouse events to control pan/zoom (default disabled)
    zoomEnabled: true,
    // enable or disable zooming (default enabled)
    dblClickZoomEnabled: true,
    // enable or disable zooming by double clicking (default enabled)
    mouseWheelZoomEnabled: true,
    // enable or disable zooming by mouse wheel (default enabled)
    preventMouseEventsDefault: true,
    // enable or disable preventDefault for mouse events
    zoomScaleSensitivity: 0.1,
    // Zoom sensitivity
    minZoom: 0.5,
    // Minimum Zoom level
    maxZoom: 10,
    // Maximum Zoom level
    fit: true,
    // enable or disable viewport fit in SVG (default true)
    contain: false,
    // enable or disable viewport contain the svg (default false)
    center: true,
    // enable or disable viewport centering in SVG (default true)
    refreshRate: "auto",
    // Maximum number of frames per second (altering SVG's viewport)
    beforeZoom: null,
    onZoom: null,
    beforePan: null,
    onPan: null,
    customEventsHandler: null,
    eventsListenerElement: null,
    onUpdatedCTM: null
  }, c = { passive: true }, u = { passive: false };
  s.prototype.init = function(r, l) {
    var d = this;
    this.svg = r, this.defs = r.querySelector("defs"), o.setupSvgAttributes(this.svg), this.options = t.extend(t.extend({}, a), l), this.state = "none";
    var b = o.getBoundingClientRectNormalized(r);
    this.width = b.width, this.height = b.height, this.viewport = i(
      o.getOrCreateViewport(this.svg, this.options.viewportSelector),
      {
        svg: this.svg,
        width: this.width,
        height: this.height,
        fit: this.options.fit,
        contain: this.options.contain,
        center: this.options.center,
        refreshRate: this.options.refreshRate,
        // Put callbacks into functions as they can change through time
        beforeZoom: function(g, v) {
          if (d.viewport && d.options.beforeZoom)
            return d.options.beforeZoom(g, v);
        },
        onZoom: function(g) {
          if (d.viewport && d.options.onZoom)
            return d.options.onZoom(g);
        },
        beforePan: function(g, v) {
          if (d.viewport && d.options.beforePan)
            return d.options.beforePan(g, v);
        },
        onPan: function(g) {
          if (d.viewport && d.options.onPan)
            return d.options.onPan(g);
        },
        onUpdatedCTM: function(g) {
          if (d.viewport && d.options.onUpdatedCTM)
            return d.options.onUpdatedCTM(g);
        }
      }
    );
    var k = this.getPublicInstance();
    k.setBeforeZoom(this.options.beforeZoom), k.setOnZoom(this.options.onZoom), k.setBeforePan(this.options.beforePan), k.setOnPan(this.options.onPan), k.setOnUpdatedCTM(this.options.onUpdatedCTM), this.options.controlIconsEnabled && e.enable(this), this.lastMouseWheelEventTime = Date.now(), this.setupHandlers();
  }, s.prototype.setupHandlers = function() {
    var r = this, l = null;
    if (this.eventListeners = {
      // Mouse down group
      pointerdown: function(g) {
        if (g.pointerType !== "touch") {
          var v = r.handleMouseDown(g, l);
          return l = g, v;
        }
      },
      touchstart: function(g) {
        var v = r.handleTouchStart(g, l);
        return l = g, v;
      },
      // Mouse up group
      pointerup: function(g) {
        if (g.pointerType !== "touch")
          return r.handleMouseUp(g);
      },
      touchend: function(g) {
        return r.handleTouchEnd(g);
      },
      // Mouse move group
      pointermove: function(g) {
        if (g.pointerType !== "touch")
          return r.handleMouseMove(g);
      },
      touchmove: function(g) {
        return r.handleTouchMove(g);
      },
      // Mouse leave group
      pointerleave: function(g) {
        if (g.pointerType !== "touch")
          return r.handleMouseUp(g);
      },
      pointercancel: function(g) {
        if (g.pointerType !== "touch")
          return r.handleMouseUp(g);
      },
      touchleave: function(g) {
        return r.handleTouchEnd(g);
      },
      touchcancel: function(g) {
        return r.handleTouchEnd(g);
      }
    }, this.options.customEventsHandler != null) {
      this.options.customEventsHandler.init({
        svgElement: this.svg,
        eventsListenerElement: this.options.eventsListenerElement,
        instance: this.getPublicInstance()
      });
      var d = this.options.customEventsHandler.haltEventListeners;
      if (d && d.length)
        for (var b = d.length - 1; b >= 0; b--)
          this.eventListeners.hasOwnProperty(d[b]) && delete this.eventListeners[d[b]];
    }
    for (var k in this.eventListeners)
      (this.options.eventsListenerElement || this.svg).addEventListener(
        k,
        this.eventListeners[k],
        this.options.preventMouseEventsDefault ? u : c
      );
    this.options.mouseWheelZoomEnabled && (this.options.mouseWheelZoomEnabled = false, this.enableMouseWheelZoom());
  }, s.prototype.enableMouseWheelZoom = function() {
    if (!this.options.mouseWheelZoomEnabled) {
      var r = this;
      this.wheelListener = function(d) {
        return r.handleMouseWheel(d);
      };
      var l = !this.options.preventMouseEventsDefault;
      n.on(
        this.options.eventsListenerElement || this.svg,
        this.wheelListener,
        l
      ), this.options.mouseWheelZoomEnabled = true;
    }
  }, s.prototype.disableMouseWheelZoom = function() {
    if (this.options.mouseWheelZoomEnabled) {
      var r = !this.options.preventMouseEventsDefault;
      n.off(
        this.options.eventsListenerElement || this.svg,
        this.wheelListener,
        r
      ), this.options.mouseWheelZoomEnabled = false;
    }
  }, s.prototype.handleMouseWheel = function(r) {
    if (!(!this.options.zoomEnabled || this.state !== "none")) {
      this.options.preventMouseEventsDefault && (r.preventDefault ? r.preventDefault() : r.returnValue = false);
      var l = r.deltaY || 1, d = Date.now() - this.lastMouseWheelEventTime, b = 3 + Math.max(0, 30 - d);
      this.lastMouseWheelEventTime = Date.now(), "deltaMode" in r && r.deltaMode === 0 && r.wheelDelta && (l = r.deltaY === 0 ? 0 : Math.abs(r.wheelDelta) / r.deltaY), l = -0.3 < l && l < 0.3 ? l : (l > 0 ? 1 : -1) * Math.log(Math.abs(l) + 10) / b;
      var k = this.svg.getScreenCTM().inverse(), g = o.getEventPoint(r, this.svg).matrixTransform(
        k
      ), v = Math.pow(1 + this.options.zoomScaleSensitivity, -1 * l);
      this.zoomAtPoint(v, g);
    }
  }, s.prototype.zoomAtPoint = function(r, l, d) {
    var b = this.viewport.getOriginalState();
    d ? (r = Math.max(
      this.options.minZoom * b.zoom,
      Math.min(this.options.maxZoom * b.zoom, r)
    ), r = r / this.getZoom()) : this.getZoom() * r < this.options.minZoom * b.zoom ? r = this.options.minZoom * b.zoom / this.getZoom() : this.getZoom() * r > this.options.maxZoom * b.zoom && (r = this.options.maxZoom * b.zoom / this.getZoom());
    var k = this.viewport.getCTM(), g = l.matrixTransform(k.inverse()), v = this.svg.createSVGMatrix().translate(g.x, g.y).scale(r).translate(-g.x, -g.y), w = k.multiply(v);
    w.a !== k.a && this.viewport.setCTM(w);
  }, s.prototype.zoom = function(r, l) {
    this.zoomAtPoint(
      r,
      o.getSvgCenterPoint(this.svg, this.width, this.height),
      l
    );
  }, s.prototype.publicZoom = function(r, l) {
    l && (r = this.computeFromRelativeZoom(r)), this.zoom(r, l);
  }, s.prototype.publicZoomAtPoint = function(r, l, d) {
    if (d && (r = this.computeFromRelativeZoom(r)), t.getType(l) !== "SVGPoint")
      if ("x" in l && "y" in l)
        l = o.createSVGPoint(this.svg, l.x, l.y);
      else
        throw new Error("Given point is invalid");
    this.zoomAtPoint(r, l, d);
  }, s.prototype.getZoom = function() {
    return this.viewport.getZoom();
  }, s.prototype.getRelativeZoom = function() {
    return this.viewport.getRelativeZoom();
  }, s.prototype.computeFromRelativeZoom = function(r) {
    return r * this.viewport.getOriginalState().zoom;
  }, s.prototype.resetZoom = function() {
    var r = this.viewport.getOriginalState();
    this.zoom(r.zoom, true);
  }, s.prototype.resetPan = function() {
    this.pan(this.viewport.getOriginalState());
  }, s.prototype.reset = function() {
    this.resetZoom(), this.resetPan();
  }, s.prototype.handleDblClick = function(r) {
    if (this.options.preventMouseEventsDefault && (r.preventDefault ? r.preventDefault() : r.returnValue = false), this.options.controlIconsEnabled) {
      var l = r.target.getAttribute("class") || "";
      if (l.indexOf("svg-pan-zoom-control") > -1)
        return false;
    }
    var d;
    r.shiftKey ? d = 1 / ((1 + this.options.zoomScaleSensitivity) * 2) : d = (1 + this.options.zoomScaleSensitivity) * 2;
    var b = o.getEventPoint(r, this.svg).matrixTransform(
      this.svg.getScreenCTM().inverse()
    );
    this.zoomAtPoint(d, b);
  }, s.prototype.handleMouseDown = function(r, l) {
    this.options.preventMouseEventsDefault && (r.preventDefault ? r.preventDefault() : r.returnValue = false), t.mouseAndTouchNormalize(r, this.svg), this.options.dblClickZoomEnabled && t.isDblClick(r, l) ? this.handleDblClick(r) : (this.state = "pan", this.firstEventCTM = this.viewport.getCTM(), this.stateOrigin = o.getEventPoint(r, this.svg).matrixTransform(
      this.firstEventCTM.inverse()
    ));
  }, s.prototype.handleMouseMove = function(r) {
    if (this.options.preventMouseEventsDefault && (r.preventDefault ? r.preventDefault() : r.returnValue = false), this.state === "pan" && this.options.panEnabled) {
      var l = o.getEventPoint(r, this.svg).matrixTransform(
        this.firstEventCTM.inverse()
      ), d = this.firstEventCTM.translate(
        l.x - this.stateOrigin.x,
        l.y - this.stateOrigin.y
      );
      this.viewport.setCTM(d);
    }
  }, s.prototype.handleMouseUp = function(r) {
    this.options.preventMouseEventsDefault && (r.preventDefault ? r.preventDefault() : r.returnValue = false), this.state === "pan" && (this.state = "none");
  }, s.prototype.handleTouchStart = function(r, l) {
    if (r.touches.length == 1)
      this.handleMouseDown(r, l);
    else {
      this.options.preventMouseEventsDefault && (r.preventDefault ? r.preventDefault() : r.returnValue = false), this.firstEventCTM = this.viewport.getCTM();
      var d = o.getTouchPoint(r, this.svg, 0), b = o.getTouchPoint(r, this.svg, 1);
      this.firstDistance = t.calculateDistance(d, b), d.x = (d.x + b.x) / 2, d.y = (d.y + b.y) / 2, this.stateOrigin = d.matrixTransform(this.firstEventCTM.inverse()), this.firstZoomLevel = this.getZoom();
    }
  }, s.prototype.handleTouchMove = function(r) {
    if (r.touches.length == 1)
      this.handleMouseMove(r);
    else {
      if (this.options.preventMouseEventsDefault && (r.preventDefault ? r.preventDefault() : r.returnValue = false), !this.options.panEnabled && !this.options.zoomEnabled)
        return;
      var l = o.getTouchPoint(r, this.svg, 0), d = o.getTouchPoint(r, this.svg, 1), b = this.svg.createSVGPoint();
      if (b.x = (l.x + d.x) / 2, b.y = (l.y + d.y) / 2, this.state === "pan" && this.options.panEnabled) {
        var k = b.matrixTransform(this.firstEventCTM.inverse()), g = this.firstEventCTM.translate(
          k.x - this.stateOrigin.x,
          k.y - this.stateOrigin.y
        );
        this.viewport.setCTM(g);
      }
      if (this.options.zoomEnabled) {
        var v = t.calculateDistance(l, d), w = v / this.firstDistance, E = this.svg.getScreenCTM().inverse(), m = b.matrixTransform(E);
        this.zoomAtPoint(this.firstZoomLevel * w, m, true);
      }
    }
  }, s.prototype.handleTouchEnd = function(r) {
    if (r.touches.length == 0)
      this.handleMouseUp(r);
    else if (this.options.preventMouseEventsDefault && (r.preventDefault ? r.preventDefault() : r.returnValue = false), this.firstEventCTM = this.viewport.getCTM(), r.touches.length == 1)
      this.stateOrigin = o.getEventPoint(r, this.svg).matrixTransform(
        this.firstEventCTM.inverse()
      );
    else {
      var l = o.getTouchPoint(r, this.svg, 0), d = o.getTouchPoint(r, this.svg, 1);
      this.firstDistance = t.calculateDistance(l, d), l.x = (l.x + d.x) / 2, l.y = (l.y + d.y) / 2, this.stateOrigin = l.matrixTransform(this.firstEventCTM.inverse());
    }
  }, s.prototype.fit = function() {
    var r = this.viewport.getViewBox(), l = Math.min(
      this.width / r.width,
      this.height / r.height
    );
    this.zoom(l, true);
  }, s.prototype.contain = function() {
    var r = this.viewport.getViewBox(), l = Math.max(
      this.width / r.width,
      this.height / r.height
    );
    this.zoom(l, true);
  }, s.prototype.center = function() {
    var r = this.viewport.getViewBox(), l = (this.width - (r.width + r.x * 2) * this.getZoom()) * 0.5, d = (this.height - (r.height + r.y * 2) * this.getZoom()) * 0.5;
    this.getPublicInstance().pan({ x: l, y: d });
  }, s.prototype.updateBBox = function() {
    this.viewport.simpleViewBoxCache();
  }, s.prototype.pan = function(r) {
    var l = this.viewport.getCTM();
    l.e = r.x, l.f = r.y, this.viewport.setCTM(l);
  }, s.prototype.panBy = function(r) {
    var l = this.viewport.getCTM();
    l.e += r.x, l.f += r.y, this.viewport.setCTM(l);
  }, s.prototype.getPan = function() {
    var r = this.viewport.getState();
    return { x: r.x, y: r.y };
  }, s.prototype.resize = function() {
    var r = o.getBoundingClientRectNormalized(
      this.svg
    );
    this.width = r.width, this.height = r.height;
    var l = this.viewport;
    l.options.width = this.width, l.options.height = this.height, l.processCTM(), this.options.controlIconsEnabled && (this.getPublicInstance().disableControlIcons(), this.getPublicInstance().enableControlIcons());
  }, s.prototype.destroy = function() {
    var r = this;
    this.beforeZoom = null, this.onZoom = null, this.beforePan = null, this.onPan = null, this.onUpdatedCTM = null, this.options.customEventsHandler != null && this.options.customEventsHandler.destroy({
      svgElement: this.svg,
      eventsListenerElement: this.options.eventsListenerElement,
      instance: this.getPublicInstance()
    });
    for (var l in this.eventListeners)
      (this.options.eventsListenerElement || this.svg).removeEventListener(
        l,
        this.eventListeners[l],
        this.options.preventMouseEventsDefault ? u : c
      );
    this.disableMouseWheelZoom(), this.getPublicInstance().disableControlIcons(), h = h.filter(function(d) {
      return d.svg !== r.svg;
    }), delete this.options, delete this.viewport, delete this.publicInstance, delete this.pi, this.getPublicInstance = function() {
      return null;
    };
  }, s.prototype.getPublicInstance = function() {
    var r = this;
    return this.publicInstance || (this.publicInstance = this.pi = {
      // Pan
      enablePan: function() {
        return r.options.panEnabled = true, r.pi;
      },
      disablePan: function() {
        return r.options.panEnabled = false, r.pi;
      },
      isPanEnabled: function() {
        return !!r.options.panEnabled;
      },
      pan: function(l) {
        return r.pan(l), r.pi;
      },
      panBy: function(l) {
        return r.panBy(l), r.pi;
      },
      getPan: function() {
        return r.getPan();
      },
      // Pan event
      setBeforePan: function(l) {
        return r.options.beforePan = l === null ? null : t.proxy(l, r.publicInstance), r.pi;
      },
      setOnPan: function(l) {
        return r.options.onPan = l === null ? null : t.proxy(l, r.publicInstance), r.pi;
      },
      // Zoom and Control Icons
      enableZoom: function() {
        return r.options.zoomEnabled = true, r.pi;
      },
      disableZoom: function() {
        return r.options.zoomEnabled = false, r.pi;
      },
      isZoomEnabled: function() {
        return !!r.options.zoomEnabled;
      },
      enableControlIcons: function() {
        return r.options.controlIconsEnabled || (r.options.controlIconsEnabled = true, e.enable(r)), r.pi;
      },
      disableControlIcons: function() {
        return r.options.controlIconsEnabled && (r.options.controlIconsEnabled = false, e.disable(r)), r.pi;
      },
      isControlIconsEnabled: function() {
        return !!r.options.controlIconsEnabled;
      },
      // Double click zoom
      enableDblClickZoom: function() {
        return r.options.dblClickZoomEnabled = true, r.pi;
      },
      disableDblClickZoom: function() {
        return r.options.dblClickZoomEnabled = false, r.pi;
      },
      isDblClickZoomEnabled: function() {
        return !!r.options.dblClickZoomEnabled;
      },
      // Mouse wheel zoom
      enableMouseWheelZoom: function() {
        return r.enableMouseWheelZoom(), r.pi;
      },
      disableMouseWheelZoom: function() {
        return r.disableMouseWheelZoom(), r.pi;
      },
      isMouseWheelZoomEnabled: function() {
        return !!r.options.mouseWheelZoomEnabled;
      },
      // Zoom scale and bounds
      setZoomScaleSensitivity: function(l) {
        return r.options.zoomScaleSensitivity = l, r.pi;
      },
      setMinZoom: function(l) {
        return r.options.minZoom = l, r.pi;
      },
      setMaxZoom: function(l) {
        return r.options.maxZoom = l, r.pi;
      },
      // Zoom event
      setBeforeZoom: function(l) {
        return r.options.beforeZoom = l === null ? null : t.proxy(l, r.publicInstance), r.pi;
      },
      setOnZoom: function(l) {
        return r.options.onZoom = l === null ? null : t.proxy(l, r.publicInstance), r.pi;
      },
      // Zooming
      zoom: function(l) {
        return r.publicZoom(l, true), r.pi;
      },
      zoomBy: function(l) {
        return r.publicZoom(l, false), r.pi;
      },
      zoomAtPoint: function(l, d) {
        return r.publicZoomAtPoint(l, d, true), r.pi;
      },
      zoomAtPointBy: function(l, d) {
        return r.publicZoomAtPoint(l, d, false), r.pi;
      },
      zoomIn: function() {
        return this.zoomBy(1 + r.options.zoomScaleSensitivity), r.pi;
      },
      zoomOut: function() {
        return this.zoomBy(1 / (1 + r.options.zoomScaleSensitivity)), r.pi;
      },
      getZoom: function() {
        return r.getRelativeZoom();
      },
      // CTM update
      setOnUpdatedCTM: function(l) {
        return r.options.onUpdatedCTM = l === null ? null : t.proxy(l, r.publicInstance), r.pi;
      },
      // Reset
      resetZoom: function() {
        return r.resetZoom(), r.pi;
      },
      resetPan: function() {
        return r.resetPan(), r.pi;
      },
      reset: function() {
        return r.reset(), r.pi;
      },
      // Fit, Contain and Center
      fit: function() {
        return r.fit(), r.pi;
      },
      contain: function() {
        return r.contain(), r.pi;
      },
      center: function() {
        return r.center(), r.pi;
      },
      // Size and Resize
      updateBBox: function() {
        return r.updateBBox(), r.pi;
      },
      resize: function() {
        return r.resize(), r.pi;
      },
      getSizes: function() {
        return {
          width: r.width,
          height: r.height,
          realZoom: r.getZoom(),
          viewBox: r.viewport.getViewBox()
        };
      },
      // Destroy
      destroy: function() {
        return r.destroy(), r.pi;
      }
    }), this.publicInstance;
  };
  var h = [], f = function(r, l) {
    var d = t.getSvg(r);
    if (d === null)
      return null;
    for (var b = h.length - 1; b >= 0; b--)
      if (h[b].svg === d)
        return h[b].instance.getPublicInstance();
    return h.push({
      svg: d,
      instance: new s(d, l)
    }), h[h.length - 1].instance.getPublicInstance();
  };
  return Mt = f, Mt;
}
var ss = is();
var rs = es(ss);
var as = {
  getViewArea() {
    const n = this.getSizes(), e = this.getPan(), t = n.realZoom;
    e.x /= t, e.y /= t;
    const o = {
      width: n.width / t,
      height: n.height / t
    };
    return {
      box: {
        top: -e.y,
        bottom: o.height - e.y,
        left: -e.x,
        right: o.width - e.x
      },
      center: {
        x: o.width / 2 - e.x,
        y: o.height / 2 - e.y
      }
    };
  },
  getViewBox() {
    return this.getViewArea().box;
  },
  setViewBox(n) {
    const e = n.right - n.left, t = n.bottom - n.top, { width: o, height: i } = this.getSizes(), s = e / t, a = o / i, c = s < a ? t * a : e, u = s > a ? e / a : t, h = Math.min(
      o / c,
      i / u
    ), f = this.getRealZoom(), r = this.getZoom(), l = f / r;
    this.zoom(h / l);
    const d = {
      x: (n.left + e / 2) * h,
      y: (n.top + t / 2) * h
    };
    this.pan({
      x: -d.x + c / 2 * h,
      y: -d.y + u / 2 * h
    });
  },
  getRealZoom() {
    return this.getSizes().realZoom;
  },
  applyAbsoluteZoomLevel(n, e, t) {
    const o = Math.max(1e-4, e), i = Math.max(o, t), s = Math.max(Math.min(i, n), o), a = this.getRealZoom(), c = this.getZoom(), u = a / c;
    this.setMinZoom(o / u).setMaxZoom(i / u).zoom(s / u);
  },
  isPanEnabled() {
    return this._isPanEnabled;
  },
  enablePan() {
    return this._isPanEnabled = true, this._internalEnablePan(), this;
  },
  disablePan() {
    return this._isPanEnabled = false, this._internalDisablePan(), this;
  },
  isZoomEnabled() {
    return this._isZoomEnabled;
  },
  enableZoom() {
    return this._isZoomEnabled = true, this._internalEnableZoom(), this;
  },
  disableZoom() {
    return this._isZoomEnabled = false, this._internalDisableZoom(), this;
  },
  setPanEnabled(n) {
    return n ? this.enablePan() : this.disablePan(), this;
  },
  setZoomEnabled(n) {
    return n ? (this.enableZoom(), this.enableDblClickZoom()) : (this.disableZoom(), this.disableDblClickZoom()), this;
  }
};
function ls(n, e) {
  var o, i;
  const t = n;
  return t._isPanEnabled = (o = e.panEnabled) != null ? o : true, t._isZoomEnabled = (i = e == null ? void 0 : e.zoomEnabled) != null ? i : true, t._internalIsPanEnabled = t.isPanEnabled, t._internalEnablePan = t.enablePan, t._internalDisablePan = t.disablePan, t._internalIsZoomEnabled = t.isZoomEnabled, t._internalEnableZoom = t.enableZoom, t._internalDisableZoom = t.disableZoom, Object.assign(n, as), t;
}
function cs(n, e) {
  var s, a, c, u, h, f;
  const t = (a = (s = e.customEventsHandler) == null ? void 0 : s.init) != null ? a : (r) => {
  }, o = (u = (c = e.customEventsHandler) == null ? void 0 : c.destroy) != null ? u : (r) => {
  }, i = (f = (h = e.customEventsHandler) == null ? void 0 : h.haltEventListeners) != null ? f : [];
  return e.mouseWheelZoomEnabled === void 0 && (e.mouseWheelZoomEnabled = e.zoomEnabled), e.customEventsHandler = {
    init: (r) => {
      ls(r.instance, e), t(r);
    },
    destroy: (r) => o(r),
    haltEventListeners: i
  }, rs(n, e);
}
function us(n, e) {
  const t = ref();
  let o = 0;
  const i = [], s = [], a = () => {
    o = 1, i.forEach((f) => f()), i.length = 0;
  }, c = () => {
    o = 2, s.forEach((f) => f()), s.length = 0;
  };
  return onMounted(() => {
    var k, g, v, w, E, m;
    const f = q(n.value, "<svg>"), r = (g = (k = e.customEventsHandler) == null ? void 0 : k.init) != null ? g : (p) => {
    }, l = (w = (v = e.customEventsHandler) == null ? void 0 : v.destroy) != null ? w : (p) => {
    }, d = (m = (E = e.customEventsHandler) == null ? void 0 : E.haltEventListeners) != null ? m : [];
    e.customEventsHandler = {
      init: (p) => {
        t.value = p.instance, r(p), a();
      },
      destroy: (p) => {
        c(), l(p);
      },
      haltEventListeners: d
    };
    const b = () => {
      const p = f.getBoundingClientRect();
      p.width !== 0 && p.height !== 0 ? cs(f, e) : setTimeout(b, 200);
    };
    b();
  }), onUnmounted(() => {
    var f;
    (f = t.value) == null || f.destroy(), t.value = void 0;
  }), { svgPanZoom: t, onSvgPanZoomMounted: (f) => {
    o === 0 ? i.push(f) : o === 1 && f();
  }, onSvgPanZoomUnmounted: (f) => {
    o === 0 || o === 1 ? s.push(f) : f();
  } };
}
var to = Symbol("zoomLevel");
function ds(n, e) {
  const t = computed(() => e.scalingObjects ? 1 : 1 / n.value);
  return provide(to, {
    zoomLevel: n,
    scale: t
  }), { scale: t };
}
function de() {
  return q(inject(to), "zoomLevel");
}
function fs(n) {
  return n instanceof Promise || n && typeof n.then == "function";
}
function hs() {
  let n = null;
  const e = ref({
    enabled: false,
    duration: 300,
    timingFunction: "linear"
  });
  function t(o, i = 300, s = "linear") {
    n && (clearTimeout(n), n = null), e.value = {
      enabled: true,
      duration: i,
      timingFunction: s
    }, nextTick(() => pe(this, null, function* () {
      const a = o();
      fs(a) && (yield a), n && clearTimeout(n), n = window == null ? void 0 : window.setTimeout(() => {
        e.value.enabled = false, n = null;
      }, i);
    }));
  }
  return { transitionWhile: t, transitionOption: e };
}
function ps(n) {
  const e = ref({}), t = ref(false);
  let o = 1;
  const i = /* @__PURE__ */ new Map();
  return watchEffect(() => {
    if (n.value instanceof Array) {
      const s = /* @__PURE__ */ new Set([]);
      if (e.value = Object.fromEntries(
        n.value.map((a) => {
          let c = a.id;
          return c || (t.value || (t.value = true, console.warn(
            "[v-network-graph] Please specify the `id` field for the `Path` object. Currently, this works for compatibility, but in the future, the id field will be required."
          )), c = i.get(a), c || (c = "path-" + o++, i.set(a, c))), s.add(c), [c, a];
        })
      ), t.value)
        for (const [a, c] of Array.from(i.entries()))
          s.has(c) || i.delete(a);
    } else
      e.value = n.value;
  }), { objects: e, isInCompatibilityModeForPath: t };
}
function vs(n, e, t, o) {
  if (o) {
    const s = ref(o(n[e])), a = (c) => {
      isEqual_default(c, s.value) || (s.value = c), isEqual_default(c, n[e]) || t(`update:${e}`, c);
    };
    return watch(() => o(s.value), a), watch(() => n[e], (c) => a(o(c))), s.value !== n[e] && t(`update:${e}`, s.value), s;
  }
  const i = ref(n[e]);
  return watch(
    () => n[e],
    (s) => {
      isEqual_default(s, i.value) || (i.value = s);
    }
  ), watch(i, (s) => {
    isEqual_default(s, n[e]) || t(`update:${e}`, s);
  }), i;
}
function Ct(n, e, t, o) {
  const i = reactive(/* @__PURE__ */ new Set());
  return watch(
    () => n[e],
    () => {
      const a = n[e].filter((c) => c in t.value);
      isEqual_default(a, Array.from(i)) || (i.clear(), a.forEach(i.add, i));
    },
    { deep: true, immediate: true }
  ), watch(i, () => {
    const s = Array.from(i);
    isEqual_default(n[e], s) || o(`update:${e}`, s);
  }), xe(i);
}
var no = Symbol("selection");
function gs(n, e, t) {
  provide(no, {
    selectedNodes: n,
    selectedEdges: e,
    selectedPaths: t
  });
}
function ms() {
  return q(inject(no), "Selections");
}
var oo = Symbol("layouts");
function bs(n) {
  provide(oo, n);
}
function Kt() {
  return q(inject(oo), "Layouts");
}
function ys(n, e) {
  for (let t = 0; t < n.length - 1; t++)
    e(n[t], n[t + 1]);
}
function He(n, e) {
  const t = n.indexOf(e);
  t >= 0 && n.splice(t, 1);
}
function ws(n, e, t) {
  const o = n.indexOf(e);
  o < 0 || n.splice(o + 1, 0, t);
}
function Es(n, e) {
  const t = [
    "edges",
    "edge-labels",
    "focusring",
    "nodes",
    "node-labels",
    "paths"
  ];
  return computed(() => {
    const o = uniq_default(n.view.builtInLayerOrder).filter((s) => {
      const a = t.includes(s);
      return a || console.warn(`Layer ${s} is not a built-in layer.`), a;
    }).reverse(), i = [...t];
    return ys(o, (s, a) => {
      He(i, a), ws(i, s, a);
    }), "edge-label" in e || "edges-label" in e || He(i, "edge-labels"), n.node.focusring.visible || He(i, "focusring"), n.node.label.visible === false && He(i, "node-labels"), n.path.visible || He(i, "paths"), i;
  });
}
var Cn = () => new Promise((n) => nextTick(n));
function ks(n, e) {
  const t = Math.max(n.width, n.height, e.width, e.height) / 1e4;
  return Math.abs(n.x - e.x) < t && Math.abs(n.y - e.y) < t && Math.abs(n.width - e.width) < t && Math.abs(n.height - e.height) < t;
}
function xs(n, e) {
  return {
    top: n.top + e.top,
    left: n.left + e.left,
    right: n.right + e.right,
    bottom: n.bottom + e.bottom
  };
}
function Ps(n, e) {
  return {
    top: n.top * e,
    left: n.left * e,
    right: n.right * e,
    bottom: n.bottom * e
  };
}
function Ss(n, e) {
  return {
    top: n.top / e,
    left: n.left / e,
    right: n.right / e,
    bottom: n.bottom / e
  };
}
function io(n) {
  return {
    top: n.y,
    left: n.x,
    right: n.x + n.width,
    bottom: n.y + n.height
  };
}
function so(n) {
  return {
    x: n.left,
    y: n.top,
    width: n.right - n.left,
    height: n.bottom - n.top
  };
}
function Ms(n, e) {
  return {
    top: Math.min(n.top, e.top),
    left: Math.min(n.left, e.left),
    right: Math.max(n.right, e.right),
    bottom: Math.max(n.bottom, e.bottom)
  };
}
var Cs = new RegExp("^\\d+$");
function Os(n, e) {
  let t = { top: 0, left: 0, right: 0, bottom: 0 };
  if (typeof n == "string") {
    const o = Ae(n, e.width), i = Ae(n, e.height);
    o === void 0 || i === void 0 ? console.warn("Invalid `fitContentMargin` value.", n) : t = { top: i, left: o, right: o, bottom: i };
  } else if (typeof n == "number") {
    const o = n;
    t = { top: o, left: o, right: o, bottom: o };
  } else {
    if (n.top) {
      const o = Ae(n.top, e.height);
      o === void 0 ? console.warn("Invalid `fitContentMargin` value.", n.top) : t.top = o;
    }
    if (n.left) {
      const o = Ae(n.left, e.width);
      o === void 0 ? console.warn("Invalid `fitContentMargin` value.", n.left) : t.left = o;
    }
    if (n.right) {
      const o = Ae(n.right, e.width);
      o === void 0 ? console.warn("Invalid `fitContentMargin` value.", n.right) : t.right = o;
    }
    if (n.bottom) {
      const o = Ae(n.bottom, e.height);
      o === void 0 ? console.warn("Invalid `fitContentMargin` value.", n.bottom) : t.bottom = o;
    }
  }
  return t;
}
function zs(n, e, t, o, i, s) {
  const a = n.getBBox();
  if (s)
    return _s(a, e, t, i);
  {
    const c = Ts(n);
    return Is(
      a,
      c,
      e,
      t,
      o,
      i
    );
  }
}
function Ae(n, e) {
  if (typeof n == "string") {
    if (n.endsWith("%")) {
      const t = parseInt(n.toString());
      if (Number.isFinite(t))
        return e * (t / 100);
    } else if (n.endsWith("px") || Cs.test(n)) {
      const t = parseInt(n.toString());
      if (Number.isFinite(t))
        return t;
    }
  } else if (typeof n == "number")
    return n;
}
function Ts(n) {
  return Array.from(n.querySelectorAll(".v-ng-graph-objects")).map(
    (t) => t.getBBox()
  ).reduce(
    (t, o, i) => {
      if (i === 0)
        return o;
      const s = Math.min(t.x, o.x), a = Math.min(t.y, o.y);
      return {
        x: s,
        y: a,
        width: Math.max(t.x + t.width - s, o.x + o.width - s),
        height: Math.max(t.y + t.height - a, o.y + o.height - a)
      };
    },
    { x: 0, y: 0, width: 0, height: 0 }
  );
}
function _s(n, e, t, o) {
  if (Object.keys(t).length <= 1)
    return;
  const i = ro(n, e, o);
  if (i > 0) {
    const s = io(n);
    return {
      zoom: i,
      pos: ao(s, i, e, o)
    };
  } else
    return;
}
function Is(n, e, t, o, i, s) {
  if (Object.keys(o).length <= 1)
    return;
  const a = hi(o), c = {
    top: (a.top - e.y) * i,
    left: (a.left - e.x) * i,
    right: (e.x + e.width - a.right) * i,
    bottom: (e.y + e.height - a.bottom) * i
  };
  let u = ro(n, t, s);
  if (u === 0)
    return;
  const h = it(t, xs(s, c));
  if (h.width <= 0 || h.height <= 0)
    return;
  const f = io(n), r = it(t, s), l = ks(n, e);
  let d = 0, b = 0, k = { top: 0, left: 0, right: 0, bottom: 0 };
  do {
    b = u;
    const g = Ss(c, u), v = {
      top: a.top - g.top,
      left: a.left - g.left,
      right: a.right + g.right,
      bottom: a.bottom + g.bottom
    };
    k = l ? v : Ms(f, v);
    const w = so(k), m = [r.width / w.width, r.height / w.height].filter((p) => p > 0);
    if (m.length === 0)
      return;
    u = Math.min(...m), d++;
  } while (Math.abs(b - u) > 1e-6 && d < 10);
  return {
    zoom: u,
    pos: ao(k, u, t, s)
  };
}
function ro(n, e, t) {
  if (n.width === 0 || n.height === 0)
    return 0;
  const o = it(e, t);
  if (o.width <= 0 || o.height <= 0)
    return 0;
  const i = [o.width / n.width, o.height / n.height];
  return Math.min(...i);
}
function ao(n, e, t, o) {
  const i = it(t, o), s = so(Ps(n, e)), a = (i.width - s.width) / 2, c = (i.height - s.height) / 2, u = s.x - o.left, h = s.y - o.top;
  return {
    x: -u + a,
    y: -h + c
  };
}
function it(n, e) {
  const t = e.left + e.right, o = e.top + e.bottom;
  return {
    width: n.width - t,
    height: n.height - o
  };
}
var Ls = ["x", "y", "width", "height", "fill", "stroke", "stroke-width", "stroke-dasharray"];
var $s = defineComponent({
  __name: "VSelectionBox",
  props: {
    box: {},
    config: {}
  },
  setup(n) {
    return (e, t) => (openBlock(), createElementBlock("rect", {
      class: "v-ng-selection-box",
      x: Math.round(e.box.pos.x),
      y: Math.round(e.box.pos.y),
      width: Math.ceil(e.box.size.width),
      height: Math.ceil(e.box.size.height),
      fill: e.config.color,
      stroke: e.config.strokeColor,
      "stroke-width": e.config.strokeWidth,
      "stroke-dasharray": e.config.strokeDasharray
    }, null, 8, Ls));
  }
});
var As = ["points", "fill"];
var Zs = defineComponent({
  __name: "VMarkerHeadArrow",
  props: {
    width: {},
    height: {},
    refX: {},
    color: {},
    isSource: { type: Boolean },
    units: {}
  },
  setup(n) {
    const e = n, t = computed(() => {
      const o = e.width, i = e.height;
      return e.isSource ? `${o} ${i}, 0 ${i / 2}, ${o} 0` : `0 0, ${o} ${i / 2}, 0 ${i}`;
    });
    return (o, i) => (openBlock(), createElementBlock("polygon", {
      points: t.value,
      fill: o.color
    }, null, 8, As));
  }
});
var Ds = ["points", "stroke-width", "stroke"];
var Ns = defineComponent({
  __name: "VMarkerHeadAngle",
  props: {
    width: {},
    height: {},
    refX: {},
    color: {},
    isSource: { type: Boolean },
    units: {}
  },
  setup(n) {
    const e = n, t = computed(() => e.units === "strokeWidth" ? 1 : Math.min(e.width, e.height) / 5), o = computed(() => {
      const i = t.value / 2, s = e.width, a = e.height;
      return e.isSource ? `${s - i} ${a - i}, ${i} ${a / 2}, ${s - i} ${i}` : `${i} ${i}, ${s - i} ${a / 2}, ${i} ${a - i}`;
    });
    return (i, s) => (openBlock(), createElementBlock("polyline", {
      points: o.value,
      fill: "none",
      "stroke-width": t.value,
      stroke: i.color,
      "stroke-linecap": "round",
      "stroke-linejoin": "round"
    }, null, 8, Ds));
  }
});
var js = ["fill", "cx", "cy", "rx", "ry"];
var Bs = defineComponent({
  __name: "VMarkerHeadCircle",
  props: {
    width: {},
    height: {},
    refX: {},
    color: {},
    isSource: { type: Boolean },
    units: {}
  },
  setup(n) {
    return (e, t) => (openBlock(), createElementBlock("ellipse", {
      fill: e.color,
      cx: e.width / 2,
      cy: e.height / 2,
      rx: e.width / 2,
      ry: e.height / 2
    }, null, 8, js));
  }
});
var Rs = ["id", "markerWidth", "markerHeight", "refX", "refY", "markerUnits"];
var Vs = defineComponent({
  __name: "VMarkerHead",
  props: {
    id: {},
    marker: {},
    scale: {}
  },
  setup(n) {
    const e = {
      arrow: Zs,
      angle: Ns,
      circle: Bs
    }, t = n, o = computed(
      () => t.marker.width * (t.marker.units === "strokeWidth" ? 1 : t.scale)
    ), i = computed(
      () => t.marker.height * (t.marker.units === "strokeWidth" ? 1 : t.scale)
    ), s = computed(() => {
      const c = t.marker.margin * (t.marker.units === "strokeWidth" ? 1 : t.scale);
      return t.marker.isSource ? o.value + c : -c;
    }), a = computed(() => {
      const c = t.marker.offset * (t.marker.units === "strokeWidth" ? 1 : t.scale);
      return t.marker.isSource ? c : -c;
    });
    return (c, u) => c.marker.type !== "none" && c.marker.type !== "custom" ? (openBlock(), createElementBlock("marker", {
      key: 0,
      id: c.id,
      markerWidth: o.value,
      markerHeight: i.value,
      refX: s.value,
      refY: i.value / 2 + a.value,
      orient: "auto",
      markerUnits: c.marker.units,
      class: "v-ng-marker"
    }, [
      (openBlock(), createBlock(resolveDynamicComponent(e[c.marker.type]), {
        width: o.value,
        height: i.value,
        refX: s.value,
        color: c.marker.color,
        "is-source": c.marker.isSource,
        units: c.marker.units
      }, null, 8, ["width", "height", "refX", "color", "is-source", "units"]))
    ], 8, Rs)) : createCommentVNode("", true);
  }
});
var Ws = {
  class: "v-ng-background-grid",
  "shape-rendering": "crispEdges"
};
var Hs = ["d"];
var Us = ["d"];
var Fs = ["d"];
var qs = ["d"];
var Xs = defineComponent({
  __name: "VBackgroundGrid",
  setup(n) {
    const { container: e, svgPanZoom: t } = Nt(), { zoomLevel: o } = de(), i = Ji(), s = Ko(), a = ref({ x: 0, y: 0 }), c = ref({ width: 500, height: 500 });
    onMounted(() => {
      var b;
      const l = (b = t.value) == null ? void 0 : b.getPan();
      l && (a.value = {
        x: -l.x,
        y: -l.y
      });
      const d = e.value.getBoundingClientRect();
      c.value = {
        width: d.width,
        height: d.height
      };
    }), i.on("view:resize", (l) => {
      c.value = { width: l.width, height: l.height };
    }), i.on("view:pan", (l) => {
      a.value = { x: -l.x, y: -l.y };
    }), i.on("view:zoom", () => {
      var d;
      const l = (d = t.value) == null ? void 0 : d.getPan();
      l && (a.value = { x: -l.x, y: -l.y });
    });
    const u = ref([]), h = ref([]), f = ref([]), r = ref([]);
    return watchEffect(() => {
      const l = [], d = [], b = [], k = [], g = 1 / o.value, v = s.grid.interval, w = a.value.x * g, E = a.value.y * g, m = Math.floor(c.value.width / v + 1) * v, p = Math.floor(c.value.height / v + 1) * v, y = (a.value.x + m) * g, x = (a.value.y + p) * g, z = s.grid.thickIncrements, L = s.grid.line.dasharray, C = s.grid.thick.dasharray;
      let T = {
        stroke: s.grid.thick.color,
        "stroke-width": s.grid.thick.width,
        "stroke-dasharray": C,
        "stroke-dashoffset": C ? w / g : void 0
      }, $ = {
        stroke: s.grid.line.color,
        "stroke-width": s.grid.line.width,
        "stroke-dasharray": L,
        "stroke-dashoffset": L ? w / g : void 0
      };
      const N = (a.value.x + m) * g;
      for (let B = E; B <= x; B += v) {
        const H = Math.floor(B / v);
        z && H % z === 0 ? l.push([H, H * v, w, N, T]) : b.push([H, H * v, w, N, $]);
      }
      T = oe({}, T), T["stroke-dashoffset"] = C ? E / g : void 0, $ = oe({}, $), $["stroke-dashoffset"] = L ? E / g : void 0;
      const G = (a.value.y + p) * g;
      for (let B = w; B <= y; B += v) {
        const H = Math.floor(B / v);
        z && H % z === 0 ? d.push([H, H * v, E, G, T]) : k.push([H, H * v, E, G, $]);
      }
      h.value = l, u.value = d, r.value = b, f.value = k;
    }), (l, d) => (openBlock(), createElementBlock("g", Ws, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(r.value, ([b, k, g, v, w]) => (openBlock(), createElementBlock("path", mergeProps({
        key: `nv${b}`,
        d: `M ${g} ${k} L ${v} ${k}`,
        ref_for: true
      }, w, { style: { "vector-effect": "non-scaling-stroke" } }), null, 16, Hs))), 128)),
      (openBlock(true), createElementBlock(Fragment, null, renderList(f.value, ([b, k, g, v, w]) => (openBlock(), createElementBlock("path", mergeProps({
        key: `nh${b}`,
        d: `M ${k} ${g} L ${k} ${v}`,
        ref_for: true
      }, w, { style: { "vector-effect": "non-scaling-stroke" } }), null, 16, Us))), 128)),
      (openBlock(true), createElementBlock(Fragment, null, renderList(h.value, ([b, k, g, v, w]) => (openBlock(), createElementBlock("path", mergeProps({
        key: `tv${b}`,
        d: `M ${g} ${k} L ${v} ${k}`,
        ref_for: true
      }, w, { style: { "vector-effect": "non-scaling-stroke" } }), null, 16, Fs))), 128)),
      (openBlock(true), createElementBlock(Fragment, null, renderList(u.value, ([b, k, g, v, w]) => (openBlock(), createElementBlock("path", mergeProps({
        key: `th${b}`,
        d: `M ${k} ${g} L ${k} ${v}`,
        ref_for: true
      }, w, { style: { "vector-effect": "non-scaling-stroke" } }), null, 16, qs))), 128))
    ]));
  }
});
var Gs = defineComponent({
  __name: "VBackgroundViewport",
  setup(n) {
    const { viewport: e } = Nt(), t = ref(), o = (s, a, c) => {
      s.forEach((u) => {
        var h;
        return a.setAttribute(u, (h = c.getAttribute(u)) != null ? h : "");
      });
    }, i = new MutationObserver((s) => {
      if (!t.value)
        return;
      const a = s.map((c) => {
        var u;
        return (u = c.attributeName) != null ? u : "";
      }).filter(Boolean);
      o(a, t.value, e.value);
    });
    return onMounted(() => {
      const s = ["transform", "style"];
      i.observe(e.value, {
        attributes: true,
        attributeFilter: s
      }), t.value && o(s, t.value, e.value);
    }), onUnmounted(() => {
      i.disconnect();
    }), (s, a) => (openBlock(), createElementBlock("g", {
      ref_key: "background",
      ref: t,
      class: "v-ng-background-viewport"
    }, [
      renderSlot(s.$slots, "default")
    ], 512));
  }
});
var Ks = ["d", "stroke-width"];
var Ys = defineComponent({
  __name: "VEdgeBackground",
  props: {
    id: {},
    state: {},
    sourcePos: { default: void 0 },
    targetPos: { default: void 0 }
  },
  setup(n) {
    const e = n, { scale: t } = de(), o = ct(), {
      handleEdgePointerDownEvent: i,
      handleEdgePointerOverEvent: s,
      handleEdgePointerOutEvent: a,
      handleEdgeClickEvent: c,
      handleEdgeDoubleClickEvent: u,
      handleEdgeContextMenu: h
    } = Ye(), f = computed(() => {
      const l = e.state.position;
      if (e.state.loop) {
        const { radius: d, isLargeArc: b, isClockwise: k } = e.state.loop, [g, v] = d, w = b ? 1 : 0, E = k ? 1 : 0;
        return `M ${l.p1.x} ${l.p1.y} A ${g} ${v} 0 ${w} ${E} ${l.p2.x} ${l.p2.y}`;
      } else {
        if (o.type === "straight" || !e.state.curve)
          return `M ${l.p1.x} ${l.p1.y} L ${l.p2.x} ${l.p2.y}`;
        {
          const d = [...e.state.curve.control, { x: l.p2.x, y: l.p2.y }], b = [];
          return b.push(`M ${l.p1.x} ${l.p1.y}`), chunk_default(d, 2).forEach(([k, g]) => b.push(`Q ${k.x} ${k.y} ${g.x} ${g.y}`)), b.join(" ");
        }
      }
    }), r = computed(() => (e.state.line.stroke.width + 10) * t.value);
    return (l, d) => (openBlock(), createElementBlock("path", {
      class: normalizeClass({ "v-ng-line-background": true, selectable: l.state.selectable }),
      d: f.value,
      stroke: "transparent",
      "stroke-width": r.value,
      fill: "none",
      onPointerdown: d[0] || (d[0] = withModifiers((b) => unref(i)(l.id, b), ["stop"])),
      onPointerenterPassive: d[1] || (d[1] = (b) => unref(s)(l.id, b)),
      onPointerleavePassive: d[2] || (d[2] = (b) => unref(a)(l.id, b)),
      onClick: d[3] || (d[3] = withModifiers((b) => unref(c)(l.id, b), ["stop"])),
      onDblclick: d[4] || (d[4] = withModifiers((b) => unref(u)(l.id, b), ["stop"])),
      onContextmenu: d[5] || (d[5] = (b) => unref(h)(l.id, b))
    }, null, 42, Ks));
  }
});
var Qs = defineComponent({
  __name: "VEdgeBackgrounds",
  setup(n) {
    const { edgeStates: e, edgeGroupStates: t, layouts: o } = me();
    return (i, s) => (openBlock(true), createElementBlock(Fragment, null, renderList(unref(t).edgeGroups, ({ summarize: a, edges: c }) => (openBlock(), createElementBlock(Fragment, null, [
      a ? createCommentVNode("", true) : (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(c, (u, h) => (openBlock(), createBlock(Ys, {
        key: h,
        id: h,
        state: unref(e)[h],
        "source-pos": unref(o).nodes[u.source],
        "target-pos": unref(o).nodes[u.target]
      }, null, 8, ["id", "state", "source-pos", "target-pos"]))), 128))
    ], 64))), 256));
  }
});
var Js = ["d", "stroke", "stroke-width", "stroke-dasharray", "stroke-linecap"];
var lo = defineComponent({
  __name: "VLine",
  props: {
    p1: {},
    p2: {},
    config: {}
  },
  setup(n) {
    const e = n, { scale: t } = de(), o = computed(() => e.config.width * t.value), i = computed(() => Ke(e.config.dasharray, t.value)), s = computed(() => {
      const a = e.config.animate ? rt(e.config.dasharray) * e.config.animationSpeed * t.value : false;
      return a ? { "--animation-speed": a } : void 0;
    });
    return (a, c) => (openBlock(), createElementBlock("path", {
      class: normalizeClass({ "v-ng-line": true, animate: a.config.animate }),
      d: `M ${a.p1.x} ${a.p1.y} L ${a.p2.x} ${a.p2.y}`,
      stroke: a.config.color,
      "stroke-width": o.value,
      "stroke-dasharray": i.value,
      "stroke-linecap": a.config.linecap,
      style: normalizeStyle(s.value)
    }, null, 14, Js));
  }
});
var er = ["d", "stroke", "stroke-width", "stroke-dasharray", "stroke-linecap"];
var tr = defineComponent({
  __name: "VArc",
  props: {
    p1: {},
    p2: {},
    radius: {},
    isLargeArc: { type: Boolean },
    isClockwise: { type: Boolean },
    config: {}
  },
  setup(n) {
    const e = n, { scale: t } = de(), o = computed(() => e.config.width * t.value), i = computed(() => Ke(e.config.dasharray, t.value)), s = computed(() => {
      const c = e.config.animate ? rt(e.config.dasharray) * e.config.animationSpeed * t.value : false;
      return c ? { "--animation-speed": c } : void 0;
    }), a = computed(() => {
      const { p1: c, p2: u, radius: h, isLargeArc: f, isClockwise: r } = e, [l, d] = h, b = f ? 1 : 0, k = r ? 1 : 0;
      return `M ${c.x} ${c.y} A ${l} ${d} 0 ${b} ${k} ${u.x} ${u.y}`;
    });
    return (c, u) => (openBlock(), createElementBlock("path", {
      class: normalizeClass({ "v-ng-line": true, animate: c.config.animate }),
      d: a.value,
      stroke: c.config.color,
      "stroke-width": o.value,
      "stroke-dasharray": i.value,
      "stroke-linecap": c.config.linecap,
      style: normalizeStyle(s.value),
      fill: "none"
    }, null, 14, er));
  }
});
var nr = ["d", "stroke", "stroke-width", "stroke-dasharray", "stroke-linecap", "marker-start", "marker-end"];
var or = defineComponent({
  __name: "VEdgeCurved",
  props: {
    state: {},
    config: {},
    markerStart: { default: void 0 },
    markerEnd: { default: void 0 }
  },
  setup(n) {
    const e = n, { scale: t } = de(), o = computed(() => {
      var f, r;
      const c = e.state.position, u = [...(r = (f = e.state.curve) == null ? void 0 : f.control) != null ? r : [], { x: c.p2.x, y: c.p2.y }], h = [];
      return h.push(`M ${c.p1.x} ${c.p1.y}`), chunk_default(u, 2).forEach(([l, d]) => h.push(`Q ${l.x} ${l.y} ${d.x} ${d.y}`)), h.join(" ");
    }), i = computed(() => e.config.width * t.value), s = computed(() => Ke(e.config.dasharray, t.value)), a = computed(() => {
      const c = e.config.animate ? rt(e.config.dasharray) * e.config.animationSpeed * t.value : false;
      return c ? { "--animation-speed": c } : void 0;
    });
    return (c, u) => (openBlock(), createElementBlock("path", {
      class: normalizeClass({ "v-ng-line": true, animate: c.config.animate }),
      d: o.value,
      fill: "none",
      stroke: c.config.color,
      "stroke-width": i.value,
      "stroke-dasharray": s.value,
      "stroke-linecap": c.config.linecap,
      style: normalizeStyle(a.value),
      "marker-start": c.markerStart,
      "marker-end": c.markerEnd
    }, null, 14, nr));
  }
});
var ir = defineComponent({
  __name: "VEdge",
  props: {
    id: {},
    state: {},
    sourcePos: { default: void 0 },
    targetPos: { default: void 0 }
  },
  setup(n) {
    const e = ct();
    return (t, o) => t.state.loop ? (openBlock(), createBlock(tr, mergeProps({ key: 0 }, t.state.position, {
      radius: t.state.loop.radius,
      "is-large-arc": t.state.loop.isLargeArc,
      "is-clockwise": t.state.loop.isClockwise,
      class: [{ selectable: t.state.selectable, hover: t.state.hovered, selected: t.state.selected }, "v-ng-edge"],
      config: t.state.line.stroke,
      "marker-start": t.state.sourceMarkerId ? `url('#${t.state.sourceMarkerId}')` : void 0,
      "marker-end": t.state.targetMarkerId ? `url('#${t.state.targetMarkerId}')` : void 0
    }), null, 16, ["radius", "is-large-arc", "is-clockwise", "class", "config", "marker-start", "marker-end"])) : unref(e).type == "straight" || !t.state.curve ? (openBlock(), createBlock(lo, mergeProps({
      key: 1,
      "data-edge-id": t.id
    }, t.state.position, {
      class: [{ selectable: t.state.selectable, hover: t.state.hovered, selected: t.state.selected }, "v-ng-edge"],
      config: t.state.line.stroke,
      "marker-start": t.state.sourceMarkerId ? `url('#${t.state.sourceMarkerId}')` : void 0,
      "marker-end": t.state.targetMarkerId ? `url('#${t.state.targetMarkerId}')` : void 0
    }), null, 16, ["data-edge-id", "class", "config", "marker-start", "marker-end"])) : (openBlock(), createBlock(or, {
      key: 2,
      "data-edge-id": t.id,
      class: normalizeClass([{ selectable: t.state.selectable, hover: t.state.hovered, selected: t.state.selected }, "v-ng-edge"]),
      state: t.state,
      config: t.state.line.stroke,
      "marker-start": t.state.sourceMarkerId ? `url('#${t.state.sourceMarkerId}')` : void 0,
      "marker-end": t.state.targetMarkerId ? `url('#${t.state.targetMarkerId}')` : void 0
    }, null, 8, ["data-edge-id", "class", "state", "config", "marker-start", "marker-end"]));
  }
});
var sr = ["cx", "cy", "r", "fill", "stroke", "stroke-width", "stroke-dasharray"];
var rr = ["x", "y", "width", "height", "rx", "ry", "fill", "stroke", "stroke-width", "stroke-dasharray"];
var ft = defineComponent({
  __name: "VShape",
  props: {
    baseX: { default: 0 },
    baseY: { default: 0 },
    config: {}
  },
  setup(n) {
    const e = n, { scale: t } = de(), o = ref(e.baseX), i = ref(e.baseY), s = ref(0), a = ref("#000000"), c = ref(void 0), u = ref(0), h = ref(0), f = ref(0), r = ref(0);
    return watchEffect(() => {
      var d;
      const l = t.value;
      s.value = e.config.strokeWidth * l, a.value = (d = e.config.strokeColor) != null ? d : "none", c.value = Ke(e.config.strokeDasharray, l), e.config.type === "circle" ? (o.value = e.baseX, i.value = e.baseY, u.value = e.config.radius * l) : (h.value = e.config.width * l, f.value = e.config.height * l, r.value = e.config.borderRadius * l, o.value = e.baseX - h.value / 2, i.value = e.baseY - f.value / 2);
    }), (l, d) => l.config.type === "circle" ? (openBlock(), createElementBlock("circle", {
      key: 0,
      class: "v-ng-shape-circle",
      cx: o.value,
      cy: i.value,
      r: u.value,
      fill: l.config.color,
      stroke: a.value,
      "stroke-width": s.value,
      "stroke-dasharray": c.value
    }, null, 8, sr)) : (openBlock(), createElementBlock("rect", {
      key: 1,
      class: "v-ng-shape-rect",
      x: o.value,
      y: i.value,
      width: h.value,
      height: f.value,
      rx: r.value,
      ry: r.value,
      fill: l.config.color,
      stroke: a.value,
      "stroke-width": s.value,
      "stroke-dasharray": c.value
    }, null, 8, rr));
  }
});
var ar = ["rx", "ry", "fill", "transform"];
var lr = ["x", "y", "dominant-baseline", "font-family", "font-size", "fill"];
var cr = ["x", "dy", "dominant-baseline"];
var ht = defineComponent({
  __name: "VLabelText",
  props: {
    text: {},
    x: { default: 0 },
    y: { default: 0 },
    dominantBaseline: { default: "central" },
    config: {}
  },
  setup(n) {
    const e = n, t = useAttrs(), { scale: o } = de(), i = computed(() => {
      var g, v;
      return (v = (g = e.text) == null ? void 0 : g.toString().split(/\r?\n/)) != null ? v : "";
    }), s = computed(() => {
      var g;
      return (g = t["font-size"]) != null ? g : e.config.fontSize * o.value;
    }), a = computed(() => s.value * e.config.lineHeight), c = computed(() => {
      const g = e.dominantBaseline;
      return g === "hanging" ? 0 : g === "central" ? -(a.value * (i.value.length - 1)) / 2 : -a.value * (i.value.length - 1);
    }), u = ref(), h = ref(""), f = reactive({ x: 0, y: 0, width: 0, height: 0 }), r = computed(() => {
      var m, p;
      const g = e.config.background;
      if (!g)
        return f;
      let v, w;
      g.padding instanceof Object ? (v = g.padding.vertical, w = g.padding.horizontal) : (v = (m = g.padding) != null ? m : 0, w = (p = g.padding) != null ? p : 0);
      const E = a.value - s.value;
      return {
        x: f.x - w * o.value,
        y: f.y - v * o.value - E / 2,
        width: f.width + w * 2 * o.value,
        height: f.height + v * 2 * o.value + E
      };
    });
    let l;
    const d = () => {
      e.config.background && e.config.background.visible ? !l && u.value && (l = k(u.value, f, h)) : (l == null || l.disconnect(), l = void 0);
    };
    onMounted(() => d()), watch(
      () => e.config.background && e.config.background.visible,
      (g, v) => {
        g != v && d();
      }
    ), onUnmounted(() => {
      l == null || l.disconnect(), l = void 0;
    });
    function b(g, v, w) {
      var m;
      const E = g.getBBox();
      v.x = E.x, v.y = E.y, v.width = E.width, v.height = E.height, w.value = (m = g.getAttribute("transform")) != null ? m : void 0;
    }
    function k(g, v, w) {
      const E = new MutationObserver(() => {
        b(g, v, w);
      });
      return E.observe(g, {
        attributes: true,
        attributeFilter: ["x", "y", "transform", "font-size"]
      }), b(g, v, w), E;
    }
    return (g, v) => {
      var w, E, m, p, y, x;
      return openBlock(), createElementBlock(Fragment, null, [
        g.config.background && g.config.background.visible ? (openBlock(), createElementBlock("rect", mergeProps({
          key: 0,
          class: "v-ng-text-background"
        }, r.value, {
          rx: ((E = (w = g.config.background) == null ? void 0 : w.borderRadius) != null ? E : 0) * unref(o),
          ry: ((p = (m = g.config.background) == null ? void 0 : m.borderRadius) != null ? p : 0) * unref(o),
          fill: (x = (y = g.config.background) == null ? void 0 : y.color) != null ? x : "#ffffff",
          transform: h.value
        }), null, 16, ar)) : createCommentVNode("", true),
        createBaseVNode("text", mergeProps({
          ref_key: "element",
          ref: u,
          class: "v-ng-text"
        }, g.$attrs, {
          x: g.x,
          y: g.y,
          "dominant-baseline": g.dominantBaseline,
          "font-family": g.$attrs["font-family"] ? `${g.$attrs["font-family"]}` : g.config.fontFamily,
          "font-size": s.value,
          fill: g.$attrs.fill ? `${g.$attrs.fill}` : g.config.color
        }), [
          i.value.length <= 1 ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
            createTextVNode(toDisplayString(g.text), 1)
          ], 64)) : (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(i.value, (z, L) => (openBlock(), createElementBlock("tspan", {
            key: L,
            x: g.x,
            dy: L == 0 ? c.value : a.value,
            "dominant-baseline": g.dominantBaseline
          }, toDisplayString(z), 9, cr))), 128))
        ], 16, lr)
      ], 64);
    };
  }
});
var ur = defineComponent({
  __name: "VEdgeSummarized",
  props: {
    edges: {},
    layouts: {}
  },
  setup(n) {
    const e = n, t = ct(), {
      handleEdgesPointerDownEvent: o,
      handleEdgesPointerOverEvent: i,
      handleEdgesPointerOutEvent: s,
      handleEdgesClickEvent: a,
      handleEdgesDoubleClickEvent: c,
      handleEdgesContextMenu: u
    } = Ye(), { edgeStates: h } = me(), f = ref({ p1: { x: 0, y: 0 }, p2: { x: 0, y: 0 } }), r = ref({ x: 0, y: 0 });
    watchEffect(() => {
      const E = Object.keys(e.edges).find((m) => m in h);
      E && (f.value = h[E].position, r.value = {
        x: (f.value.p1.x + f.value.p2.x) / 2,
        y: (f.value.p1.y + f.value.p2.y) / 2
      });
    });
    const l = computed(() => Object.keys(e.edges)), d = computed(() => _.values(t.summarized.label, e.edges)), b = computed(() => _.values(t.summarized.shape, e.edges)), k = computed(() => _.values(t.summarized.stroke, e.edges)), g = computed(() => l.value.some((E) => h[E].hovered)), v = computed(() => l.value.some((E) => h[E].selectable)), w = computed(() => l.value.some((E) => h[E].selected));
    return (E, m) => (openBlock(), createElementBlock("g", {
      class: normalizeClass({ "v-ng-line-summarized": true, hovered: g.value, selectable: v.value, selected: w.value }),
      onPointerdown: m[0] || (m[0] = withModifiers((p) => unref(o)(l.value, p), ["stop"])),
      onPointerenterPassive: m[1] || (m[1] = (p) => unref(i)(l.value, p)),
      onPointerleavePassive: m[2] || (m[2] = (p) => unref(s)(l.value, p)),
      onClick: m[3] || (m[3] = withModifiers((p) => unref(a)(l.value, p), ["stop"])),
      onDblclick: m[4] || (m[4] = withModifiers((p) => unref(c)(l.value, p), ["stop"])),
      onContextmenu: m[5] || (m[5] = (p) => unref(u)(l.value, p))
    }, [
      createVNode(lo, mergeProps(f.value, {
        config: k.value,
        "data-edge-id": l.value[0]
      }), null, 16, ["config", "data-edge-id"]),
      createVNode(ft, {
        "base-x": r.value.x,
        "base-y": r.value.y,
        config: b.value
      }, null, 8, ["base-x", "base-y", "config"]),
      createVNode(ht, {
        text: Object.keys(E.edges).length.toString(),
        x: r.value.x,
        y: r.value.y,
        config: d.value,
        "text-anchor": "middle",
        "dominant-baseline": "central"
      }, null, 8, ["text", "x", "y", "config"])
    ], 34));
  }
});
var dr = { class: "v-ng-edge-overlay" };
var On = defineComponent({
  __name: "VEdgeOverlay",
  props: {
    edgeId: { default: void 0 },
    edge: { default: void 0 },
    edges: { default: () => ({}) },
    state: {},
    isSummarized: { type: Boolean }
  },
  setup(n) {
    const e = n, { svg: t } = Nt(), { scale: o } = de(), i = ct();
    function s() {
      return e.isSummarized ? _.values(i.summarized.stroke, e.edges) : e.state.line.stroke;
    }
    function a(f) {
      return { source: f.p1, target: f.p2 };
    }
    function c(f) {
      if (f.curve)
        return f.curve.center;
      {
        const r = f.origin.p1, l = f.origin.p2;
        return {
          x: (r.x + l.x) / 2,
          y: (r.y + l.y) / 2
        };
      }
    }
    function u() {
      var l;
      if (!t.value)
        return 0;
      const f = (l = e.edgeId) != null ? l : Object.keys(e.edges)[0], r = t.value.querySelector(`path[data-edge-id="${f}"]`);
      return r ? r.getTotalLength() : 0;
    }
    function h(f) {
      var b;
      if (!t.value || !isFinite(f))
        return e.state.position.p1;
      e.state;
      const r = (b = e.edgeId) != null ? b : Object.keys(e.edges)[0], l = t.value.querySelector(`path[data-edge-id="${r}"]`);
      if (!l)
        return e.state.position.p1;
      const d = l.getPointAtLength(f);
      return { x: d.x, y: d.y };
    }
    return (f, r) => (openBlock(), createElementBlock("g", dr, [
      f.isSummarized ? renderSlot(f.$slots, "default", {
        key: 0,
        edges: f.edges,
        isSummarized: f.isSummarized,
        stroke: s(),
        position: a(f.state.origin),
        center: c(f.state),
        hovered: f.state.hovered,
        selected: f.state.selected,
        scale: unref(o),
        length: u(),
        pointAtLength: h
      }) : renderSlot(f.$slots, "default", {
        key: 1,
        edgeId: f.edgeId,
        edge: f.edge,
        edges: { [f.edgeId]: f.edge },
        isSummarized: f.isSummarized,
        stroke: s(),
        position: a(f.state.origin),
        center: c(f.state),
        hovered: f.state.hovered,
        selected: f.state.selected,
        scale: unref(o),
        length: u(),
        pointAtLength: h
      })
    ]));
  }
});
var fr = defineComponent({
  __name: "VEdgeGroups",
  props: {
    hasEdgeOverlaySlot: { type: Boolean }
  },
  setup(n) {
    const { edgeStates: e, edgeZOrderedList: t, layouts: o } = me();
    return (i, s) => (openBlock(true), createElementBlock(Fragment, null, renderList(unref(t), (a) => (openBlock(), createElementBlock(Fragment, null, [
      unref(Ci)(a) ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
        (openBlock(), createBlock(ur, {
          key: a.key,
          edges: a.group.edges,
          layouts: unref(o).nodes
        }, null, 8, ["edges", "layouts"])),
        i.hasEdgeOverlaySlot ? (openBlock(), createBlock(On, {
          key: a.key,
          edges: a.group.edges,
          state: unref(e)[Object.keys(a.group.edges)[0]],
          "is-summarized": true
        }, {
          default: withCtx((c) => [
            renderSlot(i.$slots, "default", mergeProps({ ref_for: true }, c))
          ]),
          _: 2
        }, 1032, ["edges", "state"])) : createCommentVNode("", true)
      ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
        (openBlock(), createBlock(ir, {
          id: a.key,
          key: a.key,
          state: unref(e)[a.key],
          "source-pos": unref(o).nodes[a.edge.source],
          "target-pos": unref(o).nodes[a.edge.target]
        }, null, 8, ["id", "state", "source-pos", "target-pos"])),
        i.hasEdgeOverlaySlot ? (openBlock(), createBlock(On, {
          key: a.key,
          "edge-id": a.key,
          edge: a.edge,
          state: unref(e)[a.key],
          "is-summarized": false
        }, {
          default: withCtx((c) => [
            renderSlot(i.$slots, "default", mergeProps({ ref_for: true }, c))
          ]),
          _: 2
        }, 1032, ["edge-id", "edge", "state"])) : createCommentVNode("", true)
      ], 64))
    ], 64))), 256));
  }
});
var hr = { class: "v-ng-layer-edges v-ng-graph-objects" };
var pr = defineComponent({
  __name: "VEdgesLayer",
  setup(n) {
    const e = useSlots(), t = computed(() => "edge-overlay" in e);
    return (o, i) => (openBlock(), createElementBlock("g", hr, [
      createVNode(Qs),
      createVNode(fr, { "has-edge-overlay-slot": t.value }, createSlots({ _: 2 }, [
        t.value ? {
          name: "default",
          fn: withCtx((s) => [
            renderSlot(o.$slots, "edge-overlay", normalizeProps(guardReactiveProps(s)))
          ]),
          key: "0"
        } : void 0
      ]), 1032, ["has-edge-overlay-slot"])
    ]));
  }
});
var vr = defineComponent({
  __name: "VEdgeLabelPlace",
  props: {
    edgeId: {},
    edge: {},
    state: {}
  },
  setup(n) {
    const e = n, { scale: t } = de(), o = computed(() => Fn(
      e.state.labelPosition,
      e.state.line.stroke,
      e.state.label.margin,
      e.state.label.padding,
      t.value
    ));
    return (i, s) => i.state.loop ? createCommentVNode("", true) : renderSlot(i.$slots, "default", {
      key: 0,
      edgeId: i.edgeId,
      edge: i.edge,
      config: i.state.label,
      area: o.value,
      hovered: i.state.hovered,
      selected: i.state.selected,
      scale: unref(t)
    });
  }
});
var gr = defineComponent({
  __name: "VEdgeLabelsPlace",
  props: {
    edges: {},
    state: {},
    summarizeState: {}
  },
  setup(n) {
    const e = n, { scale: t } = de(), o = computed(() => {
      var i, s;
      return Fn(
        e.state.labelPosition,
        (s = (i = e.summarizeState) == null ? void 0 : i.stroke) != null ? s : e.state.line.stroke,
        e.state.label.margin,
        e.state.label.padding,
        t.value
      );
    });
    return (i, s) => i.state.loop ? createCommentVNode("", true) : renderSlot(i.$slots, "default", {
      key: 0,
      edges: i.edges,
      config: i.state.label,
      area: o.value,
      hovered: i.state.hovered,
      selected: i.state.selected,
      scale: unref(t)
    });
  }
});
var mr = { class: "v-ng-edge-labels" };
var br = defineComponent({
  __name: "VEdgeLabels",
  props: {
    enableEdgeLabel: { type: Boolean, default: false },
    enableEdgesLabel: { type: Boolean, default: false }
  },
  setup(n) {
    const { edgeStates: e, edgeGroupStates: t, summarizedEdgeStates: o } = me(), i = computed(() => {
      const a = {}, c = {};
      return Object.entries(t.edgeGroups).forEach(([u, h]) => {
        Object.keys(h.edges).length > 0 && (h.summarize ? c[u] = h : a[u] = h);
      }), { individual: a, summarized: c };
    });
    function s(a) {
      return Object.keys(a.edges)[0];
    }
    return (a, c) => (openBlock(), createElementBlock("g", mr, [
      a.enableEdgeLabel ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(i.value.individual, (u, h) => (openBlock(), createElementBlock(Fragment, { key: h }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(u.edges, (f, r) => (openBlock(), createBlock(vr, {
          key: r,
          "edge-id": r,
          edge: f,
          state: unref(e)[r]
        }, {
          default: withCtx((l) => [
            renderSlot(a.$slots, "edge-label", mergeProps({ ref_for: true }, l))
          ]),
          _: 2
        }, 1032, ["edge-id", "edge", "state"]))), 128))
      ], 64))), 128)) : createCommentVNode("", true),
      a.enableEdgesLabel ? (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(i.value.summarized, (u, h) => (openBlock(), createBlock(gr, {
        key: h,
        edges: u.edges,
        state: unref(e)[s(u)],
        "summarize-state": unref(o)[s(u)]
      }, {
        default: withCtx((f) => [
          renderSlot(a.$slots, "edges-label", mergeProps({ ref_for: true }, f))
        ]),
        _: 2
      }, 1032, ["edges", "state", "summarize-state"]))), 128)) : createCommentVNode("", true)
    ]));
  }
});
var yr = defineComponent({
  __name: "VEdgeLabelsLayer",
  props: {
    enableEdgeLabel: { type: Boolean, default: false },
    enableEdgesLabel: { type: Boolean, default: false }
  },
  setup(n) {
    return (e, t) => (openBlock(), createBlock(br, {
      "enable-edge-label": e.enableEdgeLabel,
      "enable-edges-label": e.enableEdgesLabel,
      class: "v-ng-layer-edge-labels v-ng-graph-objects"
    }, createSlots({ _: 2 }, [
      e.enableEdgeLabel ? {
        name: "edge-label",
        fn: withCtx((o) => [
          renderSlot(e.$slots, "edge-label", normalizeProps(guardReactiveProps(o)))
        ]),
        key: "0"
      } : void 0,
      e.enableEdgesLabel ? {
        name: "edges-label",
        fn: withCtx((o) => [
          renderSlot(e.$slots, "edges-label", normalizeProps(guardReactiveProps(o)))
        ]),
        key: "1"
      } : void 0
    ]), 1032, ["enable-edge-label", "enable-edges-label"]));
  }
});
var wr = defineComponent({
  __name: "VNodeFocusRing",
  props: {
    id: {},
    state: {},
    pos: { default: void 0 }
  },
  setup(n) {
    const e = n, t = computed(() => {
      var a;
      return ((a = e.pos) == null ? void 0 : a.x) || 0;
    }), o = computed(() => {
      var a;
      return ((a = e.pos) == null ? void 0 : a.y) || 0;
    }), i = lt2(), s = reactive({});
    return watchEffect(() => {
      var c, u, h;
      const a = e.state.shape;
      if (a.type === "circle") {
        const f = {
          type: "circle",
          radius: a.radius + ((c = a.strokeWidth) != null ? c : 0) / 2 + i.focusring.padding + i.focusring.width / 2,
          color: "none",
          strokeWidth: i.focusring.width,
          strokeColor: i.focusring.color,
          strokeDasharray: i.focusring.dasharray
        };
        Object.assign(s, f);
      } else {
        const f = {
          type: "rect",
          width: a.width + ((u = a.strokeWidth) != null ? u : 0) + i.focusring.padding * 2 + i.focusring.width,
          height: a.height + ((h = a.strokeWidth) != null ? h : 0) + i.focusring.padding * 2 + i.focusring.width,
          borderRadius: a.borderRadius > 0 ? a.borderRadius + i.focusring.padding : 0,
          color: "none",
          strokeWidth: i.focusring.width,
          strokeColor: i.focusring.color,
          strokeDasharray: i.focusring.dasharray
        };
        Object.assign(s, f);
      }
    }), (a, c) => (openBlock(), createBlock(ft, {
      class: "v-ng-node-focusring",
      "base-x": t.value,
      "base-y": o.value,
      config: s
    }, null, 8, ["base-x", "base-y", "config"]));
  }
});
var Er = { class: "v-ng-layer-nodes-selections" };
var kr = defineComponent({
  __name: "VFocusringLayer",
  setup(n) {
    const { nodeStates: e } = me(), { selectedNodes: t } = ms(), o = Kt();
    return (i, s) => (openBlock(), createElementBlock("g", Er, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(unref(t), (a) => (openBlock(), createBlock(wr, {
        id: a,
        key: a,
        state: unref(e)[a],
        pos: unref(o).nodes[a]
      }, null, 8, ["id", "state", "pos"]))), 128))
    ]));
  }
});
var xr = ["transform"];
var zn = defineComponent({
  __name: "VNode",
  props: {
    id: {},
    state: {},
    pos: { default: void 0 }
  },
  setup(n) {
    const e = n, t = computed(() => {
      var r;
      return ((r = e.pos) == null ? void 0 : r.x) || 0;
    }), o = computed(() => {
      var r;
      return ((r = e.pos) == null ? void 0 : r.y) || 0;
    }), { scale: i } = de(), {
      handleNodePointerDownEvent: s,
      handleNodePointerOverEvent: a,
      handleNodePointerOutEvent: c,
      handleNodeClickEvent: u,
      handleNodeDoubleClickEvent: h,
      handleNodeContextMenu: f
    } = Ye();
    return (r, l) => (openBlock(), createElementBlock("g", {
      class: normalizeClass({ "v-ng-node": true, hover: r.state.hovered, selected: r.state.selected }),
      transform: `translate(${t.value} ${o.value})`,
      onPointerdown: l[0] || (l[0] = withModifiers((d) => unref(s)(r.id, d), ["stop"])),
      onPointerenterPassive: l[1] || (l[1] = (d) => unref(a)(r.id, d)),
      onPointerleavePassive: l[2] || (l[2] = (d) => unref(c)(r.id, d)),
      onClick: l[3] || (l[3] = withModifiers((d) => unref(u)(r.id, d), ["stop"])),
      onDblclick: l[4] || (l[4] = withModifiers((d) => unref(h)(r.id, d), ["stop"])),
      onContextmenu: l[5] || (l[5] = (d) => unref(f)(r.id, d))
    }, [
      renderSlot(r.$slots, "override-node", {
        nodeId: r.id,
        scale: unref(i),
        config: r.state.shape,
        class: normalizeClass({ draggable: r.state.draggable, selectable: r.state.selectable })
      }, () => [
        createVNode(ft, {
          config: r.state.shape,
          class: normalizeClass({
            "v-ng-node-default": true,
            draggable: r.state.draggable,
            selectable: r.state.selectable
          })
        }, null, 8, ["config", "class"])
      ])
    ], 42, xr));
  }
});
var Pr = defineComponent({
  __name: "VNodesLayer",
  setup(n) {
    const e = useSlots(), t = computed(() => "override-node" in e), { nodeZOrderedList: o } = me(), i = lt2(), s = Kt();
    return (a, c) => t.value ? (openBlock(), createBlock(TransitionGroup, {
      key: 0,
      name: unref(i).transition,
      css: !!unref(i).transition,
      tag: "g",
      class: "v-ng-layer-nodes v-ng-graph-objects"
    }, {
      default: withCtx(() => [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(o), (u) => (openBlock(), createBlock(zn, {
          id: u.id,
          key: u.id,
          state: u,
          pos: unref(s).nodes[u.id]
        }, {
          "override-node": withCtx((h) => [
            renderSlot(a.$slots, "override-node", mergeProps({ ref_for: true }, h))
          ]),
          _: 2
        }, 1032, ["id", "state", "pos"]))), 128))
      ]),
      _: 3
    }, 8, ["name", "css"])) : (openBlock(), createBlock(TransitionGroup, {
      key: 1,
      name: unref(i).transition,
      css: !!unref(i).transition,
      tag: "g",
      class: "v-ng-layer-nodes v-ng-graph-objects"
    }, {
      default: withCtx(() => [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(o), (u) => (openBlock(), createBlock(zn, {
          id: u.id,
          key: u.id,
          state: u,
          pos: unref(s).nodes[u.id]
        }, null, 8, ["id", "state", "pos"]))), 128))
      ]),
      _: 1
    }, 8, ["name", "css"]));
  }
});
var co = {
  [D.NORTH]: 0,
  [D.NORTH_EAST]: 1,
  [D.EAST]: 2,
  [D.SOUTH_EAST]: 3,
  [D.SOUTH]: 4,
  [D.SOUTH_WEST]: 5,
  [D.WEST]: 6,
  [D.NORTH_WEST]: 7,
  [D.CENTER]: -1
};
var Sr = [
  /* N */
  (n, e) => ke(n, 0, e ? 90 : 60),
  /* NE */
  (n, e) => ke(n, 45, e ? 90 : 45),
  /* E */
  (n, e) => ke(n, 90, e ? 60 : 30),
  /* SE */
  (n, e) => ke(n, 135, e ? 90 : 45),
  /* S */
  (n, e) => ke(n, 180, e ? 90 : 60),
  /* SW */
  (n, e) => ke(n, 225, e ? 90 : 45),
  /* W */
  (n, e) => ke(n, 270, e ? 60 : 30),
  /* NW */
  (n, e) => ke(n, 315, e ? 90 : 45)
];
function Mr(n, e, t, o, i) {
  if (i === D.CENTER)
    return D.CENTER;
  const s = [];
  Object.entries(t).forEach(([h, f]) => {
    let r = false;
    if (f.nodeId === n) {
      const d = o(h);
      d && (r = true, f = Be(oe({}, f), {
        pos: { x: d.x, y: d.y }
      }));
    }
    const l = (Ut(jt(f.pos, e)) + 360 + 90) % 360;
    s.push([l, r]);
  });
  const a = Cr(i), u = [
    a,
    (a + 4) % 8,
    // priority is given to diagonals
    (a + 2) % 8,
    (a - 2 + 8) % 8,
    (a + 1) % 8,
    (a - 1 + 8) % 8,
    (a + 3) % 8,
    (a - 3 + 8) % 8
  ].find((h) => s.every((f) => !Sr[h](...f)));
  return u === void 0 ? i : Or(u, i);
}
function ke(n, e, t) {
  n %= 360;
  const o = (e - t + 360) % 360, i = (e + t) % 360;
  return o <= i ? o < n && n < i : o < n || n < i;
}
function Cr(n) {
  var e;
  return (e = co[n]) != null ? e : 0;
}
function Or(n, e) {
  var t, o;
  return (o = (t = Object.entries(co)[n]) == null ? void 0 : t[0]) != null ? o : e;
}
var zr = ["transform"];
var Tn = defineComponent({
  __name: "VNodeLabel",
  props: {
    id: {},
    state: {},
    pos: { default: void 0 }
  },
  setup(n) {
    const e = n, t = lt2(), { edgeStates: o } = me(), { scale: i } = de(), {
      handleNodePointerDownEvent: s,
      handleNodePointerOverEvent: a,
      handleNodePointerOutEvent: c,
      handleNodeClickEvent: u,
      handleNodeDoubleClickEvent: h,
      handleNodeContextMenu: f
    } = Ye(), r = computed(() => {
      var C;
      return ((C = e.pos) == null ? void 0 : C.x) || 0;
    }), l = computed(() => {
      var C;
      return ((C = e.pos) == null ? void 0 : C.y) || 0;
    }), d = computed(() => e.state.label.direction === D.CENTER ? 0 : e.state.label.margin * i.value), b = ref(0), k = ref(0), g = ref(0), v = ref(0), w = computed(() => {
      var N;
      const C = e.state.label.direction, T = e.state.label.directionAutoAdjustment;
      if (T === false)
        return C;
      const $ = { x: r.value, y: l.value };
      return T === true ? Mr(
        e.state.id,
        $,
        e.state.oppositeNodes,
        (G) => {
          var B, H;
          return (H = (B = o[G]) == null ? void 0 : B.loop) == null ? void 0 : H.center;
        },
        C
      ) : (N = T({
        nodeId: e.state.id,
        pos: $,
        oppositeNodes: e.state.oppositeNodes
      })) != null ? N : C;
    }), E = computed(() => {
      switch (w.value) {
        case D.CENTER:
        case D.NORTH:
        case D.SOUTH:
          return "middle";
        case D.EAST:
        case D.NORTH_EAST:
        case D.SOUTH_EAST:
          return "start";
        case D.WEST:
        case D.NORTH_WEST:
        case D.SOUTH_WEST:
        default:
          return "end";
      }
    }), m = computed(() => {
      switch (w.value) {
        case D.NORTH:
        case D.NORTH_EAST:
        case D.NORTH_WEST:
          return "text-top";
        case D.SOUTH:
        case D.SOUTH_EAST:
        case D.SOUTH_WEST:
          return "hanging";
        case D.CENTER:
        case D.EAST:
        case D.WEST:
        default:
          return "central";
      }
    }), p = computed(() => {
      switch (w.value) {
        case D.CENTER:
        case D.NORTH:
        case D.SOUTH:
          return 0;
        case D.EAST:
          return k.value;
        case D.WEST:
          return -k.value;
        case D.NORTH_EAST:
        case D.SOUTH_EAST:
          return v.value;
        case D.NORTH_WEST:
        case D.SOUTH_WEST:
        default:
          return -v.value;
      }
    }), y = computed(() => {
      switch (w.value) {
        case D.NORTH:
          return -b.value;
        case D.SOUTH:
          return b.value;
        case D.CENTER:
        case D.EAST:
        case D.WEST:
          return 0;
        case D.NORTH_EAST:
        case D.NORTH_WEST:
          return -g.value;
        case D.SOUTH_EAST:
        case D.SOUTH_WEST:
        default:
          return g.value;
      }
    });
    watchEffect(() => {
      const C = i.value, T = e.state.shape;
      if (T.type == "circle") {
        const $ = T.radius * C, N = $ + d.value, G = Math.sqrt(ie(N, 2) / 2);
        b.value = $ + d.value, k.value = $ + d.value, g.value = G, v.value = G;
      } else {
        const $ = T.borderRadius * C, N = T.width * C, G = T.height * C, B = $ + d.value, H = Math.sqrt(ie(B, 2) / 2);
        b.value = G / 2 + d.value, k.value = N / 2 + d.value, g.value = G / 2 - $ + H, v.value = N / 2 - $ + H;
      }
    });
    const x = computed(() => (C) => t.label.handleNodeEvents ? {
      pointerdown: (T) => {
        T.stopPropagation(), s(C, T);
      },
      pointerenter: (T) => a(C, T),
      pointerleave: (T) => c(C, T),
      click: (T) => {
        T.stopPropagation(), u(C, T);
      },
      dblclick: (T) => {
        T.stopPropagation(), h(C, T);
      },
      contextmenu: (T) => {
        f(C, T);
      }
    } : {}), z = computed(() => {
      const C = t.label.handleNodeEvents;
      return {
        "v-ng-node-label": true,
        hover: C && e.state.hovered,
        selected: C && e.state.selected
      };
    }), L = computed(() => {
      const C = t.label.handleNodeEvents;
      return {
        draggable: C && e.state.draggable,
        selectable: C && e.state.selectable
      };
    });
    return (C, T) => (openBlock(), createElementBlock("g", mergeProps({
      class: z.value,
      transform: `translate(${r.value} ${l.value})`
    }, toHandlers(x.value(C.id), true)), [
      renderSlot(C.$slots, "override-node-label", {
        nodeId: C.id,
        scale: unref(i),
        text: C.state.labelText,
        x: p.value,
        y: y.value,
        config: C.state.label,
        shape: C.state.shape,
        textAnchor: E.value,
        dominantBaseline: m.value,
        class: normalizeClass(L.value)
      }, () => [
        createVNode(ht, {
          text: C.state.labelText,
          x: 0,
          y: 0,
          config: C.state.label,
          "text-anchor": E.value,
          "dominant-baseline": m.value,
          class: normalizeClass(L.value),
          transform: `translate(${p.value} ${y.value})`
        }, null, 8, ["text", "config", "text-anchor", "dominant-baseline", "class", "transform"])
      ])
    ], 16, zr));
  }
});
var Tr = defineComponent({
  __name: "VNodeLabelsLayer",
  setup(n) {
    const e = useSlots(), t = computed(() => "override-node-label" in e), { nodeZOrderedList: o } = me(), i = lt2(), s = Kt(), a = computed(() => c(o.value));
    function c(u) {
      return u.filter((h) => {
        var f;
        return h.label.visible && ((f = h.labelText) != null ? f : false);
      });
    }
    return (u, h) => t.value ? (openBlock(), createBlock(TransitionGroup, {
      key: 0,
      name: unref(i).transition,
      css: !!unref(i).transition,
      tag: "g",
      class: "v-ng-layer-node-labels v-ng-graph-objects"
    }, {
      default: withCtx(() => [
        (openBlock(true), createElementBlock(Fragment, null, renderList(a.value, (f) => (openBlock(), createBlock(Tn, {
          id: f.id,
          key: f.id,
          state: f,
          pos: unref(s).nodes[f.id]
        }, {
          "override-node-label": withCtx((r) => [
            renderSlot(u.$slots, "override-node-label", mergeProps({ ref_for: true }, r))
          ]),
          _: 2
        }, 1032, ["id", "state", "pos"]))), 128))
      ]),
      _: 3
    }, 8, ["name", "css"])) : (openBlock(), createBlock(TransitionGroup, {
      key: 1,
      name: unref(i).transition,
      css: !!unref(i).transition,
      tag: "g",
      class: "v-ng-layer-node-labels v-ng-graph-objects"
    }, {
      default: withCtx(() => [
        (openBlock(true), createElementBlock(Fragment, null, renderList(a.value, (f) => (openBlock(), createBlock(Tn, {
          id: f.id,
          key: f.id,
          state: f,
          pos: unref(s).nodes[f.id]
        }, null, 8, ["id", "state", "pos"]))), 128))
      ]),
      _: 1
    }, 8, ["name", "css"]));
  }
});
var _r = ["d", "stroke", "stroke-width", "stroke-dasharray", "stroke-linecap", "stroke-linejoin"];
var Ir = defineComponent({
  __name: "VPath",
  props: {
    path: {}
  },
  setup(n) {
    const e = n, { nodeStates: t, edgeStates: o, layouts: i } = me(), { scale: s } = de(), a = Nn();
    function c(l) {
      if (l.edges.length === 0)
        return [];
      const d = _.value(a.margin, l.path) * s.value;
      return vi(
        l,
        t,
        i.nodes,
        o,
        s.value,
        a.curveInNode,
        a.end,
        d
      );
    }
    function u(l) {
      const d = c(l);
      let b = true;
      return d.map((k) => {
        if (k === null)
          b = true;
        else {
          if (typeof k == "string")
            return k;
          if (k instanceof Array) {
            k = [...k];
            const g = [];
            if (k.length % 2 === 1) {
              const v = k[0];
              k = k.slice(1), g.push(`L ${v.x} ${v.y}`);
            }
            return chunk_default(k, 2).map(([v, w]) => g.push(`Q ${v.x} ${v.y} ${w.x} ${w.y}`)), g.join(" ");
          } else {
            const g = b;
            return b = false, `${g ? "M " : "L "}${k.x} ${k.y}`;
          }
        }
      }).join(" ");
    }
    const h = computed(() => {
      const l = e.path;
      return l.selected ? _.values(a.selected, l.path) : l.hovered && a.hover ? _.values(a.hover, l.path) : _.values(a.normal, l.path);
    }), f = computed(() => Ke(h.value.dasharray, s.value)), r = computed(() => {
      const l = h.value.animate ? rt(h.value.dasharray) * h.value.animationSpeed * s.value : false;
      return l ? { "--animation-speed": l } : void 0;
    });
    return (l, d) => (openBlock(), createElementBlock("path", {
      class: normalizeClass({
        "v-ng-path": true,
        animate: h.value.animate,
        clickable: l.path.clickable,
        hoverable: l.path.hoverable
      }),
      d: u(l.path),
      fill: "none",
      stroke: h.value.color,
      "stroke-width": h.value.width * unref(s),
      "stroke-dasharray": f.value,
      "stroke-linecap": h.value.linecap,
      "stroke-linejoin": h.value.linejoin,
      style: normalizeStyle(r.value)
    }, null, 14, _r));
  }
});
var Lr = defineComponent({
  __name: "VPaths",
  setup(n) {
    const { pathZOrderedList: e } = me(), t = Nn(), {
      handlePathPointerDownEvent: o,
      handlePathPointerOverEvent: i,
      handlePathPointerOutEvent: s,
      handlePathClickEvent: a,
      handlePathDoubleClickEvent: c,
      handlePathContextMenu: u
    } = Ye();
    return (h, f) => (openBlock(), createBlock(TransitionGroup, {
      name: unref(t).transition,
      css: !!unref(t).transition,
      tag: "g",
      class: "v-ng-paths v-ng-layer-paths v-ng-graph-objects"
    }, {
      default: withCtx(() => [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(e), (r) => (openBlock(), createBlock(Ir, {
          key: r.id,
          path: r,
          onPointerdown: (l) => unref(o)(r.id, l),
          onPointerenterPassive: (l) => unref(i)(r.id, l),
          onPointerleavePassive: (l) => unref(s)(r.id, l),
          onClick: withModifiers((l) => unref(a)(r.id, l), ["stop"]),
          onDblclick: withModifiers((l) => unref(c)(r.id, l), ["stop"]),
          onContextmenu: (l) => unref(u)(r.id, l)
        }, null, 8, ["path", "onPointerdown", "onPointerenterPassive", "onPointerleavePassive", "onClick", "onDblclick", "onContextmenu"]))), 128))
      ]),
      _: 1
    }, 8, ["name", "css"]));
  }
});
var $r = defineComponent({
  __name: "VPathsLayer",
  setup(n) {
    return (e, t) => (openBlock(), createBlock(Lr));
  }
});
var Ar = { key: 0 };
var Zr = defineComponent({
  __name: "VNetworkGraph",
  props: {
    nodes: { default: () => ({}) },
    edges: { default: () => ({}) },
    paths: { default: () => ({}) },
    layouts: { default: () => ({}) },
    zoomLevel: { default: 1 },
    selectedNodes: { default: () => [] },
    selectedEdges: { default: () => [] },
    selectedPaths: { default: () => [] },
    configs: { default: () => ({}) },
    layers: { default: () => ({}) },
    eventHandlers: { default: () => ({}) }
  },
  emits: ["update:zoomLevel", "update:selectedNodes", "update:selectedEdges", "update:selectedPaths", "update:layouts"],
  setup(n, { expose: e, emit: t }) {
    const o = [
      "override-node",
      "override-node-label",
      "edge-overlay",
      "edge-label",
      "edges-label"
    ], i = n, s = t, a = useSlots(), c = toRef(i, "nodes"), u = toRef(i, "edges"), { objects: h, isInCompatibilityModeForPath: f } = ps(
      toRef(i, "paths")
    ), r = Qi();
    Object.entries(i.eventHandlers).forEach(([P, Z]) => {
      r.on(P, Z);
    });
    const l = Go(toRef(i, "configs")), d = computed(() => {
      const P = new Set(Object.keys(a));
      o.forEach((A) => P.delete(A));
      const Z = Object.fromEntries(Uo.map((A) => [A, []]));
      return Object.assign(
        Z,
        Object.entries(i.layers).reduce(
          (A, [V, ee]) => (P.delete(V), ee in A ? A[ee].push(V) : A[ee] = [V], A),
          {}
        )
      ), Z.root.push(...P), Z;
    }), b = computed(() => l.view.grid.visible), k = computed(() => {
      const P = d.value;
      return b.value || P.background.length > 0 || P.grid.length > 0;
    }), g = Es(l, a), v = ref(), w = ref(), E = ref(), m = ref(
      0
      /* INITIAL */
    ), p = computed(
      () => m.value !== 0
      /* INITIAL */
    ), y = vs(i, "zoomLevel", s, (P) => (P = Math.max(P, l.view.minZoomLevel), P = Math.min(P, l.view.maxZoomLevel), P)), { svgPanZoom: x, onSvgPanZoomMounted: z, onSvgPanZoomUnmounted: L } = us(w, {
      viewportSelector: ".v-ng-viewport",
      minZoom: l.view.minZoomLevel,
      // temporary
      maxZoom: l.view.maxZoomLevel,
      // temporary
      dblClickZoomEnabled: tn(l.view),
      mouseWheelZoomEnabled: gt2(l.view),
      fit: l.view.autoPanAndZoomOnLoad === "fit-content",
      center: l.view.autoPanAndZoomOnLoad !== false,
      zoomEnabled: l.view.zoomEnabled,
      preventMouseEventsDefault: false,
      onZoom: (P) => {
        var A, V;
        if (m.value === 2)
          return;
        const Z = (V = (A = x.value) == null ? void 0 : A.getRealZoom()) != null ? V : 1;
        Math.abs(y.value - Z) >= 1e-6 && (y.value = Z, r.emit("view:zoom", Z));
      },
      panEnabled: l.view.panEnabled,
      onPan: (P) => {
        m.value !== 2 && r.emit("view:pan", P);
      }
    });
    Fo({ container: v, svg: w, viewport: E, svgPanZoom: x });
    const C = { width: 0, height: 0 }, T = globalThis.ResizeObserver ? new ResizeObserver(() => {
      var Z, A, V;
      if ((Z = x.value) == null || Z.resize(), !l.view.autoPanOnResize)
        return;
      const P = (A = v.value) == null ? void 0 : A.getBoundingClientRect();
      if (P) {
        const ee = -(C.width - P.width) / 2, Te = -(C.height - P.height) / 2;
        (V = x.value) == null || V.panBy({ x: ee, y: Te });
        const { width: ye, height: mt } = P;
        (C.width !== ye || C.height !== mt) && (Object.assign(C, { width: ye, height: mt }), r.emit("view:resize", { x: P.x, y: P.y, width: ye, height: mt }));
      }
    }) : void 0;
    z(() => {
      var ee, Te, ye;
      const P = q(v.value, "svg-pan-zoom container");
      T == null || T.observe(P), (Te = (ee = l.view).onSvgPanZoomInitialized) == null || Te.call(ee, q(x.value, "svg-pan-zoom instance"));
      const Z = P.getBoundingClientRect(), { width: A, height: V } = Z;
      Object.assign(C, { width: A, height: V }), (ye = E.value) == null || ye.addEventListener("touchstart", nn, { passive: false });
    }), L(() => {
      var P;
      T == null || T.disconnect(), (P = E.value) == null || P.removeEventListener("touchstart", nn);
    });
    const $ = (P) => {
      var Z;
      (Z = x.value) == null || Z.applyAbsoluteZoomLevel(
        P,
        l.view.minZoomLevel,
        l.view.maxZoomLevel
      );
    };
    watch(
      () => l.view.panEnabled,
      (P) => {
        var Z;
        (Z = x.value) == null || Z.setPanEnabled(P);
      }
    ), watch(
      () => [
        l.view.zoomEnabled,
        tn(l.view),
        gt2(l.view)
      ],
      () => {
        const P = x.value;
        P && _o(
          P,
          l.view.zoomEnabled,
          l.view.doubleClickZoomEnabled,
          l.view.mouseWheelZoomEnabled
        );
      }
    ), watch(y, (P) => $(P)), watch(
      () => [l.view.minZoomLevel, l.view.maxZoomLevel],
      (P) => {
        $(y.value);
      }
    );
    const { scale: N } = ds(y, l.view);
    z(() => {
      const P = i.zoomLevel;
      $(P);
    });
    const G = () => pe(this, null, function* () {
      var P;
      Object.keys(i.nodes).length > 0 && ((P = x.value) == null || P.updateBBox(), yield Cn());
    }), B = (P) => pe(this, null, function* () {
      var Te, ye;
      const Z = !P || P.margin === void 0 ? l.view.fitContentMargin : P.margin;
      yield G();
      const A = q(w.value).getBoundingClientRect(), V = Os(Z, A), ee = zs(
        q(E.value),
        A,
        be.nodes,
        y.value,
        V,
        l.view.scalingObjects
      );
      ee ? ($(ee.zoom), (Te = x.value) == null || Te.pan(ee.pos)) : (ye = x.value) == null || ye.center(), r.emit("view:fit", void 0);
    }), H = () => pe(this, null, function* () {
      var P;
      yield G(), (P = x.value) == null || P.center();
    }), fe = () => {
      var P, Z;
      return (Z = (P = x.value) == null ? void 0 : P.getViewBox()) != null ? Z : {
        top: 0,
        bottom: 0,
        left: 0,
        right: 0
      };
    }, se = (P) => {
      var Z;
      return (Z = x.value) == null ? void 0 : Z.setViewBox(P);
    }, ge = Ct(i, "selectedNodes", c, s);
    watch(ge, (P) => r.emit("node:select", Array.from(P)));
    const Oe = Ct(i, "selectedEdges", u, s);
    watch(Oe, (P) => r.emit("edge:select", Array.from(P)));
    const ze = Ct(i, "selectedPaths", h, s);
    watch(ze, (P) => r.emit("path:select", Array.from(P))), gs(ge, Oe, ze);
    const re = xe(/* @__PURE__ */ new Set()), Le = xe(/* @__PURE__ */ new Set()), $e = xe(/* @__PURE__ */ new Set()), be = xe({ nodes: {} });
    bs(be), watch(
      () => i.layouts,
      () => {
        var P;
        return Object.assign(be.nodes, (P = i.layouts.nodes) != null ? P : {});
      },
      { deep: true, immediate: true }
    ), watch(be, () => s("update:layouts", be), { deep: true });
    const pt = Ei(), vt = ref(false);
    r.on("node:dragstart", (P) => vt.value = true), r.on("node:dragend", (P) => vt.value = false), r.on("view:mode", (P) => {
      var Z, A, V, ee;
      l.view.panEnabled && (P === "default" ? (Z = x.value) == null || Z.enablePan() : (A = x.value) == null || A.disablePan()), l.view.zoomEnabled && (P === "default" ? (V = x.value) == null || V.enableZoom() : (ee = x.value) == null || ee.disableZoom());
    });
    const uo = computed(() => l.view.panEnabled || l.view.zoomEnabled || l.node.draggable), { nodeStates: fo, edgeStates: ho, pathStates: po } = Mi(
      wt(c, ge, re),
      wt(u, Oe, Le),
      wt(h, ze, $e),
      readonly(l),
      be,
      i.layouts,
      pt,
      N
    ), vo = computed(() => gt2(l.view)), { isBoxSelectionMode: go, selectionBox: Yt, startBoxSelection: mo, stopBoxSelection: bo } = Ki(
      w,
      readonly(be),
      readonly(y),
      fo,
      ho,
      po,
      ge,
      Oe,
      ze,
      re,
      Le,
      $e,
      f,
      vo,
      l,
      r
    ), Qt = () => ({
      layouts: xe(be.nodes),
      // deprecated parameter.
      nodePositions: toRef(be, "nodes"),
      nodes: c,
      edges: u,
      configs: readonly(l),
      scale: readonly(N),
      emitter: r,
      svgPanZoom: q(x.value)
    });
    watch(
      () => l.view.layoutHandler,
      (P, Z) => {
        Z.deactivate(), P.activate(Qt());
      }
    );
    const { transitionWhile: yo, transitionOption: Jt } = hs(), wo = computed(() => {
      const P = Jt.value;
      return P.enabled ? {
        "--transition-duration": P.duration + "ms",
        "--transition-function": P.timingFunction
      } : {};
    });
    z(() => pe(this, null, function* () {
      if (l.view.onBeforeInitialDisplay) {
        const A = l.view.onBeforeInitialDisplay();
        Jo(A) && (yield A);
      }
      const P = q(x.value, "svg-pan-zoom");
      l.view.layoutHandler.activate(Qt()), yield Cn();
      const Z = l.view.autoPanAndZoomOnLoad;
      if (l.view.fit || Z !== false) {
        const A = Object.keys(i.nodes).length == 0, V = P.getPan();
        if (A || Z === "center-zero") {
          yield G();
          const ee = P.getSizes();
          P.pan({
            x: ee.width / 2,
            y: ee.height / 2
          });
        } else
          Z === "fit-content" || l.view.fit ? yield B() : Z === "center-content" ? yield H() : yield G();
        nextTick(() => {
          const ee = P.getPan();
          V.x === ee.x && V.y === ee.y && r.emit("view:pan", ee);
        });
      } else
        yield G();
      r.emit("view:load"), m.value = 1;
    })), L(() => {
      m.value = 2, r.emit("view:unload"), l.view.layoutHandler.deactivate();
    });
    function Eo() {
      var P;
      (P = x.value) == null || P.zoomIn();
    }
    function ko() {
      var P;
      (P = x.value) == null || P.zoomOut();
    }
    function xo(P) {
      var Z;
      (Z = x.value) == null || Z.pan(P);
    }
    function Po(P) {
      var Z;
      (Z = x.value) == null || Z.panBy(P);
    }
    function So() {
      return q(x.value).getPan();
    }
    function Mo() {
      const P = q(x.value).getSizes();
      return {
        width: P.width,
        height: P.height,
        viewBox: P.viewBox
      };
    }
    function Co(P) {
      return $t(
        q(w.value, "svg"),
        q(E.value, "viewport"),
        P
      );
    }
    function Oo(P) {
      return Wi(
        q(w.value, "svg"),
        q(E.value, "viewport"),
        P
      );
    }
    function zo() {
      return Qn(
        q(w.value, "svg"),
        q(E.value, "viewport"),
        N.value
      ).outerHTML;
    }
    function To() {
      return pe(this, arguments, function* (P = {}) {
        return (yield en(P)).outerHTML;
      });
    }
    function en() {
      return pe(this, arguments, function* (P = {}) {
        return Ui(
          q(w.value, "svg"),
          q(E.value, "viewport"),
          N.value,
          P
        );
      });
    }
    e({
      // methods
      fitToContents: B,
      panToCenter: H,
      getViewBox: fe,
      setViewBox: se,
      transitionWhile: yo,
      startBoxSelection: mo,
      stopBoxSelection: bo,
      zoomIn: Eo,
      zoomOut: ko,
      panTo: xo,
      panBy: Po,
      getPan: So,
      getSizes: Mo,
      translateFromDomToSvgCoordinates: Co,
      translateFromSvgToDomCoordinates: Oo,
      getAsSvg: zo,
      exportAsSvgText: To,
      exportAsSvgElement: en
    });
    function _o(P, Z, A, V) {
      P.setZoomEnabled(Z), Z && A ? P.enableDblClickZoom() : P.disableDblClickZoom(), Z && V ? P.enableMouseWheelZoom() : P.disableMouseWheelZoom();
    }
    function tn(P) {
      return P.zoomEnabled && P.doubleClickZoomEnabled;
    }
    function gt2(P) {
      return P.zoomEnabled && P.mouseWheelZoomEnabled;
    }
    function nn(P) {
      P.stopPropagation();
    }
    return (P, Z) => (openBlock(), createElementBlock("div", {
      ref_key: "container",
      ref: v,
      class: "v-network-graph v-ng-container"
    }, [
      (openBlock(), createElementBlock("svg", {
        ref_key: "svg",
        ref: w,
        class: normalizeClass(["v-ng-canvas", { show: p.value, dragging: vt.value, touches: uo.value, "box-selection-mode": unref(go) }]),
        width: "100%",
        height: "100%"
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(d.value.root, (A) => renderSlot(P.$slots, A, {
          key: A,
          scale: unref(N)
        })), 128)),
        Object.keys(unref(pt).markers).length > 0 ? (openBlock(), createElementBlock("defs", Ar, [
          (openBlock(true), createElementBlock(Fragment, null, renderList(unref(pt).markers, (A, V) => (openBlock(), createBlock(Vs, {
            id: V,
            key: V,
            marker: A,
            scale: unref(N)
          }, null, 8, ["id", "marker", "scale"]))), 128))
        ])) : createCommentVNode("", true),
        k.value ? (openBlock(), createBlock(Gs, { key: 1 }, {
          default: withCtx(() => [
            (openBlock(true), createElementBlock(Fragment, null, renderList(d.value.background, (A) => (openBlock(), createElementBlock("g", {
              key: A,
              class: "v-ng-layer"
            }, [
              renderSlot(P.$slots, A, { scale: unref(N) })
            ]))), 128)),
            b.value ? (openBlock(), createBlock(Xs, { key: 0 })) : createCommentVNode("", true),
            (openBlock(true), createElementBlock(Fragment, null, renderList(d.value.grid, (A) => (openBlock(), createElementBlock("g", {
              key: A,
              class: "v-ng-layer"
            }, [
              renderSlot(P.$slots, A, { scale: unref(N) })
            ]))), 128))
          ]),
          _: 3
        })) : createCommentVNode("", true),
        createBaseVNode("g", {
          ref_key: "viewport",
          ref: E,
          class: normalizeClass(["v-ng-viewport", { "v-ng-transition": unref(Jt).enabled }]),
          style: normalizeStyle(wo.value)
        }, [
          (openBlock(true), createElementBlock(Fragment, null, renderList(d.value.base, (A) => (openBlock(), createElementBlock("g", {
            key: A,
            class: "v-ng-layer"
          }, [
            renderSlot(P.$slots, A, { scale: unref(N) })
          ]))), 128)),
          (openBlock(true), createElementBlock(Fragment, null, renderList(unref(g), (A) => (openBlock(), createElementBlock(Fragment, { key: A }, [
            A === "edges" ? (openBlock(), createBlock(pr, { key: 0 }, createSlots({ _: 2 }, [
              "edge-overlay" in a ? {
                name: "edge-overlay",
                fn: withCtx((V) => [
                  renderSlot(P.$slots, "edge-overlay", mergeProps({ ref_for: true }, V))
                ]),
                key: "0"
              } : void 0
            ]), 1024)) : A === "edge-labels" ? (openBlock(), createBlock(yr, {
              key: 1,
              "enable-edge-label": "edge-label" in a,
              "enable-edges-label": "edges-label" in a
            }, {
              "edge-label": withCtx((V) => [
                renderSlot(P.$slots, "edge-label", mergeProps({ ref_for: true }, V))
              ]),
              "edges-label": withCtx((V) => [
                renderSlot(P.$slots, "edges-label", mergeProps({ ref_for: true }, V))
              ]),
              _: 3
            }, 8, ["enable-edge-label", "enable-edges-label"])) : A === "focusring" ? (openBlock(), createBlock(kr, { key: 2 })) : A === "nodes" ? (openBlock(), createBlock(Pr, { key: 3 }, {
              "override-node": withCtx((V) => [
                renderSlot(P.$slots, "override-node", mergeProps({ ref_for: true }, V))
              ]),
              _: 3
            })) : A === "node-labels" ? (openBlock(), createBlock(Tr, { key: 4 }, {
              "override-node-label": withCtx((V) => [
                renderSlot(P.$slots, "override-node-label", mergeProps({ ref_for: true }, V))
              ]),
              _: 3
            })) : A === "paths" ? (openBlock(), createBlock($r, { key: 5 })) : createCommentVNode("", true),
            (openBlock(true), createElementBlock(Fragment, null, renderList(d.value[A], (V) => (openBlock(), createElementBlock("g", {
              key: V,
              class: "v-ng-layer"
            }, [
              renderSlot(P.$slots, V, { scale: unref(N) })
            ]))), 128))
          ], 64))), 128))
        ], 6),
        unref(Yt) ? (openBlock(), createBlock($s, {
          key: 2,
          box: unref(Yt),
          config: unref(l).view.selection.box
        }, null, 8, ["box", "config"])) : createCommentVNode("", true)
      ], 2))
    ], 512));
  }
});
var Dr = (n, e) => {
  const t = n.__vccOpts || n;
  for (const [o, i] of e)
    t[o] = i;
  return t;
};
var Nr = {};
function jr(n, e) {
  return openBlock(), createElementBlock("defs", null, [
    (openBlock(), createBlock(resolveDynamicComponent("style"), null, {
      default: withCtx(() => [
        renderSlot(n.$slots, "default")
      ]),
      _: 3
    }))
  ]);
}
var Br = Dr(Nr, [["render", jr]]);
var Rr = defineComponent({
  __name: "VEdgeLabel",
  props: {
    area: {},
    config: {},
    text: { default: "" },
    align: { default: "center" },
    verticalAlign: { default: "center" },
    edge: { default: void 0 },
    hovered: { type: Boolean, default: void 0 },
    selected: { type: Boolean, default: void 0 },
    scale: { default: void 0 }
  },
  setup(n) {
    const e = n, t = ref(0), o = ref(0), i = ref("middle"), s = ref("central"), a = ref(0);
    watchEffect(() => {
      const u = e.area.source, h = e.area.target;
      e.align === "source" ? (u.above.x == h.above.x ? i.value = u.above.y > h.above.y ? "start" : "end" : i.value = u.above.x < h.above.x ? "start" : "end", e.verticalAlign === "above" ? (t.value = u.above.x, o.value = u.above.y, s.value = "text-top") : e.verticalAlign === "below" ? (t.value = u.below.x, o.value = u.below.y, s.value = "hanging") : (t.value = (u.above.x + u.below.x) / 2, o.value = (u.above.y + u.below.y) / 2, s.value = "central")) : e.align === "target" ? (u.above.x == h.above.x ? i.value = u.above.y < h.above.y ? "start" : "end" : i.value = u.above.x > h.above.x ? "start" : "end", e.verticalAlign === "above" ? (t.value = h.above.x, o.value = h.above.y, s.value = "text-top") : e.verticalAlign === "below" ? (t.value = h.below.x, o.value = h.below.y, s.value = "hanging") : (t.value = (h.above.x + h.below.x) / 2, o.value = (h.above.y + h.below.y) / 2, s.value = "central")) : (i.value = "middle", e.verticalAlign === "above" ? (t.value = (u.above.x + h.above.x) / 2, o.value = (u.above.y + h.above.y) / 2, s.value = "text-top") : e.verticalAlign === "below" ? (t.value = (u.below.x + h.below.x) / 2, o.value = (u.below.y + h.below.y) / 2, s.value = "hanging") : (t.value = (u.above.x + h.below.x) / 2, o.value = (u.above.y + h.below.y) / 2, s.value = "central"));
      let f = Y.fromPositions(u.above, h.above).v.angleDegree();
      (f < -90 || f >= 90) && (f = f + 180, f > 180 && (f -= 360)), a.value = f;
    });
    const c = computed(() => s.value === "central" && !e.config.background ? Be(oe({}, e.config), {
      background: {
        visible: true,
        color: "#ffffff",
        padding: {
          vertical: 1,
          horizontal: 4
        },
        borderRadius: 2
      }
    }) : e.config);
    return (u, h) => (openBlock(), createBlock(ht, {
      class: "v-ng-edge-label",
      text: u.text,
      x: t.value,
      y: o.value,
      config: c.value,
      "text-anchor": i.value,
      "dominant-baseline": s.value,
      transform: `rotate(${a.value} ${t.value} ${o.value})`
    }, null, 8, ["text", "x", "y", "config", "text-anchor", "dominant-baseline", "transform"]));
  }
});
var Vr = Object.freeze(Object.defineProperty({
  __proto__: null,
  VEdgeLabel: Rr,
  VLabelText: ht,
  VNetworkGraph: Zr,
  VShape: ft,
  VStyle: Br
}, Symbol.toStringTag, { value: "Module" }));
var Wr = 10;
var Kr = class extends An {
  constructor(e = {}) {
    super(), this.options = e;
  }
  setNodePosition(e, t) {
    const o = this.options.grid || Wr;
    e.value.x = Math.floor(t.x / o) * o, e.value.y = Math.floor(t.y / o) * o;
  }
};
var Yr = function(n) {
  Object.entries(Vr).forEach(([e, t]) => {
    n.component(e, t);
  });
};
export {
  _ as Config,
  Kr as GridLayout,
  Uo as LayerPositions,
  D as NodeLabelDirection,
  An as SimpleLayout,
  Rr as VEdgeLabel,
  ht as VLabelText,
  Zr as VNetworkGraph,
  ft as VShape,
  Br as VStyle,
  R as Vector2D,
  qr as configsWithType,
  Yr as default,
  Xr as defineConfigs,
  Gr as getFullConfigs,
  me as useStates,
  bt as withSelf
};
/*! Bundled license information:

lodash-es/lodash.default.js:
  (**
   * @license
   * Lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="es" -o ./`
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   *)

lodash-es/lodash.js:
  (**
   * @license
   * Lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="es" -o ./`
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   *)
*/
//# sourceMappingURL=v-network-graph.js.map
